/* soapH.h
   Generated by gSOAP 2.8.17r from OpenInterface.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_byte(soap, data),0) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_int(soap, data),0) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_bool
#define SOAP_TYPE_bool (62)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_bool(struct soap*, bool *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_bool(struct soap*, const char*, int, const bool *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_bool2s(struct soap*, bool);
SOAP_FMAC3 bool * SOAP_FMAC4 soap_in_bool(struct soap*, const char*, bool *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2bool(struct soap*, const char*, bool *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_bool(struct soap*, const bool *, const char*, const char*);

#ifndef soap_write_bool
#define soap_write_bool(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_bool(soap, data),0) || soap_put_bool(soap, data, "boolean", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 bool * SOAP_FMAC4 soap_get_bool(struct soap*, bool *, const char*, const char*);

#ifndef soap_read_bool
#define soap_read_bool(soap, data) ( soap_begin_recv(soap) || !soap_get_bool(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__ns1__CheckUserInfoResponse
#define SOAP_TYPE__ns1__CheckUserInfoResponse (60)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CheckUserInfoResponse(struct soap*, const char*, int, const _ns1__CheckUserInfoResponse *, const char*);
SOAP_FMAC3 _ns1__CheckUserInfoResponse * SOAP_FMAC4 soap_in__ns1__CheckUserInfoResponse(struct soap*, const char*, _ns1__CheckUserInfoResponse *, const char*);

#ifndef soap_write__ns1__CheckUserInfoResponse
#define soap_write__ns1__CheckUserInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:CheckUserInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__CheckUserInfoResponse * SOAP_FMAC4 soap_get__ns1__CheckUserInfoResponse(struct soap*, _ns1__CheckUserInfoResponse *, const char*, const char*);

#ifndef soap_read__ns1__CheckUserInfoResponse
#define soap_read__ns1__CheckUserInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__CheckUserInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__CheckUserInfoResponse * SOAP_FMAC2 soap_instantiate__ns1__CheckUserInfoResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__CheckUserInfoResponse * soap_new__ns1__CheckUserInfoResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__CheckUserInfoResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__CheckUserInfoResponse * soap_new_req__ns1__CheckUserInfoResponse(struct soap *soap, bool CheckUserInfoResult) { _ns1__CheckUserInfoResponse *_p = soap_instantiate__ns1__CheckUserInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__CheckUserInfoResponse::CheckUserInfoResult = CheckUserInfoResult; } return _p; }

inline _ns1__CheckUserInfoResponse * soap_new_set__ns1__CheckUserInfoResponse(struct soap *soap, bool CheckUserInfoResult) { _ns1__CheckUserInfoResponse *_p = soap_instantiate__ns1__CheckUserInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__CheckUserInfoResponse::CheckUserInfoResult = CheckUserInfoResult; } return _p; }

inline void soap_delete__ns1__CheckUserInfoResponse(struct soap *soap, _ns1__CheckUserInfoResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__CheckUserInfoResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__CheckUserInfo
#define SOAP_TYPE__ns1__CheckUserInfo (59)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CheckUserInfo(struct soap*, const char*, int, const _ns1__CheckUserInfo *, const char*);
SOAP_FMAC3 _ns1__CheckUserInfo * SOAP_FMAC4 soap_in__ns1__CheckUserInfo(struct soap*, const char*, _ns1__CheckUserInfo *, const char*);

#ifndef soap_write__ns1__CheckUserInfo
#define soap_write__ns1__CheckUserInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:CheckUserInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__CheckUserInfo * SOAP_FMAC4 soap_get__ns1__CheckUserInfo(struct soap*, _ns1__CheckUserInfo *, const char*, const char*);

#ifndef soap_read__ns1__CheckUserInfo
#define soap_read__ns1__CheckUserInfo(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__CheckUserInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__CheckUserInfo * SOAP_FMAC2 soap_instantiate__ns1__CheckUserInfo(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__CheckUserInfo * soap_new__ns1__CheckUserInfo(struct soap *soap, int n = -1) { return soap_instantiate__ns1__CheckUserInfo(soap, n, NULL, NULL, NULL); }

inline _ns1__CheckUserInfo * soap_new_req__ns1__CheckUserInfo(struct soap *soap) { _ns1__CheckUserInfo *_p = soap_instantiate__ns1__CheckUserInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__CheckUserInfo * soap_new_set__ns1__CheckUserInfo(struct soap *soap, char *xmlBody) { _ns1__CheckUserInfo *_p = soap_instantiate__ns1__CheckUserInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__CheckUserInfo::xmlBody = xmlBody; } return _p; }

inline void soap_delete__ns1__CheckUserInfo(struct soap *soap, _ns1__CheckUserInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__CheckUserInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__addTransRecInfoResponse
#define SOAP_TYPE__ns1__addTransRecInfoResponse (58)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__addTransRecInfoResponse(struct soap*, const char*, int, const _ns1__addTransRecInfoResponse *, const char*);
SOAP_FMAC3 _ns1__addTransRecInfoResponse * SOAP_FMAC4 soap_in__ns1__addTransRecInfoResponse(struct soap*, const char*, _ns1__addTransRecInfoResponse *, const char*);

#ifndef soap_write__ns1__addTransRecInfoResponse
#define soap_write__ns1__addTransRecInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:addTransRecInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__addTransRecInfoResponse * SOAP_FMAC4 soap_get__ns1__addTransRecInfoResponse(struct soap*, _ns1__addTransRecInfoResponse *, const char*, const char*);

#ifndef soap_read__ns1__addTransRecInfoResponse
#define soap_read__ns1__addTransRecInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__addTransRecInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__addTransRecInfoResponse * SOAP_FMAC2 soap_instantiate__ns1__addTransRecInfoResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__addTransRecInfoResponse * soap_new__ns1__addTransRecInfoResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__addTransRecInfoResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__addTransRecInfoResponse * soap_new_req__ns1__addTransRecInfoResponse(struct soap *soap) { _ns1__addTransRecInfoResponse *_p = soap_instantiate__ns1__addTransRecInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__addTransRecInfoResponse * soap_new_set__ns1__addTransRecInfoResponse(struct soap *soap, char *addTransRecInfoResult) { _ns1__addTransRecInfoResponse *_p = soap_instantiate__ns1__addTransRecInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__addTransRecInfoResponse::addTransRecInfoResult = addTransRecInfoResult; } return _p; }

inline void soap_delete__ns1__addTransRecInfoResponse(struct soap *soap, _ns1__addTransRecInfoResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__addTransRecInfoResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__addTransRecInfo
#define SOAP_TYPE__ns1__addTransRecInfo (57)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__addTransRecInfo(struct soap*, const char*, int, const _ns1__addTransRecInfo *, const char*);
SOAP_FMAC3 _ns1__addTransRecInfo * SOAP_FMAC4 soap_in__ns1__addTransRecInfo(struct soap*, const char*, _ns1__addTransRecInfo *, const char*);

#ifndef soap_write__ns1__addTransRecInfo
#define soap_write__ns1__addTransRecInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:addTransRecInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__addTransRecInfo * SOAP_FMAC4 soap_get__ns1__addTransRecInfo(struct soap*, _ns1__addTransRecInfo *, const char*, const char*);

#ifndef soap_read__ns1__addTransRecInfo
#define soap_read__ns1__addTransRecInfo(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__addTransRecInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__addTransRecInfo * SOAP_FMAC2 soap_instantiate__ns1__addTransRecInfo(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__addTransRecInfo * soap_new__ns1__addTransRecInfo(struct soap *soap, int n = -1) { return soap_instantiate__ns1__addTransRecInfo(soap, n, NULL, NULL, NULL); }

inline _ns1__addTransRecInfo * soap_new_req__ns1__addTransRecInfo(struct soap *soap) { _ns1__addTransRecInfo *_p = soap_instantiate__ns1__addTransRecInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__addTransRecInfo * soap_new_set__ns1__addTransRecInfo(struct soap *soap, char *sjly, char *sbcj, char *sbbh, char *cjsj, char *wfxw, char *wfnr, char *zjwjlj, char *bz) { _ns1__addTransRecInfo *_p = soap_instantiate__ns1__addTransRecInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__addTransRecInfo::sjly = sjly; _p->_ns1__addTransRecInfo::sbcj = sbcj; _p->_ns1__addTransRecInfo::sbbh = sbbh; _p->_ns1__addTransRecInfo::cjsj = cjsj; _p->_ns1__addTransRecInfo::wfxw = wfxw; _p->_ns1__addTransRecInfo::wfnr = wfnr; _p->_ns1__addTransRecInfo::zjwjlj = zjwjlj; _p->_ns1__addTransRecInfo::bz = bz; } return _p; }

inline void soap_delete__ns1__addTransRecInfo(struct soap *soap, _ns1__addTransRecInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__addTransRecInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetJdsbhRecoveryInfoResponse
#define SOAP_TYPE__ns1__GetJdsbhRecoveryInfoResponse (56)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetJdsbhRecoveryInfoResponse(struct soap*, const char*, int, const _ns1__GetJdsbhRecoveryInfoResponse *, const char*);
SOAP_FMAC3 _ns1__GetJdsbhRecoveryInfoResponse * SOAP_FMAC4 soap_in__ns1__GetJdsbhRecoveryInfoResponse(struct soap*, const char*, _ns1__GetJdsbhRecoveryInfoResponse *, const char*);

#ifndef soap_write__ns1__GetJdsbhRecoveryInfoResponse
#define soap_write__ns1__GetJdsbhRecoveryInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetJdsbhRecoveryInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetJdsbhRecoveryInfoResponse * SOAP_FMAC4 soap_get__ns1__GetJdsbhRecoveryInfoResponse(struct soap*, _ns1__GetJdsbhRecoveryInfoResponse *, const char*, const char*);

#ifndef soap_read__ns1__GetJdsbhRecoveryInfoResponse
#define soap_read__ns1__GetJdsbhRecoveryInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetJdsbhRecoveryInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetJdsbhRecoveryInfoResponse * SOAP_FMAC2 soap_instantiate__ns1__GetJdsbhRecoveryInfoResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetJdsbhRecoveryInfoResponse * soap_new__ns1__GetJdsbhRecoveryInfoResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetJdsbhRecoveryInfoResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__GetJdsbhRecoveryInfoResponse * soap_new_req__ns1__GetJdsbhRecoveryInfoResponse(struct soap *soap) { _ns1__GetJdsbhRecoveryInfoResponse *_p = soap_instantiate__ns1__GetJdsbhRecoveryInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetJdsbhRecoveryInfoResponse * soap_new_set__ns1__GetJdsbhRecoveryInfoResponse(struct soap *soap, char *GetJdsbhRecoveryInfoResult) { _ns1__GetJdsbhRecoveryInfoResponse *_p = soap_instantiate__ns1__GetJdsbhRecoveryInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetJdsbhRecoveryInfoResponse::GetJdsbhRecoveryInfoResult = GetJdsbhRecoveryInfoResult; } return _p; }

inline void soap_delete__ns1__GetJdsbhRecoveryInfoResponse(struct soap *soap, _ns1__GetJdsbhRecoveryInfoResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetJdsbhRecoveryInfoResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetJdsbhRecoveryInfo
#define SOAP_TYPE__ns1__GetJdsbhRecoveryInfo (55)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetJdsbhRecoveryInfo(struct soap*, const char*, int, const _ns1__GetJdsbhRecoveryInfo *, const char*);
SOAP_FMAC3 _ns1__GetJdsbhRecoveryInfo * SOAP_FMAC4 soap_in__ns1__GetJdsbhRecoveryInfo(struct soap*, const char*, _ns1__GetJdsbhRecoveryInfo *, const char*);

#ifndef soap_write__ns1__GetJdsbhRecoveryInfo
#define soap_write__ns1__GetJdsbhRecoveryInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetJdsbhRecoveryInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetJdsbhRecoveryInfo * SOAP_FMAC4 soap_get__ns1__GetJdsbhRecoveryInfo(struct soap*, _ns1__GetJdsbhRecoveryInfo *, const char*, const char*);

#ifndef soap_read__ns1__GetJdsbhRecoveryInfo
#define soap_read__ns1__GetJdsbhRecoveryInfo(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetJdsbhRecoveryInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetJdsbhRecoveryInfo * SOAP_FMAC2 soap_instantiate__ns1__GetJdsbhRecoveryInfo(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetJdsbhRecoveryInfo * soap_new__ns1__GetJdsbhRecoveryInfo(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetJdsbhRecoveryInfo(soap, n, NULL, NULL, NULL); }

inline _ns1__GetJdsbhRecoveryInfo * soap_new_req__ns1__GetJdsbhRecoveryInfo(struct soap *soap) { _ns1__GetJdsbhRecoveryInfo *_p = soap_instantiate__ns1__GetJdsbhRecoveryInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetJdsbhRecoveryInfo * soap_new_set__ns1__GetJdsbhRecoveryInfo(struct soap *soap) { _ns1__GetJdsbhRecoveryInfo *_p = soap_instantiate__ns1__GetJdsbhRecoveryInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__ns1__GetJdsbhRecoveryInfo(struct soap *soap, _ns1__GetJdsbhRecoveryInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetJdsbhRecoveryInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetJdsbhRecoveryResponse
#define SOAP_TYPE__ns1__GetJdsbhRecoveryResponse (54)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetJdsbhRecoveryResponse(struct soap*, const char*, int, const _ns1__GetJdsbhRecoveryResponse *, const char*);
SOAP_FMAC3 _ns1__GetJdsbhRecoveryResponse * SOAP_FMAC4 soap_in__ns1__GetJdsbhRecoveryResponse(struct soap*, const char*, _ns1__GetJdsbhRecoveryResponse *, const char*);

#ifndef soap_write__ns1__GetJdsbhRecoveryResponse
#define soap_write__ns1__GetJdsbhRecoveryResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetJdsbhRecoveryResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetJdsbhRecoveryResponse * SOAP_FMAC4 soap_get__ns1__GetJdsbhRecoveryResponse(struct soap*, _ns1__GetJdsbhRecoveryResponse *, const char*, const char*);

#ifndef soap_read__ns1__GetJdsbhRecoveryResponse
#define soap_read__ns1__GetJdsbhRecoveryResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetJdsbhRecoveryResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetJdsbhRecoveryResponse * SOAP_FMAC2 soap_instantiate__ns1__GetJdsbhRecoveryResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetJdsbhRecoveryResponse * soap_new__ns1__GetJdsbhRecoveryResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetJdsbhRecoveryResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__GetJdsbhRecoveryResponse * soap_new_req__ns1__GetJdsbhRecoveryResponse(struct soap *soap) { _ns1__GetJdsbhRecoveryResponse *_p = soap_instantiate__ns1__GetJdsbhRecoveryResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetJdsbhRecoveryResponse * soap_new_set__ns1__GetJdsbhRecoveryResponse(struct soap *soap, char *GetJdsbhRecoveryResult) { _ns1__GetJdsbhRecoveryResponse *_p = soap_instantiate__ns1__GetJdsbhRecoveryResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetJdsbhRecoveryResponse::GetJdsbhRecoveryResult = GetJdsbhRecoveryResult; } return _p; }

inline void soap_delete__ns1__GetJdsbhRecoveryResponse(struct soap *soap, _ns1__GetJdsbhRecoveryResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetJdsbhRecoveryResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetJdsbhRecovery
#define SOAP_TYPE__ns1__GetJdsbhRecovery (53)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetJdsbhRecovery(struct soap*, const char*, int, const _ns1__GetJdsbhRecovery *, const char*);
SOAP_FMAC3 _ns1__GetJdsbhRecovery * SOAP_FMAC4 soap_in__ns1__GetJdsbhRecovery(struct soap*, const char*, _ns1__GetJdsbhRecovery *, const char*);

#ifndef soap_write__ns1__GetJdsbhRecovery
#define soap_write__ns1__GetJdsbhRecovery(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetJdsbhRecovery", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetJdsbhRecovery * SOAP_FMAC4 soap_get__ns1__GetJdsbhRecovery(struct soap*, _ns1__GetJdsbhRecovery *, const char*, const char*);

#ifndef soap_read__ns1__GetJdsbhRecovery
#define soap_read__ns1__GetJdsbhRecovery(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetJdsbhRecovery(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetJdsbhRecovery * SOAP_FMAC2 soap_instantiate__ns1__GetJdsbhRecovery(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetJdsbhRecovery * soap_new__ns1__GetJdsbhRecovery(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetJdsbhRecovery(soap, n, NULL, NULL, NULL); }

inline _ns1__GetJdsbhRecovery * soap_new_req__ns1__GetJdsbhRecovery(struct soap *soap) { _ns1__GetJdsbhRecovery *_p = soap_instantiate__ns1__GetJdsbhRecovery(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetJdsbhRecovery * soap_new_set__ns1__GetJdsbhRecovery(struct soap *soap, char *xmlBody) { _ns1__GetJdsbhRecovery *_p = soap_instantiate__ns1__GetJdsbhRecovery(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetJdsbhRecovery::xmlBody = xmlBody; } return _p; }

inline void soap_delete__ns1__GetJdsbhRecovery(struct soap *soap, _ns1__GetJdsbhRecovery *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetJdsbhRecovery(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetViolationInfoResponse
#define SOAP_TYPE__ns1__GetViolationInfoResponse (52)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetViolationInfoResponse(struct soap*, const char*, int, const _ns1__GetViolationInfoResponse *, const char*);
SOAP_FMAC3 _ns1__GetViolationInfoResponse * SOAP_FMAC4 soap_in__ns1__GetViolationInfoResponse(struct soap*, const char*, _ns1__GetViolationInfoResponse *, const char*);

#ifndef soap_write__ns1__GetViolationInfoResponse
#define soap_write__ns1__GetViolationInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetViolationInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetViolationInfoResponse * SOAP_FMAC4 soap_get__ns1__GetViolationInfoResponse(struct soap*, _ns1__GetViolationInfoResponse *, const char*, const char*);

#ifndef soap_read__ns1__GetViolationInfoResponse
#define soap_read__ns1__GetViolationInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetViolationInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetViolationInfoResponse * SOAP_FMAC2 soap_instantiate__ns1__GetViolationInfoResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetViolationInfoResponse * soap_new__ns1__GetViolationInfoResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetViolationInfoResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__GetViolationInfoResponse * soap_new_req__ns1__GetViolationInfoResponse(struct soap *soap) { _ns1__GetViolationInfoResponse *_p = soap_instantiate__ns1__GetViolationInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetViolationInfoResponse * soap_new_set__ns1__GetViolationInfoResponse(struct soap *soap, char *GetViolationInfoResult) { _ns1__GetViolationInfoResponse *_p = soap_instantiate__ns1__GetViolationInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetViolationInfoResponse::GetViolationInfoResult = GetViolationInfoResult; } return _p; }

inline void soap_delete__ns1__GetViolationInfoResponse(struct soap *soap, _ns1__GetViolationInfoResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetViolationInfoResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetViolationInfo
#define SOAP_TYPE__ns1__GetViolationInfo (51)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetViolationInfo(struct soap*, const char*, int, const _ns1__GetViolationInfo *, const char*);
SOAP_FMAC3 _ns1__GetViolationInfo * SOAP_FMAC4 soap_in__ns1__GetViolationInfo(struct soap*, const char*, _ns1__GetViolationInfo *, const char*);

#ifndef soap_write__ns1__GetViolationInfo
#define soap_write__ns1__GetViolationInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetViolationInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetViolationInfo * SOAP_FMAC4 soap_get__ns1__GetViolationInfo(struct soap*, _ns1__GetViolationInfo *, const char*, const char*);

#ifndef soap_read__ns1__GetViolationInfo
#define soap_read__ns1__GetViolationInfo(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetViolationInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetViolationInfo * SOAP_FMAC2 soap_instantiate__ns1__GetViolationInfo(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetViolationInfo * soap_new__ns1__GetViolationInfo(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetViolationInfo(soap, n, NULL, NULL, NULL); }

inline _ns1__GetViolationInfo * soap_new_req__ns1__GetViolationInfo(struct soap *soap) { _ns1__GetViolationInfo *_p = soap_instantiate__ns1__GetViolationInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetViolationInfo * soap_new_set__ns1__GetViolationInfo(struct soap *soap, char *xmlBody) { _ns1__GetViolationInfo *_p = soap_instantiate__ns1__GetViolationInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetViolationInfo::xmlBody = xmlBody; } return _p; }

inline void soap_delete__ns1__GetViolationInfo(struct soap *soap, _ns1__GetViolationInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetViolationInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__InViolationInfoResponse
#define SOAP_TYPE__ns1__InViolationInfoResponse (50)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__InViolationInfoResponse(struct soap*, const char*, int, const _ns1__InViolationInfoResponse *, const char*);
SOAP_FMAC3 _ns1__InViolationInfoResponse * SOAP_FMAC4 soap_in__ns1__InViolationInfoResponse(struct soap*, const char*, _ns1__InViolationInfoResponse *, const char*);

#ifndef soap_write__ns1__InViolationInfoResponse
#define soap_write__ns1__InViolationInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:InViolationInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__InViolationInfoResponse * SOAP_FMAC4 soap_get__ns1__InViolationInfoResponse(struct soap*, _ns1__InViolationInfoResponse *, const char*, const char*);

#ifndef soap_read__ns1__InViolationInfoResponse
#define soap_read__ns1__InViolationInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__InViolationInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__InViolationInfoResponse * SOAP_FMAC2 soap_instantiate__ns1__InViolationInfoResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__InViolationInfoResponse * soap_new__ns1__InViolationInfoResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__InViolationInfoResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__InViolationInfoResponse * soap_new_req__ns1__InViolationInfoResponse(struct soap *soap) { _ns1__InViolationInfoResponse *_p = soap_instantiate__ns1__InViolationInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__InViolationInfoResponse * soap_new_set__ns1__InViolationInfoResponse(struct soap *soap, char *InViolationInfoResult) { _ns1__InViolationInfoResponse *_p = soap_instantiate__ns1__InViolationInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__InViolationInfoResponse::InViolationInfoResult = InViolationInfoResult; } return _p; }

inline void soap_delete__ns1__InViolationInfoResponse(struct soap *soap, _ns1__InViolationInfoResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__InViolationInfoResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__InViolationInfo
#define SOAP_TYPE__ns1__InViolationInfo (49)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__InViolationInfo(struct soap*, const char*, int, const _ns1__InViolationInfo *, const char*);
SOAP_FMAC3 _ns1__InViolationInfo * SOAP_FMAC4 soap_in__ns1__InViolationInfo(struct soap*, const char*, _ns1__InViolationInfo *, const char*);

#ifndef soap_write__ns1__InViolationInfo
#define soap_write__ns1__InViolationInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:InViolationInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__InViolationInfo * SOAP_FMAC4 soap_get__ns1__InViolationInfo(struct soap*, _ns1__InViolationInfo *, const char*, const char*);

#ifndef soap_read__ns1__InViolationInfo
#define soap_read__ns1__InViolationInfo(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__InViolationInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__InViolationInfo * SOAP_FMAC2 soap_instantiate__ns1__InViolationInfo(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__InViolationInfo * soap_new__ns1__InViolationInfo(struct soap *soap, int n = -1) { return soap_instantiate__ns1__InViolationInfo(soap, n, NULL, NULL, NULL); }

inline _ns1__InViolationInfo * soap_new_req__ns1__InViolationInfo(struct soap *soap) { _ns1__InViolationInfo *_p = soap_instantiate__ns1__InViolationInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__InViolationInfo * soap_new_set__ns1__InViolationInfo(struct soap *soap, char *xmlBody) { _ns1__InViolationInfo *_p = soap_instantiate__ns1__InViolationInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__InViolationInfo::xmlBody = xmlBody; } return _p; }

inline void soap_delete__ns1__InViolationInfo(struct soap *soap, _ns1__InViolationInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__InViolationInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__UpdataDeviceStateResponse
#define SOAP_TYPE__ns1__UpdataDeviceStateResponse (48)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__UpdataDeviceStateResponse(struct soap*, const char*, int, const _ns1__UpdataDeviceStateResponse *, const char*);
SOAP_FMAC3 _ns1__UpdataDeviceStateResponse * SOAP_FMAC4 soap_in__ns1__UpdataDeviceStateResponse(struct soap*, const char*, _ns1__UpdataDeviceStateResponse *, const char*);

#ifndef soap_write__ns1__UpdataDeviceStateResponse
#define soap_write__ns1__UpdataDeviceStateResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:UpdataDeviceStateResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__UpdataDeviceStateResponse * SOAP_FMAC4 soap_get__ns1__UpdataDeviceStateResponse(struct soap*, _ns1__UpdataDeviceStateResponse *, const char*, const char*);

#ifndef soap_read__ns1__UpdataDeviceStateResponse
#define soap_read__ns1__UpdataDeviceStateResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__UpdataDeviceStateResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__UpdataDeviceStateResponse * SOAP_FMAC2 soap_instantiate__ns1__UpdataDeviceStateResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__UpdataDeviceStateResponse * soap_new__ns1__UpdataDeviceStateResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__UpdataDeviceStateResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__UpdataDeviceStateResponse * soap_new_req__ns1__UpdataDeviceStateResponse(struct soap *soap) { _ns1__UpdataDeviceStateResponse *_p = soap_instantiate__ns1__UpdataDeviceStateResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__UpdataDeviceStateResponse * soap_new_set__ns1__UpdataDeviceStateResponse(struct soap *soap, char *UpdataDeviceStateResult) { _ns1__UpdataDeviceStateResponse *_p = soap_instantiate__ns1__UpdataDeviceStateResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__UpdataDeviceStateResponse::UpdataDeviceStateResult = UpdataDeviceStateResult; } return _p; }

inline void soap_delete__ns1__UpdataDeviceStateResponse(struct soap *soap, _ns1__UpdataDeviceStateResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__UpdataDeviceStateResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__UpdataDeviceState
#define SOAP_TYPE__ns1__UpdataDeviceState (47)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__UpdataDeviceState(struct soap*, const char*, int, const _ns1__UpdataDeviceState *, const char*);
SOAP_FMAC3 _ns1__UpdataDeviceState * SOAP_FMAC4 soap_in__ns1__UpdataDeviceState(struct soap*, const char*, _ns1__UpdataDeviceState *, const char*);

#ifndef soap_write__ns1__UpdataDeviceState
#define soap_write__ns1__UpdataDeviceState(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:UpdataDeviceState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__UpdataDeviceState * SOAP_FMAC4 soap_get__ns1__UpdataDeviceState(struct soap*, _ns1__UpdataDeviceState *, const char*, const char*);

#ifndef soap_read__ns1__UpdataDeviceState
#define soap_read__ns1__UpdataDeviceState(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__UpdataDeviceState(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__UpdataDeviceState * SOAP_FMAC2 soap_instantiate__ns1__UpdataDeviceState(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__UpdataDeviceState * soap_new__ns1__UpdataDeviceState(struct soap *soap, int n = -1) { return soap_instantiate__ns1__UpdataDeviceState(soap, n, NULL, NULL, NULL); }

inline _ns1__UpdataDeviceState * soap_new_req__ns1__UpdataDeviceState(struct soap *soap) { _ns1__UpdataDeviceState *_p = soap_instantiate__ns1__UpdataDeviceState(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__UpdataDeviceState * soap_new_set__ns1__UpdataDeviceState(struct soap *soap, char *xmlBody) { _ns1__UpdataDeviceState *_p = soap_instantiate__ns1__UpdataDeviceState(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__UpdataDeviceState::xmlBody = xmlBody; } return _p; }

inline void soap_delete__ns1__UpdataDeviceState(struct soap *soap, _ns1__UpdataDeviceState *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__UpdataDeviceState(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetAlarmInfoResponse
#define SOAP_TYPE__ns1__GetAlarmInfoResponse (46)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetAlarmInfoResponse(struct soap*, const char*, int, const _ns1__GetAlarmInfoResponse *, const char*);
SOAP_FMAC3 _ns1__GetAlarmInfoResponse * SOAP_FMAC4 soap_in__ns1__GetAlarmInfoResponse(struct soap*, const char*, _ns1__GetAlarmInfoResponse *, const char*);

#ifndef soap_write__ns1__GetAlarmInfoResponse
#define soap_write__ns1__GetAlarmInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetAlarmInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetAlarmInfoResponse * SOAP_FMAC4 soap_get__ns1__GetAlarmInfoResponse(struct soap*, _ns1__GetAlarmInfoResponse *, const char*, const char*);

#ifndef soap_read__ns1__GetAlarmInfoResponse
#define soap_read__ns1__GetAlarmInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetAlarmInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetAlarmInfoResponse * SOAP_FMAC2 soap_instantiate__ns1__GetAlarmInfoResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetAlarmInfoResponse * soap_new__ns1__GetAlarmInfoResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetAlarmInfoResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__GetAlarmInfoResponse * soap_new_req__ns1__GetAlarmInfoResponse(struct soap *soap) { _ns1__GetAlarmInfoResponse *_p = soap_instantiate__ns1__GetAlarmInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetAlarmInfoResponse * soap_new_set__ns1__GetAlarmInfoResponse(struct soap *soap, char *GetAlarmInfoResult) { _ns1__GetAlarmInfoResponse *_p = soap_instantiate__ns1__GetAlarmInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetAlarmInfoResponse::GetAlarmInfoResult = GetAlarmInfoResult; } return _p; }

inline void soap_delete__ns1__GetAlarmInfoResponse(struct soap *soap, _ns1__GetAlarmInfoResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetAlarmInfoResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetAlarmInfo
#define SOAP_TYPE__ns1__GetAlarmInfo (45)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetAlarmInfo(struct soap*, const char*, int, const _ns1__GetAlarmInfo *, const char*);
SOAP_FMAC3 _ns1__GetAlarmInfo * SOAP_FMAC4 soap_in__ns1__GetAlarmInfo(struct soap*, const char*, _ns1__GetAlarmInfo *, const char*);

#ifndef soap_write__ns1__GetAlarmInfo
#define soap_write__ns1__GetAlarmInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetAlarmInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetAlarmInfo * SOAP_FMAC4 soap_get__ns1__GetAlarmInfo(struct soap*, _ns1__GetAlarmInfo *, const char*, const char*);

#ifndef soap_read__ns1__GetAlarmInfo
#define soap_read__ns1__GetAlarmInfo(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetAlarmInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetAlarmInfo * SOAP_FMAC2 soap_instantiate__ns1__GetAlarmInfo(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetAlarmInfo * soap_new__ns1__GetAlarmInfo(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetAlarmInfo(soap, n, NULL, NULL, NULL); }

inline _ns1__GetAlarmInfo * soap_new_req__ns1__GetAlarmInfo(struct soap *soap) { _ns1__GetAlarmInfo *_p = soap_instantiate__ns1__GetAlarmInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetAlarmInfo * soap_new_set__ns1__GetAlarmInfo(struct soap *soap, char *xmlBody) { _ns1__GetAlarmInfo *_p = soap_instantiate__ns1__GetAlarmInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetAlarmInfo::xmlBody = xmlBody; } return _p; }

inline void soap_delete__ns1__GetAlarmInfo(struct soap *soap, _ns1__GetAlarmInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetAlarmInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__UpdateVioPeccancyInfoResponse
#define SOAP_TYPE__ns1__UpdateVioPeccancyInfoResponse (44)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__UpdateVioPeccancyInfoResponse(struct soap*, const char*, int, const _ns1__UpdateVioPeccancyInfoResponse *, const char*);
SOAP_FMAC3 _ns1__UpdateVioPeccancyInfoResponse * SOAP_FMAC4 soap_in__ns1__UpdateVioPeccancyInfoResponse(struct soap*, const char*, _ns1__UpdateVioPeccancyInfoResponse *, const char*);

#ifndef soap_write__ns1__UpdateVioPeccancyInfoResponse
#define soap_write__ns1__UpdateVioPeccancyInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:UpdateVioPeccancyInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__UpdateVioPeccancyInfoResponse * SOAP_FMAC4 soap_get__ns1__UpdateVioPeccancyInfoResponse(struct soap*, _ns1__UpdateVioPeccancyInfoResponse *, const char*, const char*);

#ifndef soap_read__ns1__UpdateVioPeccancyInfoResponse
#define soap_read__ns1__UpdateVioPeccancyInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__UpdateVioPeccancyInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__UpdateVioPeccancyInfoResponse * SOAP_FMAC2 soap_instantiate__ns1__UpdateVioPeccancyInfoResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__UpdateVioPeccancyInfoResponse * soap_new__ns1__UpdateVioPeccancyInfoResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__UpdateVioPeccancyInfoResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__UpdateVioPeccancyInfoResponse * soap_new_req__ns1__UpdateVioPeccancyInfoResponse(struct soap *soap) { _ns1__UpdateVioPeccancyInfoResponse *_p = soap_instantiate__ns1__UpdateVioPeccancyInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__UpdateVioPeccancyInfoResponse * soap_new_set__ns1__UpdateVioPeccancyInfoResponse(struct soap *soap, char *UpdateVioPeccancyInfoResult) { _ns1__UpdateVioPeccancyInfoResponse *_p = soap_instantiate__ns1__UpdateVioPeccancyInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__UpdateVioPeccancyInfoResponse::UpdateVioPeccancyInfoResult = UpdateVioPeccancyInfoResult; } return _p; }

inline void soap_delete__ns1__UpdateVioPeccancyInfoResponse(struct soap *soap, _ns1__UpdateVioPeccancyInfoResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__UpdateVioPeccancyInfoResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__UpdateVioPeccancyInfo
#define SOAP_TYPE__ns1__UpdateVioPeccancyInfo (43)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__UpdateVioPeccancyInfo(struct soap*, const char*, int, const _ns1__UpdateVioPeccancyInfo *, const char*);
SOAP_FMAC3 _ns1__UpdateVioPeccancyInfo * SOAP_FMAC4 soap_in__ns1__UpdateVioPeccancyInfo(struct soap*, const char*, _ns1__UpdateVioPeccancyInfo *, const char*);

#ifndef soap_write__ns1__UpdateVioPeccancyInfo
#define soap_write__ns1__UpdateVioPeccancyInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:UpdateVioPeccancyInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__UpdateVioPeccancyInfo * SOAP_FMAC4 soap_get__ns1__UpdateVioPeccancyInfo(struct soap*, _ns1__UpdateVioPeccancyInfo *, const char*, const char*);

#ifndef soap_read__ns1__UpdateVioPeccancyInfo
#define soap_read__ns1__UpdateVioPeccancyInfo(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__UpdateVioPeccancyInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__UpdateVioPeccancyInfo * SOAP_FMAC2 soap_instantiate__ns1__UpdateVioPeccancyInfo(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__UpdateVioPeccancyInfo * soap_new__ns1__UpdateVioPeccancyInfo(struct soap *soap, int n = -1) { return soap_instantiate__ns1__UpdateVioPeccancyInfo(soap, n, NULL, NULL, NULL); }

inline _ns1__UpdateVioPeccancyInfo * soap_new_req__ns1__UpdateVioPeccancyInfo(struct soap *soap) { _ns1__UpdateVioPeccancyInfo *_p = soap_instantiate__ns1__UpdateVioPeccancyInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__UpdateVioPeccancyInfo * soap_new_set__ns1__UpdateVioPeccancyInfo(struct soap *soap, char *xmlBody) { _ns1__UpdateVioPeccancyInfo *_p = soap_instantiate__ns1__UpdateVioPeccancyInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__UpdateVioPeccancyInfo::xmlBody = xmlBody; } return _p; }

inline void soap_delete__ns1__UpdateVioPeccancyInfo(struct soap *soap, _ns1__UpdateVioPeccancyInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__UpdateVioPeccancyInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetVioPeccancyNoCheckInfoResponse
#define SOAP_TYPE__ns1__GetVioPeccancyNoCheckInfoResponse (42)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetVioPeccancyNoCheckInfoResponse(struct soap*, const char*, int, const _ns1__GetVioPeccancyNoCheckInfoResponse *, const char*);
SOAP_FMAC3 _ns1__GetVioPeccancyNoCheckInfoResponse * SOAP_FMAC4 soap_in__ns1__GetVioPeccancyNoCheckInfoResponse(struct soap*, const char*, _ns1__GetVioPeccancyNoCheckInfoResponse *, const char*);

#ifndef soap_write__ns1__GetVioPeccancyNoCheckInfoResponse
#define soap_write__ns1__GetVioPeccancyNoCheckInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetVioPeccancyNoCheckInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetVioPeccancyNoCheckInfoResponse * SOAP_FMAC4 soap_get__ns1__GetVioPeccancyNoCheckInfoResponse(struct soap*, _ns1__GetVioPeccancyNoCheckInfoResponse *, const char*, const char*);

#ifndef soap_read__ns1__GetVioPeccancyNoCheckInfoResponse
#define soap_read__ns1__GetVioPeccancyNoCheckInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetVioPeccancyNoCheckInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetVioPeccancyNoCheckInfoResponse * SOAP_FMAC2 soap_instantiate__ns1__GetVioPeccancyNoCheckInfoResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetVioPeccancyNoCheckInfoResponse * soap_new__ns1__GetVioPeccancyNoCheckInfoResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetVioPeccancyNoCheckInfoResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__GetVioPeccancyNoCheckInfoResponse * soap_new_req__ns1__GetVioPeccancyNoCheckInfoResponse(struct soap *soap) { _ns1__GetVioPeccancyNoCheckInfoResponse *_p = soap_instantiate__ns1__GetVioPeccancyNoCheckInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetVioPeccancyNoCheckInfoResponse * soap_new_set__ns1__GetVioPeccancyNoCheckInfoResponse(struct soap *soap, char *GetVioPeccancyNoCheckInfoResult) { _ns1__GetVioPeccancyNoCheckInfoResponse *_p = soap_instantiate__ns1__GetVioPeccancyNoCheckInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetVioPeccancyNoCheckInfoResponse::GetVioPeccancyNoCheckInfoResult = GetVioPeccancyNoCheckInfoResult; } return _p; }

inline void soap_delete__ns1__GetVioPeccancyNoCheckInfoResponse(struct soap *soap, _ns1__GetVioPeccancyNoCheckInfoResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetVioPeccancyNoCheckInfoResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetVioPeccancyNoCheckInfo
#define SOAP_TYPE__ns1__GetVioPeccancyNoCheckInfo (41)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetVioPeccancyNoCheckInfo(struct soap*, const char*, int, const _ns1__GetVioPeccancyNoCheckInfo *, const char*);
SOAP_FMAC3 _ns1__GetVioPeccancyNoCheckInfo * SOAP_FMAC4 soap_in__ns1__GetVioPeccancyNoCheckInfo(struct soap*, const char*, _ns1__GetVioPeccancyNoCheckInfo *, const char*);

#ifndef soap_write__ns1__GetVioPeccancyNoCheckInfo
#define soap_write__ns1__GetVioPeccancyNoCheckInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetVioPeccancyNoCheckInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetVioPeccancyNoCheckInfo * SOAP_FMAC4 soap_get__ns1__GetVioPeccancyNoCheckInfo(struct soap*, _ns1__GetVioPeccancyNoCheckInfo *, const char*, const char*);

#ifndef soap_read__ns1__GetVioPeccancyNoCheckInfo
#define soap_read__ns1__GetVioPeccancyNoCheckInfo(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetVioPeccancyNoCheckInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetVioPeccancyNoCheckInfo * SOAP_FMAC2 soap_instantiate__ns1__GetVioPeccancyNoCheckInfo(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetVioPeccancyNoCheckInfo * soap_new__ns1__GetVioPeccancyNoCheckInfo(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetVioPeccancyNoCheckInfo(soap, n, NULL, NULL, NULL); }

inline _ns1__GetVioPeccancyNoCheckInfo * soap_new_req__ns1__GetVioPeccancyNoCheckInfo(struct soap *soap) { _ns1__GetVioPeccancyNoCheckInfo *_p = soap_instantiate__ns1__GetVioPeccancyNoCheckInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetVioPeccancyNoCheckInfo * soap_new_set__ns1__GetVioPeccancyNoCheckInfo(struct soap *soap, char *xmlBody) { _ns1__GetVioPeccancyNoCheckInfo *_p = soap_instantiate__ns1__GetVioPeccancyNoCheckInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetVioPeccancyNoCheckInfo::xmlBody = xmlBody; } return _p; }

inline void soap_delete__ns1__GetVioPeccancyNoCheckInfo(struct soap *soap, _ns1__GetVioPeccancyNoCheckInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetVioPeccancyNoCheckInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__UpdatePeccancyInfoResponse
#define SOAP_TYPE__ns1__UpdatePeccancyInfoResponse (40)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__UpdatePeccancyInfoResponse(struct soap*, const char*, int, const _ns1__UpdatePeccancyInfoResponse *, const char*);
SOAP_FMAC3 _ns1__UpdatePeccancyInfoResponse * SOAP_FMAC4 soap_in__ns1__UpdatePeccancyInfoResponse(struct soap*, const char*, _ns1__UpdatePeccancyInfoResponse *, const char*);

#ifndef soap_write__ns1__UpdatePeccancyInfoResponse
#define soap_write__ns1__UpdatePeccancyInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:UpdatePeccancyInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__UpdatePeccancyInfoResponse * SOAP_FMAC4 soap_get__ns1__UpdatePeccancyInfoResponse(struct soap*, _ns1__UpdatePeccancyInfoResponse *, const char*, const char*);

#ifndef soap_read__ns1__UpdatePeccancyInfoResponse
#define soap_read__ns1__UpdatePeccancyInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__UpdatePeccancyInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__UpdatePeccancyInfoResponse * SOAP_FMAC2 soap_instantiate__ns1__UpdatePeccancyInfoResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__UpdatePeccancyInfoResponse * soap_new__ns1__UpdatePeccancyInfoResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__UpdatePeccancyInfoResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__UpdatePeccancyInfoResponse * soap_new_req__ns1__UpdatePeccancyInfoResponse(struct soap *soap) { _ns1__UpdatePeccancyInfoResponse *_p = soap_instantiate__ns1__UpdatePeccancyInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__UpdatePeccancyInfoResponse * soap_new_set__ns1__UpdatePeccancyInfoResponse(struct soap *soap, char *UpdatePeccancyInfoResult) { _ns1__UpdatePeccancyInfoResponse *_p = soap_instantiate__ns1__UpdatePeccancyInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__UpdatePeccancyInfoResponse::UpdatePeccancyInfoResult = UpdatePeccancyInfoResult; } return _p; }

inline void soap_delete__ns1__UpdatePeccancyInfoResponse(struct soap *soap, _ns1__UpdatePeccancyInfoResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__UpdatePeccancyInfoResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__UpdatePeccancyInfo
#define SOAP_TYPE__ns1__UpdatePeccancyInfo (39)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__UpdatePeccancyInfo(struct soap*, const char*, int, const _ns1__UpdatePeccancyInfo *, const char*);
SOAP_FMAC3 _ns1__UpdatePeccancyInfo * SOAP_FMAC4 soap_in__ns1__UpdatePeccancyInfo(struct soap*, const char*, _ns1__UpdatePeccancyInfo *, const char*);

#ifndef soap_write__ns1__UpdatePeccancyInfo
#define soap_write__ns1__UpdatePeccancyInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:UpdatePeccancyInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__UpdatePeccancyInfo * SOAP_FMAC4 soap_get__ns1__UpdatePeccancyInfo(struct soap*, _ns1__UpdatePeccancyInfo *, const char*, const char*);

#ifndef soap_read__ns1__UpdatePeccancyInfo
#define soap_read__ns1__UpdatePeccancyInfo(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__UpdatePeccancyInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__UpdatePeccancyInfo * SOAP_FMAC2 soap_instantiate__ns1__UpdatePeccancyInfo(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__UpdatePeccancyInfo * soap_new__ns1__UpdatePeccancyInfo(struct soap *soap, int n = -1) { return soap_instantiate__ns1__UpdatePeccancyInfo(soap, n, NULL, NULL, NULL); }

inline _ns1__UpdatePeccancyInfo * soap_new_req__ns1__UpdatePeccancyInfo(struct soap *soap) { _ns1__UpdatePeccancyInfo *_p = soap_instantiate__ns1__UpdatePeccancyInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__UpdatePeccancyInfo * soap_new_set__ns1__UpdatePeccancyInfo(struct soap *soap, char *xmlBody) { _ns1__UpdatePeccancyInfo *_p = soap_instantiate__ns1__UpdatePeccancyInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__UpdatePeccancyInfo::xmlBody = xmlBody; } return _p; }

inline void soap_delete__ns1__UpdatePeccancyInfo(struct soap *soap, _ns1__UpdatePeccancyInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__UpdatePeccancyInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetPeccancyNoCheckInfoResponse
#define SOAP_TYPE__ns1__GetPeccancyNoCheckInfoResponse (38)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetPeccancyNoCheckInfoResponse(struct soap*, const char*, int, const _ns1__GetPeccancyNoCheckInfoResponse *, const char*);
SOAP_FMAC3 _ns1__GetPeccancyNoCheckInfoResponse * SOAP_FMAC4 soap_in__ns1__GetPeccancyNoCheckInfoResponse(struct soap*, const char*, _ns1__GetPeccancyNoCheckInfoResponse *, const char*);

#ifndef soap_write__ns1__GetPeccancyNoCheckInfoResponse
#define soap_write__ns1__GetPeccancyNoCheckInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetPeccancyNoCheckInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetPeccancyNoCheckInfoResponse * SOAP_FMAC4 soap_get__ns1__GetPeccancyNoCheckInfoResponse(struct soap*, _ns1__GetPeccancyNoCheckInfoResponse *, const char*, const char*);

#ifndef soap_read__ns1__GetPeccancyNoCheckInfoResponse
#define soap_read__ns1__GetPeccancyNoCheckInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetPeccancyNoCheckInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetPeccancyNoCheckInfoResponse * SOAP_FMAC2 soap_instantiate__ns1__GetPeccancyNoCheckInfoResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetPeccancyNoCheckInfoResponse * soap_new__ns1__GetPeccancyNoCheckInfoResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetPeccancyNoCheckInfoResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__GetPeccancyNoCheckInfoResponse * soap_new_req__ns1__GetPeccancyNoCheckInfoResponse(struct soap *soap) { _ns1__GetPeccancyNoCheckInfoResponse *_p = soap_instantiate__ns1__GetPeccancyNoCheckInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetPeccancyNoCheckInfoResponse * soap_new_set__ns1__GetPeccancyNoCheckInfoResponse(struct soap *soap, char *GetPeccancyNoCheckInfoResult) { _ns1__GetPeccancyNoCheckInfoResponse *_p = soap_instantiate__ns1__GetPeccancyNoCheckInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetPeccancyNoCheckInfoResponse::GetPeccancyNoCheckInfoResult = GetPeccancyNoCheckInfoResult; } return _p; }

inline void soap_delete__ns1__GetPeccancyNoCheckInfoResponse(struct soap *soap, _ns1__GetPeccancyNoCheckInfoResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetPeccancyNoCheckInfoResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetPeccancyNoCheckInfo
#define SOAP_TYPE__ns1__GetPeccancyNoCheckInfo (37)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetPeccancyNoCheckInfo(struct soap*, const char*, int, const _ns1__GetPeccancyNoCheckInfo *, const char*);
SOAP_FMAC3 _ns1__GetPeccancyNoCheckInfo * SOAP_FMAC4 soap_in__ns1__GetPeccancyNoCheckInfo(struct soap*, const char*, _ns1__GetPeccancyNoCheckInfo *, const char*);

#ifndef soap_write__ns1__GetPeccancyNoCheckInfo
#define soap_write__ns1__GetPeccancyNoCheckInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetPeccancyNoCheckInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetPeccancyNoCheckInfo * SOAP_FMAC4 soap_get__ns1__GetPeccancyNoCheckInfo(struct soap*, _ns1__GetPeccancyNoCheckInfo *, const char*, const char*);

#ifndef soap_read__ns1__GetPeccancyNoCheckInfo
#define soap_read__ns1__GetPeccancyNoCheckInfo(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetPeccancyNoCheckInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetPeccancyNoCheckInfo * SOAP_FMAC2 soap_instantiate__ns1__GetPeccancyNoCheckInfo(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetPeccancyNoCheckInfo * soap_new__ns1__GetPeccancyNoCheckInfo(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetPeccancyNoCheckInfo(soap, n, NULL, NULL, NULL); }

inline _ns1__GetPeccancyNoCheckInfo * soap_new_req__ns1__GetPeccancyNoCheckInfo(struct soap *soap) { _ns1__GetPeccancyNoCheckInfo *_p = soap_instantiate__ns1__GetPeccancyNoCheckInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetPeccancyNoCheckInfo * soap_new_set__ns1__GetPeccancyNoCheckInfo(struct soap *soap, char *xmlBody) { _ns1__GetPeccancyNoCheckInfo *_p = soap_instantiate__ns1__GetPeccancyNoCheckInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetPeccancyNoCheckInfo::xmlBody = xmlBody; } return _p; }

inline void soap_delete__ns1__GetPeccancyNoCheckInfo(struct soap *soap, _ns1__GetPeccancyNoCheckInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetPeccancyNoCheckInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetPeccancyInfoResponse
#define SOAP_TYPE__ns1__GetPeccancyInfoResponse (36)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetPeccancyInfoResponse(struct soap*, const char*, int, const _ns1__GetPeccancyInfoResponse *, const char*);
SOAP_FMAC3 _ns1__GetPeccancyInfoResponse * SOAP_FMAC4 soap_in__ns1__GetPeccancyInfoResponse(struct soap*, const char*, _ns1__GetPeccancyInfoResponse *, const char*);

#ifndef soap_write__ns1__GetPeccancyInfoResponse
#define soap_write__ns1__GetPeccancyInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetPeccancyInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetPeccancyInfoResponse * SOAP_FMAC4 soap_get__ns1__GetPeccancyInfoResponse(struct soap*, _ns1__GetPeccancyInfoResponse *, const char*, const char*);

#ifndef soap_read__ns1__GetPeccancyInfoResponse
#define soap_read__ns1__GetPeccancyInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetPeccancyInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetPeccancyInfoResponse * SOAP_FMAC2 soap_instantiate__ns1__GetPeccancyInfoResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetPeccancyInfoResponse * soap_new__ns1__GetPeccancyInfoResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetPeccancyInfoResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__GetPeccancyInfoResponse * soap_new_req__ns1__GetPeccancyInfoResponse(struct soap *soap) { _ns1__GetPeccancyInfoResponse *_p = soap_instantiate__ns1__GetPeccancyInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetPeccancyInfoResponse * soap_new_set__ns1__GetPeccancyInfoResponse(struct soap *soap, char *GetPeccancyInfoResult) { _ns1__GetPeccancyInfoResponse *_p = soap_instantiate__ns1__GetPeccancyInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetPeccancyInfoResponse::GetPeccancyInfoResult = GetPeccancyInfoResult; } return _p; }

inline void soap_delete__ns1__GetPeccancyInfoResponse(struct soap *soap, _ns1__GetPeccancyInfoResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetPeccancyInfoResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetPeccancyInfo
#define SOAP_TYPE__ns1__GetPeccancyInfo (35)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetPeccancyInfo(struct soap*, const char*, int, const _ns1__GetPeccancyInfo *, const char*);
SOAP_FMAC3 _ns1__GetPeccancyInfo * SOAP_FMAC4 soap_in__ns1__GetPeccancyInfo(struct soap*, const char*, _ns1__GetPeccancyInfo *, const char*);

#ifndef soap_write__ns1__GetPeccancyInfo
#define soap_write__ns1__GetPeccancyInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetPeccancyInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetPeccancyInfo * SOAP_FMAC4 soap_get__ns1__GetPeccancyInfo(struct soap*, _ns1__GetPeccancyInfo *, const char*, const char*);

#ifndef soap_read__ns1__GetPeccancyInfo
#define soap_read__ns1__GetPeccancyInfo(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetPeccancyInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetPeccancyInfo * SOAP_FMAC2 soap_instantiate__ns1__GetPeccancyInfo(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetPeccancyInfo * soap_new__ns1__GetPeccancyInfo(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetPeccancyInfo(soap, n, NULL, NULL, NULL); }

inline _ns1__GetPeccancyInfo * soap_new_req__ns1__GetPeccancyInfo(struct soap *soap) { _ns1__GetPeccancyInfo *_p = soap_instantiate__ns1__GetPeccancyInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetPeccancyInfo * soap_new_set__ns1__GetPeccancyInfo(struct soap *soap, char *xmlBody) { _ns1__GetPeccancyInfo *_p = soap_instantiate__ns1__GetPeccancyInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetPeccancyInfo::xmlBody = xmlBody; } return _p; }

inline void soap_delete__ns1__GetPeccancyInfo(struct soap *soap, _ns1__GetPeccancyInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetPeccancyInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetPassCarInfoResponse
#define SOAP_TYPE__ns1__GetPassCarInfoResponse (34)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetPassCarInfoResponse(struct soap*, const char*, int, const _ns1__GetPassCarInfoResponse *, const char*);
SOAP_FMAC3 _ns1__GetPassCarInfoResponse * SOAP_FMAC4 soap_in__ns1__GetPassCarInfoResponse(struct soap*, const char*, _ns1__GetPassCarInfoResponse *, const char*);

#ifndef soap_write__ns1__GetPassCarInfoResponse
#define soap_write__ns1__GetPassCarInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetPassCarInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetPassCarInfoResponse * SOAP_FMAC4 soap_get__ns1__GetPassCarInfoResponse(struct soap*, _ns1__GetPassCarInfoResponse *, const char*, const char*);

#ifndef soap_read__ns1__GetPassCarInfoResponse
#define soap_read__ns1__GetPassCarInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetPassCarInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetPassCarInfoResponse * SOAP_FMAC2 soap_instantiate__ns1__GetPassCarInfoResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetPassCarInfoResponse * soap_new__ns1__GetPassCarInfoResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetPassCarInfoResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__GetPassCarInfoResponse * soap_new_req__ns1__GetPassCarInfoResponse(struct soap *soap) { _ns1__GetPassCarInfoResponse *_p = soap_instantiate__ns1__GetPassCarInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetPassCarInfoResponse * soap_new_set__ns1__GetPassCarInfoResponse(struct soap *soap, char *GetPassCarInfoResult) { _ns1__GetPassCarInfoResponse *_p = soap_instantiate__ns1__GetPassCarInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetPassCarInfoResponse::GetPassCarInfoResult = GetPassCarInfoResult; } return _p; }

inline void soap_delete__ns1__GetPassCarInfoResponse(struct soap *soap, _ns1__GetPassCarInfoResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetPassCarInfoResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetPassCarInfo
#define SOAP_TYPE__ns1__GetPassCarInfo (33)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetPassCarInfo(struct soap*, const char*, int, const _ns1__GetPassCarInfo *, const char*);
SOAP_FMAC3 _ns1__GetPassCarInfo * SOAP_FMAC4 soap_in__ns1__GetPassCarInfo(struct soap*, const char*, _ns1__GetPassCarInfo *, const char*);

#ifndef soap_write__ns1__GetPassCarInfo
#define soap_write__ns1__GetPassCarInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetPassCarInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetPassCarInfo * SOAP_FMAC4 soap_get__ns1__GetPassCarInfo(struct soap*, _ns1__GetPassCarInfo *, const char*, const char*);

#ifndef soap_read__ns1__GetPassCarInfo
#define soap_read__ns1__GetPassCarInfo(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetPassCarInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetPassCarInfo * SOAP_FMAC2 soap_instantiate__ns1__GetPassCarInfo(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetPassCarInfo * soap_new__ns1__GetPassCarInfo(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetPassCarInfo(soap, n, NULL, NULL, NULL); }

inline _ns1__GetPassCarInfo * soap_new_req__ns1__GetPassCarInfo(struct soap *soap) { _ns1__GetPassCarInfo *_p = soap_instantiate__ns1__GetPassCarInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetPassCarInfo * soap_new_set__ns1__GetPassCarInfo(struct soap *soap, char *xmlBody) { _ns1__GetPassCarInfo *_p = soap_instantiate__ns1__GetPassCarInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetPassCarInfo::xmlBody = xmlBody; } return _p; }

inline void soap_delete__ns1__GetPassCarInfo(struct soap *soap, _ns1__GetPassCarInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetPassCarInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetLocationInfoResponse
#define SOAP_TYPE__ns1__GetLocationInfoResponse (32)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetLocationInfoResponse(struct soap*, const char*, int, const _ns1__GetLocationInfoResponse *, const char*);
SOAP_FMAC3 _ns1__GetLocationInfoResponse * SOAP_FMAC4 soap_in__ns1__GetLocationInfoResponse(struct soap*, const char*, _ns1__GetLocationInfoResponse *, const char*);

#ifndef soap_write__ns1__GetLocationInfoResponse
#define soap_write__ns1__GetLocationInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetLocationInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetLocationInfoResponse * SOAP_FMAC4 soap_get__ns1__GetLocationInfoResponse(struct soap*, _ns1__GetLocationInfoResponse *, const char*, const char*);

#ifndef soap_read__ns1__GetLocationInfoResponse
#define soap_read__ns1__GetLocationInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetLocationInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetLocationInfoResponse * SOAP_FMAC2 soap_instantiate__ns1__GetLocationInfoResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetLocationInfoResponse * soap_new__ns1__GetLocationInfoResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetLocationInfoResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__GetLocationInfoResponse * soap_new_req__ns1__GetLocationInfoResponse(struct soap *soap) { _ns1__GetLocationInfoResponse *_p = soap_instantiate__ns1__GetLocationInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetLocationInfoResponse * soap_new_set__ns1__GetLocationInfoResponse(struct soap *soap, char *GetLocationInfoResult) { _ns1__GetLocationInfoResponse *_p = soap_instantiate__ns1__GetLocationInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetLocationInfoResponse::GetLocationInfoResult = GetLocationInfoResult; } return _p; }

inline void soap_delete__ns1__GetLocationInfoResponse(struct soap *soap, _ns1__GetLocationInfoResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetLocationInfoResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetLocationInfo
#define SOAP_TYPE__ns1__GetLocationInfo (31)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetLocationInfo(struct soap*, const char*, int, const _ns1__GetLocationInfo *, const char*);
SOAP_FMAC3 _ns1__GetLocationInfo * SOAP_FMAC4 soap_in__ns1__GetLocationInfo(struct soap*, const char*, _ns1__GetLocationInfo *, const char*);

#ifndef soap_write__ns1__GetLocationInfo
#define soap_write__ns1__GetLocationInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetLocationInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetLocationInfo * SOAP_FMAC4 soap_get__ns1__GetLocationInfo(struct soap*, _ns1__GetLocationInfo *, const char*, const char*);

#ifndef soap_read__ns1__GetLocationInfo
#define soap_read__ns1__GetLocationInfo(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetLocationInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetLocationInfo * SOAP_FMAC2 soap_instantiate__ns1__GetLocationInfo(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetLocationInfo * soap_new__ns1__GetLocationInfo(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetLocationInfo(soap, n, NULL, NULL, NULL); }

inline _ns1__GetLocationInfo * soap_new_req__ns1__GetLocationInfo(struct soap *soap) { _ns1__GetLocationInfo *_p = soap_instantiate__ns1__GetLocationInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetLocationInfo * soap_new_set__ns1__GetLocationInfo(struct soap *soap, char *ddbh) { _ns1__GetLocationInfo *_p = soap_instantiate__ns1__GetLocationInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetLocationInfo::ddbh = ddbh; } return _p; }

inline void soap_delete__ns1__GetLocationInfo(struct soap *soap, _ns1__GetLocationInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetLocationInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__RevokeSuspicionInfoResponse
#define SOAP_TYPE__ns1__RevokeSuspicionInfoResponse (30)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__RevokeSuspicionInfoResponse(struct soap*, const char*, int, const _ns1__RevokeSuspicionInfoResponse *, const char*);
SOAP_FMAC3 _ns1__RevokeSuspicionInfoResponse * SOAP_FMAC4 soap_in__ns1__RevokeSuspicionInfoResponse(struct soap*, const char*, _ns1__RevokeSuspicionInfoResponse *, const char*);

#ifndef soap_write__ns1__RevokeSuspicionInfoResponse
#define soap_write__ns1__RevokeSuspicionInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:RevokeSuspicionInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__RevokeSuspicionInfoResponse * SOAP_FMAC4 soap_get__ns1__RevokeSuspicionInfoResponse(struct soap*, _ns1__RevokeSuspicionInfoResponse *, const char*, const char*);

#ifndef soap_read__ns1__RevokeSuspicionInfoResponse
#define soap_read__ns1__RevokeSuspicionInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__RevokeSuspicionInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__RevokeSuspicionInfoResponse * SOAP_FMAC2 soap_instantiate__ns1__RevokeSuspicionInfoResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__RevokeSuspicionInfoResponse * soap_new__ns1__RevokeSuspicionInfoResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__RevokeSuspicionInfoResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__RevokeSuspicionInfoResponse * soap_new_req__ns1__RevokeSuspicionInfoResponse(struct soap *soap) { _ns1__RevokeSuspicionInfoResponse *_p = soap_instantiate__ns1__RevokeSuspicionInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__RevokeSuspicionInfoResponse * soap_new_set__ns1__RevokeSuspicionInfoResponse(struct soap *soap, char *RevokeSuspicionInfoResult) { _ns1__RevokeSuspicionInfoResponse *_p = soap_instantiate__ns1__RevokeSuspicionInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__RevokeSuspicionInfoResponse::RevokeSuspicionInfoResult = RevokeSuspicionInfoResult; } return _p; }

inline void soap_delete__ns1__RevokeSuspicionInfoResponse(struct soap *soap, _ns1__RevokeSuspicionInfoResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__RevokeSuspicionInfoResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__RevokeSuspicionInfo
#define SOAP_TYPE__ns1__RevokeSuspicionInfo (29)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__RevokeSuspicionInfo(struct soap*, const char*, int, const _ns1__RevokeSuspicionInfo *, const char*);
SOAP_FMAC3 _ns1__RevokeSuspicionInfo * SOAP_FMAC4 soap_in__ns1__RevokeSuspicionInfo(struct soap*, const char*, _ns1__RevokeSuspicionInfo *, const char*);

#ifndef soap_write__ns1__RevokeSuspicionInfo
#define soap_write__ns1__RevokeSuspicionInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:RevokeSuspicionInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__RevokeSuspicionInfo * SOAP_FMAC4 soap_get__ns1__RevokeSuspicionInfo(struct soap*, _ns1__RevokeSuspicionInfo *, const char*, const char*);

#ifndef soap_read__ns1__RevokeSuspicionInfo
#define soap_read__ns1__RevokeSuspicionInfo(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__RevokeSuspicionInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__RevokeSuspicionInfo * SOAP_FMAC2 soap_instantiate__ns1__RevokeSuspicionInfo(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__RevokeSuspicionInfo * soap_new__ns1__RevokeSuspicionInfo(struct soap *soap, int n = -1) { return soap_instantiate__ns1__RevokeSuspicionInfo(soap, n, NULL, NULL, NULL); }

inline _ns1__RevokeSuspicionInfo * soap_new_req__ns1__RevokeSuspicionInfo(struct soap *soap) { _ns1__RevokeSuspicionInfo *_p = soap_instantiate__ns1__RevokeSuspicionInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__RevokeSuspicionInfo * soap_new_set__ns1__RevokeSuspicionInfo(struct soap *soap, char *xmlBody) { _ns1__RevokeSuspicionInfo *_p = soap_instantiate__ns1__RevokeSuspicionInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__RevokeSuspicionInfo::xmlBody = xmlBody; } return _p; }

inline void soap_delete__ns1__RevokeSuspicionInfo(struct soap *soap, _ns1__RevokeSuspicionInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__RevokeSuspicionInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__InSuspicionInfoResponse
#define SOAP_TYPE__ns1__InSuspicionInfoResponse (28)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__InSuspicionInfoResponse(struct soap*, const char*, int, const _ns1__InSuspicionInfoResponse *, const char*);
SOAP_FMAC3 _ns1__InSuspicionInfoResponse * SOAP_FMAC4 soap_in__ns1__InSuspicionInfoResponse(struct soap*, const char*, _ns1__InSuspicionInfoResponse *, const char*);

#ifndef soap_write__ns1__InSuspicionInfoResponse
#define soap_write__ns1__InSuspicionInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:InSuspicionInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__InSuspicionInfoResponse * SOAP_FMAC4 soap_get__ns1__InSuspicionInfoResponse(struct soap*, _ns1__InSuspicionInfoResponse *, const char*, const char*);

#ifndef soap_read__ns1__InSuspicionInfoResponse
#define soap_read__ns1__InSuspicionInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__InSuspicionInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__InSuspicionInfoResponse * SOAP_FMAC2 soap_instantiate__ns1__InSuspicionInfoResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__InSuspicionInfoResponse * soap_new__ns1__InSuspicionInfoResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__InSuspicionInfoResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__InSuspicionInfoResponse * soap_new_req__ns1__InSuspicionInfoResponse(struct soap *soap) { _ns1__InSuspicionInfoResponse *_p = soap_instantiate__ns1__InSuspicionInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__InSuspicionInfoResponse * soap_new_set__ns1__InSuspicionInfoResponse(struct soap *soap, char *InSuspicionInfoResult) { _ns1__InSuspicionInfoResponse *_p = soap_instantiate__ns1__InSuspicionInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__InSuspicionInfoResponse::InSuspicionInfoResult = InSuspicionInfoResult; } return _p; }

inline void soap_delete__ns1__InSuspicionInfoResponse(struct soap *soap, _ns1__InSuspicionInfoResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__InSuspicionInfoResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__InSuspicionInfo
#define SOAP_TYPE__ns1__InSuspicionInfo (27)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__InSuspicionInfo(struct soap*, const char*, int, const _ns1__InSuspicionInfo *, const char*);
SOAP_FMAC3 _ns1__InSuspicionInfo * SOAP_FMAC4 soap_in__ns1__InSuspicionInfo(struct soap*, const char*, _ns1__InSuspicionInfo *, const char*);

#ifndef soap_write__ns1__InSuspicionInfo
#define soap_write__ns1__InSuspicionInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:InSuspicionInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__InSuspicionInfo * SOAP_FMAC4 soap_get__ns1__InSuspicionInfo(struct soap*, _ns1__InSuspicionInfo *, const char*, const char*);

#ifndef soap_read__ns1__InSuspicionInfo
#define soap_read__ns1__InSuspicionInfo(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__InSuspicionInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__InSuspicionInfo * SOAP_FMAC2 soap_instantiate__ns1__InSuspicionInfo(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__InSuspicionInfo * soap_new__ns1__InSuspicionInfo(struct soap *soap, int n = -1) { return soap_instantiate__ns1__InSuspicionInfo(soap, n, NULL, NULL, NULL); }

inline _ns1__InSuspicionInfo * soap_new_req__ns1__InSuspicionInfo(struct soap *soap) { _ns1__InSuspicionInfo *_p = soap_instantiate__ns1__InSuspicionInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__InSuspicionInfo * soap_new_set__ns1__InSuspicionInfo(struct soap *soap, char *xmlBody) { _ns1__InSuspicionInfo *_p = soap_instantiate__ns1__InSuspicionInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__InSuspicionInfo::xmlBody = xmlBody; } return _p; }

inline void soap_delete__ns1__InSuspicionInfo(struct soap *soap, _ns1__InSuspicionInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__InSuspicionInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__IntExtralistInfoResponse
#define SOAP_TYPE__ns1__IntExtralistInfoResponse (26)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__IntExtralistInfoResponse(struct soap*, const char*, int, const _ns1__IntExtralistInfoResponse *, const char*);
SOAP_FMAC3 _ns1__IntExtralistInfoResponse * SOAP_FMAC4 soap_in__ns1__IntExtralistInfoResponse(struct soap*, const char*, _ns1__IntExtralistInfoResponse *, const char*);

#ifndef soap_write__ns1__IntExtralistInfoResponse
#define soap_write__ns1__IntExtralistInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:IntExtralistInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__IntExtralistInfoResponse * SOAP_FMAC4 soap_get__ns1__IntExtralistInfoResponse(struct soap*, _ns1__IntExtralistInfoResponse *, const char*, const char*);

#ifndef soap_read__ns1__IntExtralistInfoResponse
#define soap_read__ns1__IntExtralistInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__IntExtralistInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__IntExtralistInfoResponse * SOAP_FMAC2 soap_instantiate__ns1__IntExtralistInfoResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__IntExtralistInfoResponse * soap_new__ns1__IntExtralistInfoResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__IntExtralistInfoResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__IntExtralistInfoResponse * soap_new_req__ns1__IntExtralistInfoResponse(struct soap *soap) { _ns1__IntExtralistInfoResponse *_p = soap_instantiate__ns1__IntExtralistInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__IntExtralistInfoResponse * soap_new_set__ns1__IntExtralistInfoResponse(struct soap *soap, char *IntExtralistInfoResult) { _ns1__IntExtralistInfoResponse *_p = soap_instantiate__ns1__IntExtralistInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__IntExtralistInfoResponse::IntExtralistInfoResult = IntExtralistInfoResult; } return _p; }

inline void soap_delete__ns1__IntExtralistInfoResponse(struct soap *soap, _ns1__IntExtralistInfoResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__IntExtralistInfoResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__IntExtralistInfo
#define SOAP_TYPE__ns1__IntExtralistInfo (25)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__IntExtralistInfo(struct soap*, const char*, int, const _ns1__IntExtralistInfo *, const char*);
SOAP_FMAC3 _ns1__IntExtralistInfo * SOAP_FMAC4 soap_in__ns1__IntExtralistInfo(struct soap*, const char*, _ns1__IntExtralistInfo *, const char*);

#ifndef soap_write__ns1__IntExtralistInfo
#define soap_write__ns1__IntExtralistInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:IntExtralistInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__IntExtralistInfo * SOAP_FMAC4 soap_get__ns1__IntExtralistInfo(struct soap*, _ns1__IntExtralistInfo *, const char*, const char*);

#ifndef soap_read__ns1__IntExtralistInfo
#define soap_read__ns1__IntExtralistInfo(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__IntExtralistInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__IntExtralistInfo * SOAP_FMAC2 soap_instantiate__ns1__IntExtralistInfo(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__IntExtralistInfo * soap_new__ns1__IntExtralistInfo(struct soap *soap, int n = -1) { return soap_instantiate__ns1__IntExtralistInfo(soap, n, NULL, NULL, NULL); }

inline _ns1__IntExtralistInfo * soap_new_req__ns1__IntExtralistInfo(struct soap *soap) { _ns1__IntExtralistInfo *_p = soap_instantiate__ns1__IntExtralistInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__IntExtralistInfo * soap_new_set__ns1__IntExtralistInfo(struct soap *soap, char *xmlBody) { _ns1__IntExtralistInfo *_p = soap_instantiate__ns1__IntExtralistInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__IntExtralistInfo::xmlBody = xmlBody; } return _p; }

inline void soap_delete__ns1__IntExtralistInfo(struct soap *soap, _ns1__IntExtralistInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__IntExtralistInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__InChecklessInfoResponse
#define SOAP_TYPE__ns1__InChecklessInfoResponse (24)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__InChecklessInfoResponse(struct soap*, const char*, int, const _ns1__InChecklessInfoResponse *, const char*);
SOAP_FMAC3 _ns1__InChecklessInfoResponse * SOAP_FMAC4 soap_in__ns1__InChecklessInfoResponse(struct soap*, const char*, _ns1__InChecklessInfoResponse *, const char*);

#ifndef soap_write__ns1__InChecklessInfoResponse
#define soap_write__ns1__InChecklessInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:InChecklessInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__InChecklessInfoResponse * SOAP_FMAC4 soap_get__ns1__InChecklessInfoResponse(struct soap*, _ns1__InChecklessInfoResponse *, const char*, const char*);

#ifndef soap_read__ns1__InChecklessInfoResponse
#define soap_read__ns1__InChecklessInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__InChecklessInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__InChecklessInfoResponse * SOAP_FMAC2 soap_instantiate__ns1__InChecklessInfoResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__InChecklessInfoResponse * soap_new__ns1__InChecklessInfoResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__InChecklessInfoResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__InChecklessInfoResponse * soap_new_req__ns1__InChecklessInfoResponse(struct soap *soap) { _ns1__InChecklessInfoResponse *_p = soap_instantiate__ns1__InChecklessInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__InChecklessInfoResponse * soap_new_set__ns1__InChecklessInfoResponse(struct soap *soap, char *InChecklessInfoResult) { _ns1__InChecklessInfoResponse *_p = soap_instantiate__ns1__InChecklessInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__InChecklessInfoResponse::InChecklessInfoResult = InChecklessInfoResult; } return _p; }

inline void soap_delete__ns1__InChecklessInfoResponse(struct soap *soap, _ns1__InChecklessInfoResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__InChecklessInfoResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__InChecklessInfo
#define SOAP_TYPE__ns1__InChecklessInfo (23)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__InChecklessInfo(struct soap*, const char*, int, const _ns1__InChecklessInfo *, const char*);
SOAP_FMAC3 _ns1__InChecklessInfo * SOAP_FMAC4 soap_in__ns1__InChecklessInfo(struct soap*, const char*, _ns1__InChecklessInfo *, const char*);

#ifndef soap_write__ns1__InChecklessInfo
#define soap_write__ns1__InChecklessInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:InChecklessInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__InChecklessInfo * SOAP_FMAC4 soap_get__ns1__InChecklessInfo(struct soap*, _ns1__InChecklessInfo *, const char*, const char*);

#ifndef soap_read__ns1__InChecklessInfo
#define soap_read__ns1__InChecklessInfo(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__InChecklessInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__InChecklessInfo * SOAP_FMAC2 soap_instantiate__ns1__InChecklessInfo(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__InChecklessInfo * soap_new__ns1__InChecklessInfo(struct soap *soap, int n = -1) { return soap_instantiate__ns1__InChecklessInfo(soap, n, NULL, NULL, NULL); }

inline _ns1__InChecklessInfo * soap_new_req__ns1__InChecklessInfo(struct soap *soap) { _ns1__InChecklessInfo *_p = soap_instantiate__ns1__InChecklessInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__InChecklessInfo * soap_new_set__ns1__InChecklessInfo(struct soap *soap, char *xmlBody) { _ns1__InChecklessInfo *_p = soap_instantiate__ns1__InChecklessInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__InChecklessInfo::xmlBody = xmlBody; } return _p; }

inline void soap_delete__ns1__InChecklessInfo(struct soap *soap, _ns1__InChecklessInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__InChecklessInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__InBlacklistInfoResponse
#define SOAP_TYPE__ns1__InBlacklistInfoResponse (22)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__InBlacklistInfoResponse(struct soap*, const char*, int, const _ns1__InBlacklistInfoResponse *, const char*);
SOAP_FMAC3 _ns1__InBlacklistInfoResponse * SOAP_FMAC4 soap_in__ns1__InBlacklistInfoResponse(struct soap*, const char*, _ns1__InBlacklistInfoResponse *, const char*);

#ifndef soap_write__ns1__InBlacklistInfoResponse
#define soap_write__ns1__InBlacklistInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:InBlacklistInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__InBlacklistInfoResponse * SOAP_FMAC4 soap_get__ns1__InBlacklistInfoResponse(struct soap*, _ns1__InBlacklistInfoResponse *, const char*, const char*);

#ifndef soap_read__ns1__InBlacklistInfoResponse
#define soap_read__ns1__InBlacklistInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__InBlacklistInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__InBlacklistInfoResponse * SOAP_FMAC2 soap_instantiate__ns1__InBlacklistInfoResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__InBlacklistInfoResponse * soap_new__ns1__InBlacklistInfoResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__InBlacklistInfoResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__InBlacklistInfoResponse * soap_new_req__ns1__InBlacklistInfoResponse(struct soap *soap) { _ns1__InBlacklistInfoResponse *_p = soap_instantiate__ns1__InBlacklistInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__InBlacklistInfoResponse * soap_new_set__ns1__InBlacklistInfoResponse(struct soap *soap, char *InBlacklistInfoResult) { _ns1__InBlacklistInfoResponse *_p = soap_instantiate__ns1__InBlacklistInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__InBlacklistInfoResponse::InBlacklistInfoResult = InBlacklistInfoResult; } return _p; }

inline void soap_delete__ns1__InBlacklistInfoResponse(struct soap *soap, _ns1__InBlacklistInfoResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__InBlacklistInfoResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__InBlacklistInfo
#define SOAP_TYPE__ns1__InBlacklistInfo (21)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__InBlacklistInfo(struct soap*, const char*, int, const _ns1__InBlacklistInfo *, const char*);
SOAP_FMAC3 _ns1__InBlacklistInfo * SOAP_FMAC4 soap_in__ns1__InBlacklistInfo(struct soap*, const char*, _ns1__InBlacklistInfo *, const char*);

#ifndef soap_write__ns1__InBlacklistInfo
#define soap_write__ns1__InBlacklistInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:InBlacklistInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__InBlacklistInfo * SOAP_FMAC4 soap_get__ns1__InBlacklistInfo(struct soap*, _ns1__InBlacklistInfo *, const char*, const char*);

#ifndef soap_read__ns1__InBlacklistInfo
#define soap_read__ns1__InBlacklistInfo(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__InBlacklistInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__InBlacklistInfo * SOAP_FMAC2 soap_instantiate__ns1__InBlacklistInfo(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__InBlacklistInfo * soap_new__ns1__InBlacklistInfo(struct soap *soap, int n = -1) { return soap_instantiate__ns1__InBlacklistInfo(soap, n, NULL, NULL, NULL); }

inline _ns1__InBlacklistInfo * soap_new_req__ns1__InBlacklistInfo(struct soap *soap) { _ns1__InBlacklistInfo *_p = soap_instantiate__ns1__InBlacklistInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__InBlacklistInfo * soap_new_set__ns1__InBlacklistInfo(struct soap *soap, char *xmlBody) { _ns1__InBlacklistInfo *_p = soap_instantiate__ns1__InBlacklistInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__InBlacklistInfo::xmlBody = xmlBody; } return _p; }

inline void soap_delete__ns1__InBlacklistInfo(struct soap *soap, _ns1__InBlacklistInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__InBlacklistInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__InCheckedPeccancyInfoResponse
#define SOAP_TYPE__ns1__InCheckedPeccancyInfoResponse (20)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__InCheckedPeccancyInfoResponse(struct soap*, const char*, int, const _ns1__InCheckedPeccancyInfoResponse *, const char*);
SOAP_FMAC3 _ns1__InCheckedPeccancyInfoResponse * SOAP_FMAC4 soap_in__ns1__InCheckedPeccancyInfoResponse(struct soap*, const char*, _ns1__InCheckedPeccancyInfoResponse *, const char*);

#ifndef soap_write__ns1__InCheckedPeccancyInfoResponse
#define soap_write__ns1__InCheckedPeccancyInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:InCheckedPeccancyInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__InCheckedPeccancyInfoResponse * SOAP_FMAC4 soap_get__ns1__InCheckedPeccancyInfoResponse(struct soap*, _ns1__InCheckedPeccancyInfoResponse *, const char*, const char*);

#ifndef soap_read__ns1__InCheckedPeccancyInfoResponse
#define soap_read__ns1__InCheckedPeccancyInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__InCheckedPeccancyInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__InCheckedPeccancyInfoResponse * SOAP_FMAC2 soap_instantiate__ns1__InCheckedPeccancyInfoResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__InCheckedPeccancyInfoResponse * soap_new__ns1__InCheckedPeccancyInfoResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__InCheckedPeccancyInfoResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__InCheckedPeccancyInfoResponse * soap_new_req__ns1__InCheckedPeccancyInfoResponse(struct soap *soap) { _ns1__InCheckedPeccancyInfoResponse *_p = soap_instantiate__ns1__InCheckedPeccancyInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__InCheckedPeccancyInfoResponse * soap_new_set__ns1__InCheckedPeccancyInfoResponse(struct soap *soap, char *InCheckedPeccancyInfoResult) { _ns1__InCheckedPeccancyInfoResponse *_p = soap_instantiate__ns1__InCheckedPeccancyInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__InCheckedPeccancyInfoResponse::InCheckedPeccancyInfoResult = InCheckedPeccancyInfoResult; } return _p; }

inline void soap_delete__ns1__InCheckedPeccancyInfoResponse(struct soap *soap, _ns1__InCheckedPeccancyInfoResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__InCheckedPeccancyInfoResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__InCheckedPeccancyInfo
#define SOAP_TYPE__ns1__InCheckedPeccancyInfo (19)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__InCheckedPeccancyInfo(struct soap*, const char*, int, const _ns1__InCheckedPeccancyInfo *, const char*);
SOAP_FMAC3 _ns1__InCheckedPeccancyInfo * SOAP_FMAC4 soap_in__ns1__InCheckedPeccancyInfo(struct soap*, const char*, _ns1__InCheckedPeccancyInfo *, const char*);

#ifndef soap_write__ns1__InCheckedPeccancyInfo
#define soap_write__ns1__InCheckedPeccancyInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:InCheckedPeccancyInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__InCheckedPeccancyInfo * SOAP_FMAC4 soap_get__ns1__InCheckedPeccancyInfo(struct soap*, _ns1__InCheckedPeccancyInfo *, const char*, const char*);

#ifndef soap_read__ns1__InCheckedPeccancyInfo
#define soap_read__ns1__InCheckedPeccancyInfo(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__InCheckedPeccancyInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__InCheckedPeccancyInfo * SOAP_FMAC2 soap_instantiate__ns1__InCheckedPeccancyInfo(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__InCheckedPeccancyInfo * soap_new__ns1__InCheckedPeccancyInfo(struct soap *soap, int n = -1) { return soap_instantiate__ns1__InCheckedPeccancyInfo(soap, n, NULL, NULL, NULL); }

inline _ns1__InCheckedPeccancyInfo * soap_new_req__ns1__InCheckedPeccancyInfo(struct soap *soap) { _ns1__InCheckedPeccancyInfo *_p = soap_instantiate__ns1__InCheckedPeccancyInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__InCheckedPeccancyInfo * soap_new_set__ns1__InCheckedPeccancyInfo(struct soap *soap, char *xmlBody) { _ns1__InCheckedPeccancyInfo *_p = soap_instantiate__ns1__InCheckedPeccancyInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__InCheckedPeccancyInfo::xmlBody = xmlBody; } return _p; }

inline void soap_delete__ns1__InCheckedPeccancyInfo(struct soap *soap, _ns1__InCheckedPeccancyInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__InCheckedPeccancyInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__InPeccancyInfoResponse
#define SOAP_TYPE__ns1__InPeccancyInfoResponse (18)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__InPeccancyInfoResponse(struct soap*, const char*, int, const _ns1__InPeccancyInfoResponse *, const char*);
SOAP_FMAC3 _ns1__InPeccancyInfoResponse * SOAP_FMAC4 soap_in__ns1__InPeccancyInfoResponse(struct soap*, const char*, _ns1__InPeccancyInfoResponse *, const char*);

#ifndef soap_write__ns1__InPeccancyInfoResponse
#define soap_write__ns1__InPeccancyInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:InPeccancyInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__InPeccancyInfoResponse * SOAP_FMAC4 soap_get__ns1__InPeccancyInfoResponse(struct soap*, _ns1__InPeccancyInfoResponse *, const char*, const char*);

#ifndef soap_read__ns1__InPeccancyInfoResponse
#define soap_read__ns1__InPeccancyInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__InPeccancyInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__InPeccancyInfoResponse * SOAP_FMAC2 soap_instantiate__ns1__InPeccancyInfoResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__InPeccancyInfoResponse * soap_new__ns1__InPeccancyInfoResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__InPeccancyInfoResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__InPeccancyInfoResponse * soap_new_req__ns1__InPeccancyInfoResponse(struct soap *soap) { _ns1__InPeccancyInfoResponse *_p = soap_instantiate__ns1__InPeccancyInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__InPeccancyInfoResponse * soap_new_set__ns1__InPeccancyInfoResponse(struct soap *soap, char *InPeccancyInfoResult) { _ns1__InPeccancyInfoResponse *_p = soap_instantiate__ns1__InPeccancyInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__InPeccancyInfoResponse::InPeccancyInfoResult = InPeccancyInfoResult; } return _p; }

inline void soap_delete__ns1__InPeccancyInfoResponse(struct soap *soap, _ns1__InPeccancyInfoResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__InPeccancyInfoResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__InPeccancyInfo
#define SOAP_TYPE__ns1__InPeccancyInfo (17)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__InPeccancyInfo(struct soap*, const char*, int, const _ns1__InPeccancyInfo *, const char*);
SOAP_FMAC3 _ns1__InPeccancyInfo * SOAP_FMAC4 soap_in__ns1__InPeccancyInfo(struct soap*, const char*, _ns1__InPeccancyInfo *, const char*);

#ifndef soap_write__ns1__InPeccancyInfo
#define soap_write__ns1__InPeccancyInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:InPeccancyInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__InPeccancyInfo * SOAP_FMAC4 soap_get__ns1__InPeccancyInfo(struct soap*, _ns1__InPeccancyInfo *, const char*, const char*);

#ifndef soap_read__ns1__InPeccancyInfo
#define soap_read__ns1__InPeccancyInfo(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__InPeccancyInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__InPeccancyInfo * SOAP_FMAC2 soap_instantiate__ns1__InPeccancyInfo(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__InPeccancyInfo * soap_new__ns1__InPeccancyInfo(struct soap *soap, int n = -1) { return soap_instantiate__ns1__InPeccancyInfo(soap, n, NULL, NULL, NULL); }

inline _ns1__InPeccancyInfo * soap_new_req__ns1__InPeccancyInfo(struct soap *soap) { _ns1__InPeccancyInfo *_p = soap_instantiate__ns1__InPeccancyInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__InPeccancyInfo * soap_new_set__ns1__InPeccancyInfo(struct soap *soap, char *xmlBody) { _ns1__InPeccancyInfo *_p = soap_instantiate__ns1__InPeccancyInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__InPeccancyInfo::xmlBody = xmlBody; } return _p; }

inline void soap_delete__ns1__InPeccancyInfo(struct soap *soap, _ns1__InPeccancyInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__InPeccancyInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__InPassCarInfoResponse
#define SOAP_TYPE__ns1__InPassCarInfoResponse (16)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__InPassCarInfoResponse(struct soap*, const char*, int, const _ns1__InPassCarInfoResponse *, const char*);
SOAP_FMAC3 _ns1__InPassCarInfoResponse * SOAP_FMAC4 soap_in__ns1__InPassCarInfoResponse(struct soap*, const char*, _ns1__InPassCarInfoResponse *, const char*);

#ifndef soap_write__ns1__InPassCarInfoResponse
#define soap_write__ns1__InPassCarInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:InPassCarInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__InPassCarInfoResponse * SOAP_FMAC4 soap_get__ns1__InPassCarInfoResponse(struct soap*, _ns1__InPassCarInfoResponse *, const char*, const char*);

#ifndef soap_read__ns1__InPassCarInfoResponse
#define soap_read__ns1__InPassCarInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__InPassCarInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__InPassCarInfoResponse * SOAP_FMAC2 soap_instantiate__ns1__InPassCarInfoResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__InPassCarInfoResponse * soap_new__ns1__InPassCarInfoResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__InPassCarInfoResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__InPassCarInfoResponse * soap_new_req__ns1__InPassCarInfoResponse(struct soap *soap) { _ns1__InPassCarInfoResponse *_p = soap_instantiate__ns1__InPassCarInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__InPassCarInfoResponse * soap_new_set__ns1__InPassCarInfoResponse(struct soap *soap, char *InPassCarInfoResult) { _ns1__InPassCarInfoResponse *_p = soap_instantiate__ns1__InPassCarInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__InPassCarInfoResponse::InPassCarInfoResult = InPassCarInfoResult; } return _p; }

inline void soap_delete__ns1__InPassCarInfoResponse(struct soap *soap, _ns1__InPassCarInfoResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__InPassCarInfoResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__InPassCarInfo
#define SOAP_TYPE__ns1__InPassCarInfo (15)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__InPassCarInfo(struct soap*, const char*, int, const _ns1__InPassCarInfo *, const char*);
SOAP_FMAC3 _ns1__InPassCarInfo * SOAP_FMAC4 soap_in__ns1__InPassCarInfo(struct soap*, const char*, _ns1__InPassCarInfo *, const char*);

#ifndef soap_write__ns1__InPassCarInfo
#define soap_write__ns1__InPassCarInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:InPassCarInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__InPassCarInfo * SOAP_FMAC4 soap_get__ns1__InPassCarInfo(struct soap*, _ns1__InPassCarInfo *, const char*, const char*);

#ifndef soap_read__ns1__InPassCarInfo
#define soap_read__ns1__InPassCarInfo(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__InPassCarInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__InPassCarInfo * SOAP_FMAC2 soap_instantiate__ns1__InPassCarInfo(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__InPassCarInfo * soap_new__ns1__InPassCarInfo(struct soap *soap, int n = -1) { return soap_instantiate__ns1__InPassCarInfo(soap, n, NULL, NULL, NULL); }

inline _ns1__InPassCarInfo * soap_new_req__ns1__InPassCarInfo(struct soap *soap) { _ns1__InPassCarInfo *_p = soap_instantiate__ns1__InPassCarInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__InPassCarInfo * soap_new_set__ns1__InPassCarInfo(struct soap *soap, char *xmlBody) { _ns1__InPassCarInfo *_p = soap_instantiate__ns1__InPassCarInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__InPassCarInfo::xmlBody = xmlBody; } return _p; }

inline void soap_delete__ns1__InPassCarInfo(struct soap *soap, _ns1__InPassCarInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__InPassCarInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__CarPlateRecogResponse
#define SOAP_TYPE__ns1__CarPlateRecogResponse (14)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CarPlateRecogResponse(struct soap*, const char*, int, const _ns1__CarPlateRecogResponse *, const char*);
SOAP_FMAC3 _ns1__CarPlateRecogResponse * SOAP_FMAC4 soap_in__ns1__CarPlateRecogResponse(struct soap*, const char*, _ns1__CarPlateRecogResponse *, const char*);

#ifndef soap_write__ns1__CarPlateRecogResponse
#define soap_write__ns1__CarPlateRecogResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:CarPlateRecogResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__CarPlateRecogResponse * SOAP_FMAC4 soap_get__ns1__CarPlateRecogResponse(struct soap*, _ns1__CarPlateRecogResponse *, const char*, const char*);

#ifndef soap_read__ns1__CarPlateRecogResponse
#define soap_read__ns1__CarPlateRecogResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__CarPlateRecogResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__CarPlateRecogResponse * SOAP_FMAC2 soap_instantiate__ns1__CarPlateRecogResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__CarPlateRecogResponse * soap_new__ns1__CarPlateRecogResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__CarPlateRecogResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__CarPlateRecogResponse * soap_new_req__ns1__CarPlateRecogResponse(struct soap *soap) { _ns1__CarPlateRecogResponse *_p = soap_instantiate__ns1__CarPlateRecogResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__CarPlateRecogResponse * soap_new_set__ns1__CarPlateRecogResponse(struct soap *soap, char *CarPlateRecogResult) { _ns1__CarPlateRecogResponse *_p = soap_instantiate__ns1__CarPlateRecogResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__CarPlateRecogResponse::CarPlateRecogResult = CarPlateRecogResult; } return _p; }

inline void soap_delete__ns1__CarPlateRecogResponse(struct soap *soap, _ns1__CarPlateRecogResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__CarPlateRecogResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__CarPlateRecog
#define SOAP_TYPE__ns1__CarPlateRecog (13)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CarPlateRecog(struct soap*, const char*, int, const _ns1__CarPlateRecog *, const char*);
SOAP_FMAC3 _ns1__CarPlateRecog * SOAP_FMAC4 soap_in__ns1__CarPlateRecog(struct soap*, const char*, _ns1__CarPlateRecog *, const char*);

#ifndef soap_write__ns1__CarPlateRecog
#define soap_write__ns1__CarPlateRecog(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:CarPlateRecog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__CarPlateRecog * SOAP_FMAC4 soap_get__ns1__CarPlateRecog(struct soap*, _ns1__CarPlateRecog *, const char*, const char*);

#ifndef soap_read__ns1__CarPlateRecog
#define soap_read__ns1__CarPlateRecog(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__CarPlateRecog(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__CarPlateRecog * SOAP_FMAC2 soap_instantiate__ns1__CarPlateRecog(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__CarPlateRecog * soap_new__ns1__CarPlateRecog(struct soap *soap, int n = -1) { return soap_instantiate__ns1__CarPlateRecog(soap, n, NULL, NULL, NULL); }

inline _ns1__CarPlateRecog * soap_new_req__ns1__CarPlateRecog(struct soap *soap) { _ns1__CarPlateRecog *_p = soap_instantiate__ns1__CarPlateRecog(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__CarPlateRecog * soap_new_set__ns1__CarPlateRecog(struct soap *soap, char *xmlBody) { _ns1__CarPlateRecog *_p = soap_instantiate__ns1__CarPlateRecog(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__CarPlateRecog::xmlBody = xmlBody; } return _p; }

inline void soap_delete__ns1__CarPlateRecog(struct soap *soap, _ns1__CarPlateRecog *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__CarPlateRecog(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetXMlFormatResponse
#define SOAP_TYPE__ns1__GetXMlFormatResponse (12)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetXMlFormatResponse(struct soap*, const char*, int, const _ns1__GetXMlFormatResponse *, const char*);
SOAP_FMAC3 _ns1__GetXMlFormatResponse * SOAP_FMAC4 soap_in__ns1__GetXMlFormatResponse(struct soap*, const char*, _ns1__GetXMlFormatResponse *, const char*);

#ifndef soap_write__ns1__GetXMlFormatResponse
#define soap_write__ns1__GetXMlFormatResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetXMlFormatResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetXMlFormatResponse * SOAP_FMAC4 soap_get__ns1__GetXMlFormatResponse(struct soap*, _ns1__GetXMlFormatResponse *, const char*, const char*);

#ifndef soap_read__ns1__GetXMlFormatResponse
#define soap_read__ns1__GetXMlFormatResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetXMlFormatResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetXMlFormatResponse * SOAP_FMAC2 soap_instantiate__ns1__GetXMlFormatResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetXMlFormatResponse * soap_new__ns1__GetXMlFormatResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetXMlFormatResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__GetXMlFormatResponse * soap_new_req__ns1__GetXMlFormatResponse(struct soap *soap) { _ns1__GetXMlFormatResponse *_p = soap_instantiate__ns1__GetXMlFormatResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetXMlFormatResponse * soap_new_set__ns1__GetXMlFormatResponse(struct soap *soap, char *GetXMlFormatResult) { _ns1__GetXMlFormatResponse *_p = soap_instantiate__ns1__GetXMlFormatResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetXMlFormatResponse::GetXMlFormatResult = GetXMlFormatResult; } return _p; }

inline void soap_delete__ns1__GetXMlFormatResponse(struct soap *soap, _ns1__GetXMlFormatResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetXMlFormatResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetXMlFormat
#define SOAP_TYPE__ns1__GetXMlFormat (11)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetXMlFormat(struct soap*, const char*, int, const _ns1__GetXMlFormat *, const char*);
SOAP_FMAC3 _ns1__GetXMlFormat * SOAP_FMAC4 soap_in__ns1__GetXMlFormat(struct soap*, const char*, _ns1__GetXMlFormat *, const char*);

#ifndef soap_write__ns1__GetXMlFormat
#define soap_write__ns1__GetXMlFormat(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetXMlFormat", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetXMlFormat * SOAP_FMAC4 soap_get__ns1__GetXMlFormat(struct soap*, _ns1__GetXMlFormat *, const char*, const char*);

#ifndef soap_read__ns1__GetXMlFormat
#define soap_read__ns1__GetXMlFormat(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetXMlFormat(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetXMlFormat * SOAP_FMAC2 soap_instantiate__ns1__GetXMlFormat(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetXMlFormat * soap_new__ns1__GetXMlFormat(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetXMlFormat(soap, n, NULL, NULL, NULL); }

inline _ns1__GetXMlFormat * soap_new_req__ns1__GetXMlFormat(struct soap *soap) { _ns1__GetXMlFormat *_p = soap_instantiate__ns1__GetXMlFormat(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetXMlFormat * soap_new_set__ns1__GetXMlFormat(struct soap *soap, char *systemType, char *iVersion) { _ns1__GetXMlFormat *_p = soap_instantiate__ns1__GetXMlFormat(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetXMlFormat::systemType = systemType; _p->_ns1__GetXMlFormat::iVersion = iVersion; } return _p; }

inline void soap_delete__ns1__GetXMlFormat(struct soap *soap, _ns1__GetXMlFormat *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetXMlFormat(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetCurrentVersionResponse
#define SOAP_TYPE__ns1__GetCurrentVersionResponse (10)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetCurrentVersionResponse(struct soap*, const char*, int, const _ns1__GetCurrentVersionResponse *, const char*);
SOAP_FMAC3 _ns1__GetCurrentVersionResponse * SOAP_FMAC4 soap_in__ns1__GetCurrentVersionResponse(struct soap*, const char*, _ns1__GetCurrentVersionResponse *, const char*);

#ifndef soap_write__ns1__GetCurrentVersionResponse
#define soap_write__ns1__GetCurrentVersionResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetCurrentVersionResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetCurrentVersionResponse * SOAP_FMAC4 soap_get__ns1__GetCurrentVersionResponse(struct soap*, _ns1__GetCurrentVersionResponse *, const char*, const char*);

#ifndef soap_read__ns1__GetCurrentVersionResponse
#define soap_read__ns1__GetCurrentVersionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetCurrentVersionResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetCurrentVersionResponse * SOAP_FMAC2 soap_instantiate__ns1__GetCurrentVersionResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetCurrentVersionResponse * soap_new__ns1__GetCurrentVersionResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetCurrentVersionResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__GetCurrentVersionResponse * soap_new_req__ns1__GetCurrentVersionResponse(struct soap *soap) { _ns1__GetCurrentVersionResponse *_p = soap_instantiate__ns1__GetCurrentVersionResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetCurrentVersionResponse * soap_new_set__ns1__GetCurrentVersionResponse(struct soap *soap, char *GetCurrentVersionResult) { _ns1__GetCurrentVersionResponse *_p = soap_instantiate__ns1__GetCurrentVersionResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetCurrentVersionResponse::GetCurrentVersionResult = GetCurrentVersionResult; } return _p; }

inline void soap_delete__ns1__GetCurrentVersionResponse(struct soap *soap, _ns1__GetCurrentVersionResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetCurrentVersionResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetCurrentVersion
#define SOAP_TYPE__ns1__GetCurrentVersion (9)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetCurrentVersion(struct soap*, const char*, int, const _ns1__GetCurrentVersion *, const char*);
SOAP_FMAC3 _ns1__GetCurrentVersion * SOAP_FMAC4 soap_in__ns1__GetCurrentVersion(struct soap*, const char*, _ns1__GetCurrentVersion *, const char*);

#ifndef soap_write__ns1__GetCurrentVersion
#define soap_write__ns1__GetCurrentVersion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetCurrentVersion", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetCurrentVersion * SOAP_FMAC4 soap_get__ns1__GetCurrentVersion(struct soap*, _ns1__GetCurrentVersion *, const char*, const char*);

#ifndef soap_read__ns1__GetCurrentVersion
#define soap_read__ns1__GetCurrentVersion(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetCurrentVersion(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetCurrentVersion * SOAP_FMAC2 soap_instantiate__ns1__GetCurrentVersion(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetCurrentVersion * soap_new__ns1__GetCurrentVersion(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetCurrentVersion(soap, n, NULL, NULL, NULL); }

inline _ns1__GetCurrentVersion * soap_new_req__ns1__GetCurrentVersion(struct soap *soap) { _ns1__GetCurrentVersion *_p = soap_instantiate__ns1__GetCurrentVersion(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetCurrentVersion * soap_new_set__ns1__GetCurrentVersion(struct soap *soap) { _ns1__GetCurrentVersion *_p = soap_instantiate__ns1__GetCurrentVersion(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__ns1__GetCurrentVersion(struct soap *soap, _ns1__GetCurrentVersion *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetCurrentVersion(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__WebserviceTestResponse
#define SOAP_TYPE__ns1__WebserviceTestResponse (8)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__WebserviceTestResponse(struct soap*, const char*, int, const _ns1__WebserviceTestResponse *, const char*);
SOAP_FMAC3 _ns1__WebserviceTestResponse * SOAP_FMAC4 soap_in__ns1__WebserviceTestResponse(struct soap*, const char*, _ns1__WebserviceTestResponse *, const char*);

#ifndef soap_write__ns1__WebserviceTestResponse
#define soap_write__ns1__WebserviceTestResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:WebserviceTestResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__WebserviceTestResponse * SOAP_FMAC4 soap_get__ns1__WebserviceTestResponse(struct soap*, _ns1__WebserviceTestResponse *, const char*, const char*);

#ifndef soap_read__ns1__WebserviceTestResponse
#define soap_read__ns1__WebserviceTestResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__WebserviceTestResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__WebserviceTestResponse * SOAP_FMAC2 soap_instantiate__ns1__WebserviceTestResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__WebserviceTestResponse * soap_new__ns1__WebserviceTestResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__WebserviceTestResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__WebserviceTestResponse * soap_new_req__ns1__WebserviceTestResponse(struct soap *soap) { _ns1__WebserviceTestResponse *_p = soap_instantiate__ns1__WebserviceTestResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__WebserviceTestResponse * soap_new_set__ns1__WebserviceTestResponse(struct soap *soap, char *WebserviceTestResult) { _ns1__WebserviceTestResponse *_p = soap_instantiate__ns1__WebserviceTestResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__WebserviceTestResponse::WebserviceTestResult = WebserviceTestResult; } return _p; }

inline void soap_delete__ns1__WebserviceTestResponse(struct soap *soap, _ns1__WebserviceTestResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__WebserviceTestResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__WebserviceTest
#define SOAP_TYPE__ns1__WebserviceTest (7)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__WebserviceTest(struct soap*, const char*, int, const _ns1__WebserviceTest *, const char*);
SOAP_FMAC3 _ns1__WebserviceTest * SOAP_FMAC4 soap_in__ns1__WebserviceTest(struct soap*, const char*, _ns1__WebserviceTest *, const char*);

#ifndef soap_write__ns1__WebserviceTest
#define soap_write__ns1__WebserviceTest(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:WebserviceTest", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__WebserviceTest * SOAP_FMAC4 soap_get__ns1__WebserviceTest(struct soap*, _ns1__WebserviceTest *, const char*, const char*);

#ifndef soap_read__ns1__WebserviceTest
#define soap_read__ns1__WebserviceTest(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__WebserviceTest(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__WebserviceTest * SOAP_FMAC2 soap_instantiate__ns1__WebserviceTest(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__WebserviceTest * soap_new__ns1__WebserviceTest(struct soap *soap, int n = -1) { return soap_instantiate__ns1__WebserviceTest(soap, n, NULL, NULL, NULL); }

inline _ns1__WebserviceTest * soap_new_req__ns1__WebserviceTest(struct soap *soap) { _ns1__WebserviceTest *_p = soap_instantiate__ns1__WebserviceTest(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__WebserviceTest * soap_new_set__ns1__WebserviceTest(struct soap *soap) { _ns1__WebserviceTest *_p = soap_instantiate__ns1__WebserviceTest(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__ns1__WebserviceTest(struct soap *soap, _ns1__WebserviceTest *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__WebserviceTest(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (232)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data),0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Fault * soap_new_SOAP_ENV__Fault(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Fault * soap_new_req_SOAP_ENV__Fault(struct soap *soap) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); } return _p; }

inline struct SOAP_ENV__Fault * soap_new_set_SOAP_ENV__Fault(struct soap *soap, char *faultcode, char *faultstring, char *faultactor, struct SOAP_ENV__Detail *detail, struct SOAP_ENV__Code *SOAP_ENV__Code, struct SOAP_ENV__Reason *SOAP_ENV__Reason, char *SOAP_ENV__Node, char *SOAP_ENV__Role, struct SOAP_ENV__Detail *SOAP_ENV__Detail) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); _p->faultcode = faultcode; _p->faultstring = faultstring; _p->faultactor = faultactor; _p->detail = detail; _p->SOAP_ENV__Code = SOAP_ENV__Code; _p->SOAP_ENV__Reason = SOAP_ENV__Reason; _p->SOAP_ENV__Node = SOAP_ENV__Node; _p->SOAP_ENV__Role = SOAP_ENV__Role; _p->SOAP_ENV__Detail = SOAP_ENV__Detail; } return _p; }

inline void soap_delete_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (231)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data),0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Reason * soap_new_SOAP_ENV__Reason(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Reason * soap_new_req_SOAP_ENV__Reason(struct soap *soap) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); } return _p; }

inline struct SOAP_ENV__Reason * soap_new_set_SOAP_ENV__Reason(struct soap *soap, char *SOAP_ENV__Text) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); _p->SOAP_ENV__Text = SOAP_ENV__Text; } return _p; }

inline void soap_delete_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (228)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data),0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Detail * soap_new_SOAP_ENV__Detail(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Detail * soap_new_req_SOAP_ENV__Detail(struct soap *soap, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__type = __type; _p->fault = fault; } return _p; }

inline struct SOAP_ENV__Detail * soap_new_set_SOAP_ENV__Detail(struct soap *soap, char *__any, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__any = __any; _p->__type = __type; _p->fault = fault; } return _p; }

inline void soap_delete_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (226)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data),0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Code * soap_new_SOAP_ENV__Code(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Code * soap_new_req_SOAP_ENV__Code(struct soap *soap) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); } return _p; }

inline struct SOAP_ENV__Code * soap_new_set_SOAP_ENV__Code(struct soap *soap, char *SOAP_ENV__Value, struct SOAP_ENV__Code *SOAP_ENV__Subcode) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); _p->SOAP_ENV__Value = SOAP_ENV__Value; _p->SOAP_ENV__Subcode = SOAP_ENV__Subcode; } return _p; }

inline void soap_delete_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (225)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data),0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Header * soap_new_SOAP_ENV__Header(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Header * soap_new_req_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline struct SOAP_ENV__Header * soap_new_set_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline void soap_delete_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE___ns1__CheckUserInfo_
#define SOAP_TYPE___ns1__CheckUserInfo_ (224)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__CheckUserInfo_(struct soap*, struct __ns1__CheckUserInfo_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__CheckUserInfo_(struct soap*, const struct __ns1__CheckUserInfo_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__CheckUserInfo_(struct soap*, const char*, int, const struct __ns1__CheckUserInfo_ *, const char*);
SOAP_FMAC3 struct __ns1__CheckUserInfo_ * SOAP_FMAC4 soap_in___ns1__CheckUserInfo_(struct soap*, const char*, struct __ns1__CheckUserInfo_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__CheckUserInfo_(struct soap*, const struct __ns1__CheckUserInfo_ *, const char*, const char*);

#ifndef soap_write___ns1__CheckUserInfo_
#define soap_write___ns1__CheckUserInfo_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__CheckUserInfo_(soap, data),0) || soap_put___ns1__CheckUserInfo_(soap, data, "-ns1:CheckUserInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__CheckUserInfo_ * SOAP_FMAC4 soap_get___ns1__CheckUserInfo_(struct soap*, struct __ns1__CheckUserInfo_ *, const char*, const char*);

#ifndef soap_read___ns1__CheckUserInfo_
#define soap_read___ns1__CheckUserInfo_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__CheckUserInfo_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__CheckUserInfo_ * SOAP_FMAC2 soap_instantiate___ns1__CheckUserInfo_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__CheckUserInfo_ * soap_new___ns1__CheckUserInfo_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__CheckUserInfo_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__CheckUserInfo_ * soap_new_req___ns1__CheckUserInfo_(struct soap *soap) { struct __ns1__CheckUserInfo_ *_p = soap_instantiate___ns1__CheckUserInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__CheckUserInfo_(soap, _p); } return _p; }

inline struct __ns1__CheckUserInfo_ * soap_new_set___ns1__CheckUserInfo_(struct soap *soap, _ns1__CheckUserInfo *ns1__CheckUserInfo) { struct __ns1__CheckUserInfo_ *_p = soap_instantiate___ns1__CheckUserInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__CheckUserInfo_(soap, _p); _p->ns1__CheckUserInfo = ns1__CheckUserInfo; } return _p; }

inline void soap_delete___ns1__CheckUserInfo_(struct soap *soap, struct __ns1__CheckUserInfo_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__CheckUserInfo_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__addTransRecInfo_
#define SOAP_TYPE___ns1__addTransRecInfo_ (222)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__addTransRecInfo_(struct soap*, struct __ns1__addTransRecInfo_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__addTransRecInfo_(struct soap*, const struct __ns1__addTransRecInfo_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__addTransRecInfo_(struct soap*, const char*, int, const struct __ns1__addTransRecInfo_ *, const char*);
SOAP_FMAC3 struct __ns1__addTransRecInfo_ * SOAP_FMAC4 soap_in___ns1__addTransRecInfo_(struct soap*, const char*, struct __ns1__addTransRecInfo_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__addTransRecInfo_(struct soap*, const struct __ns1__addTransRecInfo_ *, const char*, const char*);

#ifndef soap_write___ns1__addTransRecInfo_
#define soap_write___ns1__addTransRecInfo_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__addTransRecInfo_(soap, data),0) || soap_put___ns1__addTransRecInfo_(soap, data, "-ns1:addTransRecInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__addTransRecInfo_ * SOAP_FMAC4 soap_get___ns1__addTransRecInfo_(struct soap*, struct __ns1__addTransRecInfo_ *, const char*, const char*);

#ifndef soap_read___ns1__addTransRecInfo_
#define soap_read___ns1__addTransRecInfo_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__addTransRecInfo_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__addTransRecInfo_ * SOAP_FMAC2 soap_instantiate___ns1__addTransRecInfo_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__addTransRecInfo_ * soap_new___ns1__addTransRecInfo_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__addTransRecInfo_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__addTransRecInfo_ * soap_new_req___ns1__addTransRecInfo_(struct soap *soap) { struct __ns1__addTransRecInfo_ *_p = soap_instantiate___ns1__addTransRecInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__addTransRecInfo_(soap, _p); } return _p; }

inline struct __ns1__addTransRecInfo_ * soap_new_set___ns1__addTransRecInfo_(struct soap *soap, _ns1__addTransRecInfo *ns1__addTransRecInfo) { struct __ns1__addTransRecInfo_ *_p = soap_instantiate___ns1__addTransRecInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__addTransRecInfo_(soap, _p); _p->ns1__addTransRecInfo = ns1__addTransRecInfo; } return _p; }

inline void soap_delete___ns1__addTransRecInfo_(struct soap *soap, struct __ns1__addTransRecInfo_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__addTransRecInfo_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetJdsbhRecoveryInfo_
#define SOAP_TYPE___ns1__GetJdsbhRecoveryInfo_ (220)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetJdsbhRecoveryInfo_(struct soap*, struct __ns1__GetJdsbhRecoveryInfo_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetJdsbhRecoveryInfo_(struct soap*, const struct __ns1__GetJdsbhRecoveryInfo_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetJdsbhRecoveryInfo_(struct soap*, const char*, int, const struct __ns1__GetJdsbhRecoveryInfo_ *, const char*);
SOAP_FMAC3 struct __ns1__GetJdsbhRecoveryInfo_ * SOAP_FMAC4 soap_in___ns1__GetJdsbhRecoveryInfo_(struct soap*, const char*, struct __ns1__GetJdsbhRecoveryInfo_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetJdsbhRecoveryInfo_(struct soap*, const struct __ns1__GetJdsbhRecoveryInfo_ *, const char*, const char*);

#ifndef soap_write___ns1__GetJdsbhRecoveryInfo_
#define soap_write___ns1__GetJdsbhRecoveryInfo_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetJdsbhRecoveryInfo_(soap, data),0) || soap_put___ns1__GetJdsbhRecoveryInfo_(soap, data, "-ns1:GetJdsbhRecoveryInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetJdsbhRecoveryInfo_ * SOAP_FMAC4 soap_get___ns1__GetJdsbhRecoveryInfo_(struct soap*, struct __ns1__GetJdsbhRecoveryInfo_ *, const char*, const char*);

#ifndef soap_read___ns1__GetJdsbhRecoveryInfo_
#define soap_read___ns1__GetJdsbhRecoveryInfo_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetJdsbhRecoveryInfo_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetJdsbhRecoveryInfo_ * SOAP_FMAC2 soap_instantiate___ns1__GetJdsbhRecoveryInfo_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetJdsbhRecoveryInfo_ * soap_new___ns1__GetJdsbhRecoveryInfo_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetJdsbhRecoveryInfo_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetJdsbhRecoveryInfo_ * soap_new_req___ns1__GetJdsbhRecoveryInfo_(struct soap *soap) { struct __ns1__GetJdsbhRecoveryInfo_ *_p = soap_instantiate___ns1__GetJdsbhRecoveryInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetJdsbhRecoveryInfo_(soap, _p); } return _p; }

inline struct __ns1__GetJdsbhRecoveryInfo_ * soap_new_set___ns1__GetJdsbhRecoveryInfo_(struct soap *soap, _ns1__GetJdsbhRecoveryInfo *ns1__GetJdsbhRecoveryInfo) { struct __ns1__GetJdsbhRecoveryInfo_ *_p = soap_instantiate___ns1__GetJdsbhRecoveryInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetJdsbhRecoveryInfo_(soap, _p); _p->ns1__GetJdsbhRecoveryInfo = ns1__GetJdsbhRecoveryInfo; } return _p; }

inline void soap_delete___ns1__GetJdsbhRecoveryInfo_(struct soap *soap, struct __ns1__GetJdsbhRecoveryInfo_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetJdsbhRecoveryInfo_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetJdsbhRecovery_
#define SOAP_TYPE___ns1__GetJdsbhRecovery_ (218)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetJdsbhRecovery_(struct soap*, struct __ns1__GetJdsbhRecovery_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetJdsbhRecovery_(struct soap*, const struct __ns1__GetJdsbhRecovery_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetJdsbhRecovery_(struct soap*, const char*, int, const struct __ns1__GetJdsbhRecovery_ *, const char*);
SOAP_FMAC3 struct __ns1__GetJdsbhRecovery_ * SOAP_FMAC4 soap_in___ns1__GetJdsbhRecovery_(struct soap*, const char*, struct __ns1__GetJdsbhRecovery_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetJdsbhRecovery_(struct soap*, const struct __ns1__GetJdsbhRecovery_ *, const char*, const char*);

#ifndef soap_write___ns1__GetJdsbhRecovery_
#define soap_write___ns1__GetJdsbhRecovery_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetJdsbhRecovery_(soap, data),0) || soap_put___ns1__GetJdsbhRecovery_(soap, data, "-ns1:GetJdsbhRecovery", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetJdsbhRecovery_ * SOAP_FMAC4 soap_get___ns1__GetJdsbhRecovery_(struct soap*, struct __ns1__GetJdsbhRecovery_ *, const char*, const char*);

#ifndef soap_read___ns1__GetJdsbhRecovery_
#define soap_read___ns1__GetJdsbhRecovery_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetJdsbhRecovery_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetJdsbhRecovery_ * SOAP_FMAC2 soap_instantiate___ns1__GetJdsbhRecovery_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetJdsbhRecovery_ * soap_new___ns1__GetJdsbhRecovery_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetJdsbhRecovery_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetJdsbhRecovery_ * soap_new_req___ns1__GetJdsbhRecovery_(struct soap *soap) { struct __ns1__GetJdsbhRecovery_ *_p = soap_instantiate___ns1__GetJdsbhRecovery_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetJdsbhRecovery_(soap, _p); } return _p; }

inline struct __ns1__GetJdsbhRecovery_ * soap_new_set___ns1__GetJdsbhRecovery_(struct soap *soap, _ns1__GetJdsbhRecovery *ns1__GetJdsbhRecovery) { struct __ns1__GetJdsbhRecovery_ *_p = soap_instantiate___ns1__GetJdsbhRecovery_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetJdsbhRecovery_(soap, _p); _p->ns1__GetJdsbhRecovery = ns1__GetJdsbhRecovery; } return _p; }

inline void soap_delete___ns1__GetJdsbhRecovery_(struct soap *soap, struct __ns1__GetJdsbhRecovery_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetJdsbhRecovery_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetViolationInfo_
#define SOAP_TYPE___ns1__GetViolationInfo_ (216)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetViolationInfo_(struct soap*, struct __ns1__GetViolationInfo_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetViolationInfo_(struct soap*, const struct __ns1__GetViolationInfo_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetViolationInfo_(struct soap*, const char*, int, const struct __ns1__GetViolationInfo_ *, const char*);
SOAP_FMAC3 struct __ns1__GetViolationInfo_ * SOAP_FMAC4 soap_in___ns1__GetViolationInfo_(struct soap*, const char*, struct __ns1__GetViolationInfo_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetViolationInfo_(struct soap*, const struct __ns1__GetViolationInfo_ *, const char*, const char*);

#ifndef soap_write___ns1__GetViolationInfo_
#define soap_write___ns1__GetViolationInfo_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetViolationInfo_(soap, data),0) || soap_put___ns1__GetViolationInfo_(soap, data, "-ns1:GetViolationInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetViolationInfo_ * SOAP_FMAC4 soap_get___ns1__GetViolationInfo_(struct soap*, struct __ns1__GetViolationInfo_ *, const char*, const char*);

#ifndef soap_read___ns1__GetViolationInfo_
#define soap_read___ns1__GetViolationInfo_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetViolationInfo_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetViolationInfo_ * SOAP_FMAC2 soap_instantiate___ns1__GetViolationInfo_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetViolationInfo_ * soap_new___ns1__GetViolationInfo_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetViolationInfo_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetViolationInfo_ * soap_new_req___ns1__GetViolationInfo_(struct soap *soap) { struct __ns1__GetViolationInfo_ *_p = soap_instantiate___ns1__GetViolationInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetViolationInfo_(soap, _p); } return _p; }

inline struct __ns1__GetViolationInfo_ * soap_new_set___ns1__GetViolationInfo_(struct soap *soap, _ns1__GetViolationInfo *ns1__GetViolationInfo) { struct __ns1__GetViolationInfo_ *_p = soap_instantiate___ns1__GetViolationInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetViolationInfo_(soap, _p); _p->ns1__GetViolationInfo = ns1__GetViolationInfo; } return _p; }

inline void soap_delete___ns1__GetViolationInfo_(struct soap *soap, struct __ns1__GetViolationInfo_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetViolationInfo_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__InViolationInfo_
#define SOAP_TYPE___ns1__InViolationInfo_ (214)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__InViolationInfo_(struct soap*, struct __ns1__InViolationInfo_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__InViolationInfo_(struct soap*, const struct __ns1__InViolationInfo_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__InViolationInfo_(struct soap*, const char*, int, const struct __ns1__InViolationInfo_ *, const char*);
SOAP_FMAC3 struct __ns1__InViolationInfo_ * SOAP_FMAC4 soap_in___ns1__InViolationInfo_(struct soap*, const char*, struct __ns1__InViolationInfo_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__InViolationInfo_(struct soap*, const struct __ns1__InViolationInfo_ *, const char*, const char*);

#ifndef soap_write___ns1__InViolationInfo_
#define soap_write___ns1__InViolationInfo_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__InViolationInfo_(soap, data),0) || soap_put___ns1__InViolationInfo_(soap, data, "-ns1:InViolationInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__InViolationInfo_ * SOAP_FMAC4 soap_get___ns1__InViolationInfo_(struct soap*, struct __ns1__InViolationInfo_ *, const char*, const char*);

#ifndef soap_read___ns1__InViolationInfo_
#define soap_read___ns1__InViolationInfo_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__InViolationInfo_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__InViolationInfo_ * SOAP_FMAC2 soap_instantiate___ns1__InViolationInfo_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__InViolationInfo_ * soap_new___ns1__InViolationInfo_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__InViolationInfo_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__InViolationInfo_ * soap_new_req___ns1__InViolationInfo_(struct soap *soap) { struct __ns1__InViolationInfo_ *_p = soap_instantiate___ns1__InViolationInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__InViolationInfo_(soap, _p); } return _p; }

inline struct __ns1__InViolationInfo_ * soap_new_set___ns1__InViolationInfo_(struct soap *soap, _ns1__InViolationInfo *ns1__InViolationInfo) { struct __ns1__InViolationInfo_ *_p = soap_instantiate___ns1__InViolationInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__InViolationInfo_(soap, _p); _p->ns1__InViolationInfo = ns1__InViolationInfo; } return _p; }

inline void soap_delete___ns1__InViolationInfo_(struct soap *soap, struct __ns1__InViolationInfo_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__InViolationInfo_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__UpdataDeviceState_
#define SOAP_TYPE___ns1__UpdataDeviceState_ (212)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__UpdataDeviceState_(struct soap*, struct __ns1__UpdataDeviceState_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__UpdataDeviceState_(struct soap*, const struct __ns1__UpdataDeviceState_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__UpdataDeviceState_(struct soap*, const char*, int, const struct __ns1__UpdataDeviceState_ *, const char*);
SOAP_FMAC3 struct __ns1__UpdataDeviceState_ * SOAP_FMAC4 soap_in___ns1__UpdataDeviceState_(struct soap*, const char*, struct __ns1__UpdataDeviceState_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__UpdataDeviceState_(struct soap*, const struct __ns1__UpdataDeviceState_ *, const char*, const char*);

#ifndef soap_write___ns1__UpdataDeviceState_
#define soap_write___ns1__UpdataDeviceState_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__UpdataDeviceState_(soap, data),0) || soap_put___ns1__UpdataDeviceState_(soap, data, "-ns1:UpdataDeviceState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__UpdataDeviceState_ * SOAP_FMAC4 soap_get___ns1__UpdataDeviceState_(struct soap*, struct __ns1__UpdataDeviceState_ *, const char*, const char*);

#ifndef soap_read___ns1__UpdataDeviceState_
#define soap_read___ns1__UpdataDeviceState_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__UpdataDeviceState_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__UpdataDeviceState_ * SOAP_FMAC2 soap_instantiate___ns1__UpdataDeviceState_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__UpdataDeviceState_ * soap_new___ns1__UpdataDeviceState_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__UpdataDeviceState_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__UpdataDeviceState_ * soap_new_req___ns1__UpdataDeviceState_(struct soap *soap) { struct __ns1__UpdataDeviceState_ *_p = soap_instantiate___ns1__UpdataDeviceState_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__UpdataDeviceState_(soap, _p); } return _p; }

inline struct __ns1__UpdataDeviceState_ * soap_new_set___ns1__UpdataDeviceState_(struct soap *soap, _ns1__UpdataDeviceState *ns1__UpdataDeviceState) { struct __ns1__UpdataDeviceState_ *_p = soap_instantiate___ns1__UpdataDeviceState_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__UpdataDeviceState_(soap, _p); _p->ns1__UpdataDeviceState = ns1__UpdataDeviceState; } return _p; }

inline void soap_delete___ns1__UpdataDeviceState_(struct soap *soap, struct __ns1__UpdataDeviceState_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__UpdataDeviceState_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetAlarmInfo_
#define SOAP_TYPE___ns1__GetAlarmInfo_ (210)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetAlarmInfo_(struct soap*, struct __ns1__GetAlarmInfo_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetAlarmInfo_(struct soap*, const struct __ns1__GetAlarmInfo_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetAlarmInfo_(struct soap*, const char*, int, const struct __ns1__GetAlarmInfo_ *, const char*);
SOAP_FMAC3 struct __ns1__GetAlarmInfo_ * SOAP_FMAC4 soap_in___ns1__GetAlarmInfo_(struct soap*, const char*, struct __ns1__GetAlarmInfo_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetAlarmInfo_(struct soap*, const struct __ns1__GetAlarmInfo_ *, const char*, const char*);

#ifndef soap_write___ns1__GetAlarmInfo_
#define soap_write___ns1__GetAlarmInfo_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetAlarmInfo_(soap, data),0) || soap_put___ns1__GetAlarmInfo_(soap, data, "-ns1:GetAlarmInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetAlarmInfo_ * SOAP_FMAC4 soap_get___ns1__GetAlarmInfo_(struct soap*, struct __ns1__GetAlarmInfo_ *, const char*, const char*);

#ifndef soap_read___ns1__GetAlarmInfo_
#define soap_read___ns1__GetAlarmInfo_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetAlarmInfo_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetAlarmInfo_ * SOAP_FMAC2 soap_instantiate___ns1__GetAlarmInfo_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetAlarmInfo_ * soap_new___ns1__GetAlarmInfo_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetAlarmInfo_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetAlarmInfo_ * soap_new_req___ns1__GetAlarmInfo_(struct soap *soap) { struct __ns1__GetAlarmInfo_ *_p = soap_instantiate___ns1__GetAlarmInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetAlarmInfo_(soap, _p); } return _p; }

inline struct __ns1__GetAlarmInfo_ * soap_new_set___ns1__GetAlarmInfo_(struct soap *soap, _ns1__GetAlarmInfo *ns1__GetAlarmInfo) { struct __ns1__GetAlarmInfo_ *_p = soap_instantiate___ns1__GetAlarmInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetAlarmInfo_(soap, _p); _p->ns1__GetAlarmInfo = ns1__GetAlarmInfo; } return _p; }

inline void soap_delete___ns1__GetAlarmInfo_(struct soap *soap, struct __ns1__GetAlarmInfo_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetAlarmInfo_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__UpdateVioPeccancyInfo_
#define SOAP_TYPE___ns1__UpdateVioPeccancyInfo_ (208)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__UpdateVioPeccancyInfo_(struct soap*, struct __ns1__UpdateVioPeccancyInfo_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__UpdateVioPeccancyInfo_(struct soap*, const struct __ns1__UpdateVioPeccancyInfo_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__UpdateVioPeccancyInfo_(struct soap*, const char*, int, const struct __ns1__UpdateVioPeccancyInfo_ *, const char*);
SOAP_FMAC3 struct __ns1__UpdateVioPeccancyInfo_ * SOAP_FMAC4 soap_in___ns1__UpdateVioPeccancyInfo_(struct soap*, const char*, struct __ns1__UpdateVioPeccancyInfo_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__UpdateVioPeccancyInfo_(struct soap*, const struct __ns1__UpdateVioPeccancyInfo_ *, const char*, const char*);

#ifndef soap_write___ns1__UpdateVioPeccancyInfo_
#define soap_write___ns1__UpdateVioPeccancyInfo_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__UpdateVioPeccancyInfo_(soap, data),0) || soap_put___ns1__UpdateVioPeccancyInfo_(soap, data, "-ns1:UpdateVioPeccancyInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__UpdateVioPeccancyInfo_ * SOAP_FMAC4 soap_get___ns1__UpdateVioPeccancyInfo_(struct soap*, struct __ns1__UpdateVioPeccancyInfo_ *, const char*, const char*);

#ifndef soap_read___ns1__UpdateVioPeccancyInfo_
#define soap_read___ns1__UpdateVioPeccancyInfo_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__UpdateVioPeccancyInfo_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__UpdateVioPeccancyInfo_ * SOAP_FMAC2 soap_instantiate___ns1__UpdateVioPeccancyInfo_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__UpdateVioPeccancyInfo_ * soap_new___ns1__UpdateVioPeccancyInfo_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__UpdateVioPeccancyInfo_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__UpdateVioPeccancyInfo_ * soap_new_req___ns1__UpdateVioPeccancyInfo_(struct soap *soap) { struct __ns1__UpdateVioPeccancyInfo_ *_p = soap_instantiate___ns1__UpdateVioPeccancyInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__UpdateVioPeccancyInfo_(soap, _p); } return _p; }

inline struct __ns1__UpdateVioPeccancyInfo_ * soap_new_set___ns1__UpdateVioPeccancyInfo_(struct soap *soap, _ns1__UpdateVioPeccancyInfo *ns1__UpdateVioPeccancyInfo) { struct __ns1__UpdateVioPeccancyInfo_ *_p = soap_instantiate___ns1__UpdateVioPeccancyInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__UpdateVioPeccancyInfo_(soap, _p); _p->ns1__UpdateVioPeccancyInfo = ns1__UpdateVioPeccancyInfo; } return _p; }

inline void soap_delete___ns1__UpdateVioPeccancyInfo_(struct soap *soap, struct __ns1__UpdateVioPeccancyInfo_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__UpdateVioPeccancyInfo_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetVioPeccancyNoCheckInfo_
#define SOAP_TYPE___ns1__GetVioPeccancyNoCheckInfo_ (206)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetVioPeccancyNoCheckInfo_(struct soap*, struct __ns1__GetVioPeccancyNoCheckInfo_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetVioPeccancyNoCheckInfo_(struct soap*, const struct __ns1__GetVioPeccancyNoCheckInfo_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetVioPeccancyNoCheckInfo_(struct soap*, const char*, int, const struct __ns1__GetVioPeccancyNoCheckInfo_ *, const char*);
SOAP_FMAC3 struct __ns1__GetVioPeccancyNoCheckInfo_ * SOAP_FMAC4 soap_in___ns1__GetVioPeccancyNoCheckInfo_(struct soap*, const char*, struct __ns1__GetVioPeccancyNoCheckInfo_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetVioPeccancyNoCheckInfo_(struct soap*, const struct __ns1__GetVioPeccancyNoCheckInfo_ *, const char*, const char*);

#ifndef soap_write___ns1__GetVioPeccancyNoCheckInfo_
#define soap_write___ns1__GetVioPeccancyNoCheckInfo_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetVioPeccancyNoCheckInfo_(soap, data),0) || soap_put___ns1__GetVioPeccancyNoCheckInfo_(soap, data, "-ns1:GetVioPeccancyNoCheckInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetVioPeccancyNoCheckInfo_ * SOAP_FMAC4 soap_get___ns1__GetVioPeccancyNoCheckInfo_(struct soap*, struct __ns1__GetVioPeccancyNoCheckInfo_ *, const char*, const char*);

#ifndef soap_read___ns1__GetVioPeccancyNoCheckInfo_
#define soap_read___ns1__GetVioPeccancyNoCheckInfo_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetVioPeccancyNoCheckInfo_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetVioPeccancyNoCheckInfo_ * SOAP_FMAC2 soap_instantiate___ns1__GetVioPeccancyNoCheckInfo_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetVioPeccancyNoCheckInfo_ * soap_new___ns1__GetVioPeccancyNoCheckInfo_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetVioPeccancyNoCheckInfo_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetVioPeccancyNoCheckInfo_ * soap_new_req___ns1__GetVioPeccancyNoCheckInfo_(struct soap *soap) { struct __ns1__GetVioPeccancyNoCheckInfo_ *_p = soap_instantiate___ns1__GetVioPeccancyNoCheckInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetVioPeccancyNoCheckInfo_(soap, _p); } return _p; }

inline struct __ns1__GetVioPeccancyNoCheckInfo_ * soap_new_set___ns1__GetVioPeccancyNoCheckInfo_(struct soap *soap, _ns1__GetVioPeccancyNoCheckInfo *ns1__GetVioPeccancyNoCheckInfo) { struct __ns1__GetVioPeccancyNoCheckInfo_ *_p = soap_instantiate___ns1__GetVioPeccancyNoCheckInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetVioPeccancyNoCheckInfo_(soap, _p); _p->ns1__GetVioPeccancyNoCheckInfo = ns1__GetVioPeccancyNoCheckInfo; } return _p; }

inline void soap_delete___ns1__GetVioPeccancyNoCheckInfo_(struct soap *soap, struct __ns1__GetVioPeccancyNoCheckInfo_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetVioPeccancyNoCheckInfo_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__UpdatePeccancyInfo_
#define SOAP_TYPE___ns1__UpdatePeccancyInfo_ (204)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__UpdatePeccancyInfo_(struct soap*, struct __ns1__UpdatePeccancyInfo_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__UpdatePeccancyInfo_(struct soap*, const struct __ns1__UpdatePeccancyInfo_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__UpdatePeccancyInfo_(struct soap*, const char*, int, const struct __ns1__UpdatePeccancyInfo_ *, const char*);
SOAP_FMAC3 struct __ns1__UpdatePeccancyInfo_ * SOAP_FMAC4 soap_in___ns1__UpdatePeccancyInfo_(struct soap*, const char*, struct __ns1__UpdatePeccancyInfo_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__UpdatePeccancyInfo_(struct soap*, const struct __ns1__UpdatePeccancyInfo_ *, const char*, const char*);

#ifndef soap_write___ns1__UpdatePeccancyInfo_
#define soap_write___ns1__UpdatePeccancyInfo_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__UpdatePeccancyInfo_(soap, data),0) || soap_put___ns1__UpdatePeccancyInfo_(soap, data, "-ns1:UpdatePeccancyInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__UpdatePeccancyInfo_ * SOAP_FMAC4 soap_get___ns1__UpdatePeccancyInfo_(struct soap*, struct __ns1__UpdatePeccancyInfo_ *, const char*, const char*);

#ifndef soap_read___ns1__UpdatePeccancyInfo_
#define soap_read___ns1__UpdatePeccancyInfo_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__UpdatePeccancyInfo_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__UpdatePeccancyInfo_ * SOAP_FMAC2 soap_instantiate___ns1__UpdatePeccancyInfo_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__UpdatePeccancyInfo_ * soap_new___ns1__UpdatePeccancyInfo_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__UpdatePeccancyInfo_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__UpdatePeccancyInfo_ * soap_new_req___ns1__UpdatePeccancyInfo_(struct soap *soap) { struct __ns1__UpdatePeccancyInfo_ *_p = soap_instantiate___ns1__UpdatePeccancyInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__UpdatePeccancyInfo_(soap, _p); } return _p; }

inline struct __ns1__UpdatePeccancyInfo_ * soap_new_set___ns1__UpdatePeccancyInfo_(struct soap *soap, _ns1__UpdatePeccancyInfo *ns1__UpdatePeccancyInfo) { struct __ns1__UpdatePeccancyInfo_ *_p = soap_instantiate___ns1__UpdatePeccancyInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__UpdatePeccancyInfo_(soap, _p); _p->ns1__UpdatePeccancyInfo = ns1__UpdatePeccancyInfo; } return _p; }

inline void soap_delete___ns1__UpdatePeccancyInfo_(struct soap *soap, struct __ns1__UpdatePeccancyInfo_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__UpdatePeccancyInfo_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetPeccancyNoCheckInfo_
#define SOAP_TYPE___ns1__GetPeccancyNoCheckInfo_ (202)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetPeccancyNoCheckInfo_(struct soap*, struct __ns1__GetPeccancyNoCheckInfo_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetPeccancyNoCheckInfo_(struct soap*, const struct __ns1__GetPeccancyNoCheckInfo_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetPeccancyNoCheckInfo_(struct soap*, const char*, int, const struct __ns1__GetPeccancyNoCheckInfo_ *, const char*);
SOAP_FMAC3 struct __ns1__GetPeccancyNoCheckInfo_ * SOAP_FMAC4 soap_in___ns1__GetPeccancyNoCheckInfo_(struct soap*, const char*, struct __ns1__GetPeccancyNoCheckInfo_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetPeccancyNoCheckInfo_(struct soap*, const struct __ns1__GetPeccancyNoCheckInfo_ *, const char*, const char*);

#ifndef soap_write___ns1__GetPeccancyNoCheckInfo_
#define soap_write___ns1__GetPeccancyNoCheckInfo_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetPeccancyNoCheckInfo_(soap, data),0) || soap_put___ns1__GetPeccancyNoCheckInfo_(soap, data, "-ns1:GetPeccancyNoCheckInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetPeccancyNoCheckInfo_ * SOAP_FMAC4 soap_get___ns1__GetPeccancyNoCheckInfo_(struct soap*, struct __ns1__GetPeccancyNoCheckInfo_ *, const char*, const char*);

#ifndef soap_read___ns1__GetPeccancyNoCheckInfo_
#define soap_read___ns1__GetPeccancyNoCheckInfo_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetPeccancyNoCheckInfo_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetPeccancyNoCheckInfo_ * SOAP_FMAC2 soap_instantiate___ns1__GetPeccancyNoCheckInfo_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetPeccancyNoCheckInfo_ * soap_new___ns1__GetPeccancyNoCheckInfo_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetPeccancyNoCheckInfo_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetPeccancyNoCheckInfo_ * soap_new_req___ns1__GetPeccancyNoCheckInfo_(struct soap *soap) { struct __ns1__GetPeccancyNoCheckInfo_ *_p = soap_instantiate___ns1__GetPeccancyNoCheckInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetPeccancyNoCheckInfo_(soap, _p); } return _p; }

inline struct __ns1__GetPeccancyNoCheckInfo_ * soap_new_set___ns1__GetPeccancyNoCheckInfo_(struct soap *soap, _ns1__GetPeccancyNoCheckInfo *ns1__GetPeccancyNoCheckInfo) { struct __ns1__GetPeccancyNoCheckInfo_ *_p = soap_instantiate___ns1__GetPeccancyNoCheckInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetPeccancyNoCheckInfo_(soap, _p); _p->ns1__GetPeccancyNoCheckInfo = ns1__GetPeccancyNoCheckInfo; } return _p; }

inline void soap_delete___ns1__GetPeccancyNoCheckInfo_(struct soap *soap, struct __ns1__GetPeccancyNoCheckInfo_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetPeccancyNoCheckInfo_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetPeccancyInfo_
#define SOAP_TYPE___ns1__GetPeccancyInfo_ (200)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetPeccancyInfo_(struct soap*, struct __ns1__GetPeccancyInfo_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetPeccancyInfo_(struct soap*, const struct __ns1__GetPeccancyInfo_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetPeccancyInfo_(struct soap*, const char*, int, const struct __ns1__GetPeccancyInfo_ *, const char*);
SOAP_FMAC3 struct __ns1__GetPeccancyInfo_ * SOAP_FMAC4 soap_in___ns1__GetPeccancyInfo_(struct soap*, const char*, struct __ns1__GetPeccancyInfo_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetPeccancyInfo_(struct soap*, const struct __ns1__GetPeccancyInfo_ *, const char*, const char*);

#ifndef soap_write___ns1__GetPeccancyInfo_
#define soap_write___ns1__GetPeccancyInfo_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetPeccancyInfo_(soap, data),0) || soap_put___ns1__GetPeccancyInfo_(soap, data, "-ns1:GetPeccancyInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetPeccancyInfo_ * SOAP_FMAC4 soap_get___ns1__GetPeccancyInfo_(struct soap*, struct __ns1__GetPeccancyInfo_ *, const char*, const char*);

#ifndef soap_read___ns1__GetPeccancyInfo_
#define soap_read___ns1__GetPeccancyInfo_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetPeccancyInfo_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetPeccancyInfo_ * SOAP_FMAC2 soap_instantiate___ns1__GetPeccancyInfo_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetPeccancyInfo_ * soap_new___ns1__GetPeccancyInfo_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetPeccancyInfo_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetPeccancyInfo_ * soap_new_req___ns1__GetPeccancyInfo_(struct soap *soap) { struct __ns1__GetPeccancyInfo_ *_p = soap_instantiate___ns1__GetPeccancyInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetPeccancyInfo_(soap, _p); } return _p; }

inline struct __ns1__GetPeccancyInfo_ * soap_new_set___ns1__GetPeccancyInfo_(struct soap *soap, _ns1__GetPeccancyInfo *ns1__GetPeccancyInfo) { struct __ns1__GetPeccancyInfo_ *_p = soap_instantiate___ns1__GetPeccancyInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetPeccancyInfo_(soap, _p); _p->ns1__GetPeccancyInfo = ns1__GetPeccancyInfo; } return _p; }

inline void soap_delete___ns1__GetPeccancyInfo_(struct soap *soap, struct __ns1__GetPeccancyInfo_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetPeccancyInfo_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetPassCarInfo_
#define SOAP_TYPE___ns1__GetPassCarInfo_ (198)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetPassCarInfo_(struct soap*, struct __ns1__GetPassCarInfo_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetPassCarInfo_(struct soap*, const struct __ns1__GetPassCarInfo_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetPassCarInfo_(struct soap*, const char*, int, const struct __ns1__GetPassCarInfo_ *, const char*);
SOAP_FMAC3 struct __ns1__GetPassCarInfo_ * SOAP_FMAC4 soap_in___ns1__GetPassCarInfo_(struct soap*, const char*, struct __ns1__GetPassCarInfo_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetPassCarInfo_(struct soap*, const struct __ns1__GetPassCarInfo_ *, const char*, const char*);

#ifndef soap_write___ns1__GetPassCarInfo_
#define soap_write___ns1__GetPassCarInfo_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetPassCarInfo_(soap, data),0) || soap_put___ns1__GetPassCarInfo_(soap, data, "-ns1:GetPassCarInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetPassCarInfo_ * SOAP_FMAC4 soap_get___ns1__GetPassCarInfo_(struct soap*, struct __ns1__GetPassCarInfo_ *, const char*, const char*);

#ifndef soap_read___ns1__GetPassCarInfo_
#define soap_read___ns1__GetPassCarInfo_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetPassCarInfo_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetPassCarInfo_ * SOAP_FMAC2 soap_instantiate___ns1__GetPassCarInfo_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetPassCarInfo_ * soap_new___ns1__GetPassCarInfo_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetPassCarInfo_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetPassCarInfo_ * soap_new_req___ns1__GetPassCarInfo_(struct soap *soap) { struct __ns1__GetPassCarInfo_ *_p = soap_instantiate___ns1__GetPassCarInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetPassCarInfo_(soap, _p); } return _p; }

inline struct __ns1__GetPassCarInfo_ * soap_new_set___ns1__GetPassCarInfo_(struct soap *soap, _ns1__GetPassCarInfo *ns1__GetPassCarInfo) { struct __ns1__GetPassCarInfo_ *_p = soap_instantiate___ns1__GetPassCarInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetPassCarInfo_(soap, _p); _p->ns1__GetPassCarInfo = ns1__GetPassCarInfo; } return _p; }

inline void soap_delete___ns1__GetPassCarInfo_(struct soap *soap, struct __ns1__GetPassCarInfo_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetPassCarInfo_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetLocationInfo_
#define SOAP_TYPE___ns1__GetLocationInfo_ (196)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetLocationInfo_(struct soap*, struct __ns1__GetLocationInfo_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetLocationInfo_(struct soap*, const struct __ns1__GetLocationInfo_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetLocationInfo_(struct soap*, const char*, int, const struct __ns1__GetLocationInfo_ *, const char*);
SOAP_FMAC3 struct __ns1__GetLocationInfo_ * SOAP_FMAC4 soap_in___ns1__GetLocationInfo_(struct soap*, const char*, struct __ns1__GetLocationInfo_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetLocationInfo_(struct soap*, const struct __ns1__GetLocationInfo_ *, const char*, const char*);

#ifndef soap_write___ns1__GetLocationInfo_
#define soap_write___ns1__GetLocationInfo_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetLocationInfo_(soap, data),0) || soap_put___ns1__GetLocationInfo_(soap, data, "-ns1:GetLocationInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetLocationInfo_ * SOAP_FMAC4 soap_get___ns1__GetLocationInfo_(struct soap*, struct __ns1__GetLocationInfo_ *, const char*, const char*);

#ifndef soap_read___ns1__GetLocationInfo_
#define soap_read___ns1__GetLocationInfo_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetLocationInfo_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetLocationInfo_ * SOAP_FMAC2 soap_instantiate___ns1__GetLocationInfo_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetLocationInfo_ * soap_new___ns1__GetLocationInfo_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetLocationInfo_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetLocationInfo_ * soap_new_req___ns1__GetLocationInfo_(struct soap *soap) { struct __ns1__GetLocationInfo_ *_p = soap_instantiate___ns1__GetLocationInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetLocationInfo_(soap, _p); } return _p; }

inline struct __ns1__GetLocationInfo_ * soap_new_set___ns1__GetLocationInfo_(struct soap *soap, _ns1__GetLocationInfo *ns1__GetLocationInfo) { struct __ns1__GetLocationInfo_ *_p = soap_instantiate___ns1__GetLocationInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetLocationInfo_(soap, _p); _p->ns1__GetLocationInfo = ns1__GetLocationInfo; } return _p; }

inline void soap_delete___ns1__GetLocationInfo_(struct soap *soap, struct __ns1__GetLocationInfo_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetLocationInfo_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__RevokeSuspicionInfo_
#define SOAP_TYPE___ns1__RevokeSuspicionInfo_ (194)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__RevokeSuspicionInfo_(struct soap*, struct __ns1__RevokeSuspicionInfo_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__RevokeSuspicionInfo_(struct soap*, const struct __ns1__RevokeSuspicionInfo_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__RevokeSuspicionInfo_(struct soap*, const char*, int, const struct __ns1__RevokeSuspicionInfo_ *, const char*);
SOAP_FMAC3 struct __ns1__RevokeSuspicionInfo_ * SOAP_FMAC4 soap_in___ns1__RevokeSuspicionInfo_(struct soap*, const char*, struct __ns1__RevokeSuspicionInfo_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__RevokeSuspicionInfo_(struct soap*, const struct __ns1__RevokeSuspicionInfo_ *, const char*, const char*);

#ifndef soap_write___ns1__RevokeSuspicionInfo_
#define soap_write___ns1__RevokeSuspicionInfo_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__RevokeSuspicionInfo_(soap, data),0) || soap_put___ns1__RevokeSuspicionInfo_(soap, data, "-ns1:RevokeSuspicionInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__RevokeSuspicionInfo_ * SOAP_FMAC4 soap_get___ns1__RevokeSuspicionInfo_(struct soap*, struct __ns1__RevokeSuspicionInfo_ *, const char*, const char*);

#ifndef soap_read___ns1__RevokeSuspicionInfo_
#define soap_read___ns1__RevokeSuspicionInfo_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__RevokeSuspicionInfo_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__RevokeSuspicionInfo_ * SOAP_FMAC2 soap_instantiate___ns1__RevokeSuspicionInfo_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__RevokeSuspicionInfo_ * soap_new___ns1__RevokeSuspicionInfo_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__RevokeSuspicionInfo_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__RevokeSuspicionInfo_ * soap_new_req___ns1__RevokeSuspicionInfo_(struct soap *soap) { struct __ns1__RevokeSuspicionInfo_ *_p = soap_instantiate___ns1__RevokeSuspicionInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__RevokeSuspicionInfo_(soap, _p); } return _p; }

inline struct __ns1__RevokeSuspicionInfo_ * soap_new_set___ns1__RevokeSuspicionInfo_(struct soap *soap, _ns1__RevokeSuspicionInfo *ns1__RevokeSuspicionInfo) { struct __ns1__RevokeSuspicionInfo_ *_p = soap_instantiate___ns1__RevokeSuspicionInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__RevokeSuspicionInfo_(soap, _p); _p->ns1__RevokeSuspicionInfo = ns1__RevokeSuspicionInfo; } return _p; }

inline void soap_delete___ns1__RevokeSuspicionInfo_(struct soap *soap, struct __ns1__RevokeSuspicionInfo_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__RevokeSuspicionInfo_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__InSuspicionInfo_
#define SOAP_TYPE___ns1__InSuspicionInfo_ (192)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__InSuspicionInfo_(struct soap*, struct __ns1__InSuspicionInfo_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__InSuspicionInfo_(struct soap*, const struct __ns1__InSuspicionInfo_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__InSuspicionInfo_(struct soap*, const char*, int, const struct __ns1__InSuspicionInfo_ *, const char*);
SOAP_FMAC3 struct __ns1__InSuspicionInfo_ * SOAP_FMAC4 soap_in___ns1__InSuspicionInfo_(struct soap*, const char*, struct __ns1__InSuspicionInfo_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__InSuspicionInfo_(struct soap*, const struct __ns1__InSuspicionInfo_ *, const char*, const char*);

#ifndef soap_write___ns1__InSuspicionInfo_
#define soap_write___ns1__InSuspicionInfo_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__InSuspicionInfo_(soap, data),0) || soap_put___ns1__InSuspicionInfo_(soap, data, "-ns1:InSuspicionInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__InSuspicionInfo_ * SOAP_FMAC4 soap_get___ns1__InSuspicionInfo_(struct soap*, struct __ns1__InSuspicionInfo_ *, const char*, const char*);

#ifndef soap_read___ns1__InSuspicionInfo_
#define soap_read___ns1__InSuspicionInfo_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__InSuspicionInfo_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__InSuspicionInfo_ * SOAP_FMAC2 soap_instantiate___ns1__InSuspicionInfo_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__InSuspicionInfo_ * soap_new___ns1__InSuspicionInfo_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__InSuspicionInfo_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__InSuspicionInfo_ * soap_new_req___ns1__InSuspicionInfo_(struct soap *soap) { struct __ns1__InSuspicionInfo_ *_p = soap_instantiate___ns1__InSuspicionInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__InSuspicionInfo_(soap, _p); } return _p; }

inline struct __ns1__InSuspicionInfo_ * soap_new_set___ns1__InSuspicionInfo_(struct soap *soap, _ns1__InSuspicionInfo *ns1__InSuspicionInfo) { struct __ns1__InSuspicionInfo_ *_p = soap_instantiate___ns1__InSuspicionInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__InSuspicionInfo_(soap, _p); _p->ns1__InSuspicionInfo = ns1__InSuspicionInfo; } return _p; }

inline void soap_delete___ns1__InSuspicionInfo_(struct soap *soap, struct __ns1__InSuspicionInfo_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__InSuspicionInfo_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__IntExtralistInfo_
#define SOAP_TYPE___ns1__IntExtralistInfo_ (190)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__IntExtralistInfo_(struct soap*, struct __ns1__IntExtralistInfo_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__IntExtralistInfo_(struct soap*, const struct __ns1__IntExtralistInfo_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__IntExtralistInfo_(struct soap*, const char*, int, const struct __ns1__IntExtralistInfo_ *, const char*);
SOAP_FMAC3 struct __ns1__IntExtralistInfo_ * SOAP_FMAC4 soap_in___ns1__IntExtralistInfo_(struct soap*, const char*, struct __ns1__IntExtralistInfo_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__IntExtralistInfo_(struct soap*, const struct __ns1__IntExtralistInfo_ *, const char*, const char*);

#ifndef soap_write___ns1__IntExtralistInfo_
#define soap_write___ns1__IntExtralistInfo_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__IntExtralistInfo_(soap, data),0) || soap_put___ns1__IntExtralistInfo_(soap, data, "-ns1:IntExtralistInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__IntExtralistInfo_ * SOAP_FMAC4 soap_get___ns1__IntExtralistInfo_(struct soap*, struct __ns1__IntExtralistInfo_ *, const char*, const char*);

#ifndef soap_read___ns1__IntExtralistInfo_
#define soap_read___ns1__IntExtralistInfo_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__IntExtralistInfo_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__IntExtralistInfo_ * SOAP_FMAC2 soap_instantiate___ns1__IntExtralistInfo_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__IntExtralistInfo_ * soap_new___ns1__IntExtralistInfo_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__IntExtralistInfo_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__IntExtralistInfo_ * soap_new_req___ns1__IntExtralistInfo_(struct soap *soap) { struct __ns1__IntExtralistInfo_ *_p = soap_instantiate___ns1__IntExtralistInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__IntExtralistInfo_(soap, _p); } return _p; }

inline struct __ns1__IntExtralistInfo_ * soap_new_set___ns1__IntExtralistInfo_(struct soap *soap, _ns1__IntExtralistInfo *ns1__IntExtralistInfo) { struct __ns1__IntExtralistInfo_ *_p = soap_instantiate___ns1__IntExtralistInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__IntExtralistInfo_(soap, _p); _p->ns1__IntExtralistInfo = ns1__IntExtralistInfo; } return _p; }

inline void soap_delete___ns1__IntExtralistInfo_(struct soap *soap, struct __ns1__IntExtralistInfo_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__IntExtralistInfo_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__InChecklessInfo_
#define SOAP_TYPE___ns1__InChecklessInfo_ (188)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__InChecklessInfo_(struct soap*, struct __ns1__InChecklessInfo_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__InChecklessInfo_(struct soap*, const struct __ns1__InChecklessInfo_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__InChecklessInfo_(struct soap*, const char*, int, const struct __ns1__InChecklessInfo_ *, const char*);
SOAP_FMAC3 struct __ns1__InChecklessInfo_ * SOAP_FMAC4 soap_in___ns1__InChecklessInfo_(struct soap*, const char*, struct __ns1__InChecklessInfo_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__InChecklessInfo_(struct soap*, const struct __ns1__InChecklessInfo_ *, const char*, const char*);

#ifndef soap_write___ns1__InChecklessInfo_
#define soap_write___ns1__InChecklessInfo_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__InChecklessInfo_(soap, data),0) || soap_put___ns1__InChecklessInfo_(soap, data, "-ns1:InChecklessInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__InChecklessInfo_ * SOAP_FMAC4 soap_get___ns1__InChecklessInfo_(struct soap*, struct __ns1__InChecklessInfo_ *, const char*, const char*);

#ifndef soap_read___ns1__InChecklessInfo_
#define soap_read___ns1__InChecklessInfo_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__InChecklessInfo_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__InChecklessInfo_ * SOAP_FMAC2 soap_instantiate___ns1__InChecklessInfo_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__InChecklessInfo_ * soap_new___ns1__InChecklessInfo_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__InChecklessInfo_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__InChecklessInfo_ * soap_new_req___ns1__InChecklessInfo_(struct soap *soap) { struct __ns1__InChecklessInfo_ *_p = soap_instantiate___ns1__InChecklessInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__InChecklessInfo_(soap, _p); } return _p; }

inline struct __ns1__InChecklessInfo_ * soap_new_set___ns1__InChecklessInfo_(struct soap *soap, _ns1__InChecklessInfo *ns1__InChecklessInfo) { struct __ns1__InChecklessInfo_ *_p = soap_instantiate___ns1__InChecklessInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__InChecklessInfo_(soap, _p); _p->ns1__InChecklessInfo = ns1__InChecklessInfo; } return _p; }

inline void soap_delete___ns1__InChecklessInfo_(struct soap *soap, struct __ns1__InChecklessInfo_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__InChecklessInfo_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__InBlacklistInfo_
#define SOAP_TYPE___ns1__InBlacklistInfo_ (186)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__InBlacklistInfo_(struct soap*, struct __ns1__InBlacklistInfo_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__InBlacklistInfo_(struct soap*, const struct __ns1__InBlacklistInfo_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__InBlacklistInfo_(struct soap*, const char*, int, const struct __ns1__InBlacklistInfo_ *, const char*);
SOAP_FMAC3 struct __ns1__InBlacklistInfo_ * SOAP_FMAC4 soap_in___ns1__InBlacklistInfo_(struct soap*, const char*, struct __ns1__InBlacklistInfo_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__InBlacklistInfo_(struct soap*, const struct __ns1__InBlacklistInfo_ *, const char*, const char*);

#ifndef soap_write___ns1__InBlacklistInfo_
#define soap_write___ns1__InBlacklistInfo_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__InBlacklistInfo_(soap, data),0) || soap_put___ns1__InBlacklistInfo_(soap, data, "-ns1:InBlacklistInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__InBlacklistInfo_ * SOAP_FMAC4 soap_get___ns1__InBlacklistInfo_(struct soap*, struct __ns1__InBlacklistInfo_ *, const char*, const char*);

#ifndef soap_read___ns1__InBlacklistInfo_
#define soap_read___ns1__InBlacklistInfo_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__InBlacklistInfo_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__InBlacklistInfo_ * SOAP_FMAC2 soap_instantiate___ns1__InBlacklistInfo_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__InBlacklistInfo_ * soap_new___ns1__InBlacklistInfo_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__InBlacklistInfo_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__InBlacklistInfo_ * soap_new_req___ns1__InBlacklistInfo_(struct soap *soap) { struct __ns1__InBlacklistInfo_ *_p = soap_instantiate___ns1__InBlacklistInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__InBlacklistInfo_(soap, _p); } return _p; }

inline struct __ns1__InBlacklistInfo_ * soap_new_set___ns1__InBlacklistInfo_(struct soap *soap, _ns1__InBlacklistInfo *ns1__InBlacklistInfo) { struct __ns1__InBlacklistInfo_ *_p = soap_instantiate___ns1__InBlacklistInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__InBlacklistInfo_(soap, _p); _p->ns1__InBlacklistInfo = ns1__InBlacklistInfo; } return _p; }

inline void soap_delete___ns1__InBlacklistInfo_(struct soap *soap, struct __ns1__InBlacklistInfo_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__InBlacklistInfo_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__InCheckedPeccancyInfo_
#define SOAP_TYPE___ns1__InCheckedPeccancyInfo_ (184)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__InCheckedPeccancyInfo_(struct soap*, struct __ns1__InCheckedPeccancyInfo_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__InCheckedPeccancyInfo_(struct soap*, const struct __ns1__InCheckedPeccancyInfo_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__InCheckedPeccancyInfo_(struct soap*, const char*, int, const struct __ns1__InCheckedPeccancyInfo_ *, const char*);
SOAP_FMAC3 struct __ns1__InCheckedPeccancyInfo_ * SOAP_FMAC4 soap_in___ns1__InCheckedPeccancyInfo_(struct soap*, const char*, struct __ns1__InCheckedPeccancyInfo_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__InCheckedPeccancyInfo_(struct soap*, const struct __ns1__InCheckedPeccancyInfo_ *, const char*, const char*);

#ifndef soap_write___ns1__InCheckedPeccancyInfo_
#define soap_write___ns1__InCheckedPeccancyInfo_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__InCheckedPeccancyInfo_(soap, data),0) || soap_put___ns1__InCheckedPeccancyInfo_(soap, data, "-ns1:InCheckedPeccancyInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__InCheckedPeccancyInfo_ * SOAP_FMAC4 soap_get___ns1__InCheckedPeccancyInfo_(struct soap*, struct __ns1__InCheckedPeccancyInfo_ *, const char*, const char*);

#ifndef soap_read___ns1__InCheckedPeccancyInfo_
#define soap_read___ns1__InCheckedPeccancyInfo_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__InCheckedPeccancyInfo_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__InCheckedPeccancyInfo_ * SOAP_FMAC2 soap_instantiate___ns1__InCheckedPeccancyInfo_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__InCheckedPeccancyInfo_ * soap_new___ns1__InCheckedPeccancyInfo_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__InCheckedPeccancyInfo_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__InCheckedPeccancyInfo_ * soap_new_req___ns1__InCheckedPeccancyInfo_(struct soap *soap) { struct __ns1__InCheckedPeccancyInfo_ *_p = soap_instantiate___ns1__InCheckedPeccancyInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__InCheckedPeccancyInfo_(soap, _p); } return _p; }

inline struct __ns1__InCheckedPeccancyInfo_ * soap_new_set___ns1__InCheckedPeccancyInfo_(struct soap *soap, _ns1__InCheckedPeccancyInfo *ns1__InCheckedPeccancyInfo) { struct __ns1__InCheckedPeccancyInfo_ *_p = soap_instantiate___ns1__InCheckedPeccancyInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__InCheckedPeccancyInfo_(soap, _p); _p->ns1__InCheckedPeccancyInfo = ns1__InCheckedPeccancyInfo; } return _p; }

inline void soap_delete___ns1__InCheckedPeccancyInfo_(struct soap *soap, struct __ns1__InCheckedPeccancyInfo_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__InCheckedPeccancyInfo_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__InPeccancyInfo_
#define SOAP_TYPE___ns1__InPeccancyInfo_ (182)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__InPeccancyInfo_(struct soap*, struct __ns1__InPeccancyInfo_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__InPeccancyInfo_(struct soap*, const struct __ns1__InPeccancyInfo_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__InPeccancyInfo_(struct soap*, const char*, int, const struct __ns1__InPeccancyInfo_ *, const char*);
SOAP_FMAC3 struct __ns1__InPeccancyInfo_ * SOAP_FMAC4 soap_in___ns1__InPeccancyInfo_(struct soap*, const char*, struct __ns1__InPeccancyInfo_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__InPeccancyInfo_(struct soap*, const struct __ns1__InPeccancyInfo_ *, const char*, const char*);

#ifndef soap_write___ns1__InPeccancyInfo_
#define soap_write___ns1__InPeccancyInfo_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__InPeccancyInfo_(soap, data),0) || soap_put___ns1__InPeccancyInfo_(soap, data, "-ns1:InPeccancyInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__InPeccancyInfo_ * SOAP_FMAC4 soap_get___ns1__InPeccancyInfo_(struct soap*, struct __ns1__InPeccancyInfo_ *, const char*, const char*);

#ifndef soap_read___ns1__InPeccancyInfo_
#define soap_read___ns1__InPeccancyInfo_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__InPeccancyInfo_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__InPeccancyInfo_ * SOAP_FMAC2 soap_instantiate___ns1__InPeccancyInfo_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__InPeccancyInfo_ * soap_new___ns1__InPeccancyInfo_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__InPeccancyInfo_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__InPeccancyInfo_ * soap_new_req___ns1__InPeccancyInfo_(struct soap *soap) { struct __ns1__InPeccancyInfo_ *_p = soap_instantiate___ns1__InPeccancyInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__InPeccancyInfo_(soap, _p); } return _p; }

inline struct __ns1__InPeccancyInfo_ * soap_new_set___ns1__InPeccancyInfo_(struct soap *soap, _ns1__InPeccancyInfo *ns1__InPeccancyInfo) { struct __ns1__InPeccancyInfo_ *_p = soap_instantiate___ns1__InPeccancyInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__InPeccancyInfo_(soap, _p); _p->ns1__InPeccancyInfo = ns1__InPeccancyInfo; } return _p; }

inline void soap_delete___ns1__InPeccancyInfo_(struct soap *soap, struct __ns1__InPeccancyInfo_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__InPeccancyInfo_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__InPassCarInfo_
#define SOAP_TYPE___ns1__InPassCarInfo_ (180)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__InPassCarInfo_(struct soap*, struct __ns1__InPassCarInfo_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__InPassCarInfo_(struct soap*, const struct __ns1__InPassCarInfo_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__InPassCarInfo_(struct soap*, const char*, int, const struct __ns1__InPassCarInfo_ *, const char*);
SOAP_FMAC3 struct __ns1__InPassCarInfo_ * SOAP_FMAC4 soap_in___ns1__InPassCarInfo_(struct soap*, const char*, struct __ns1__InPassCarInfo_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__InPassCarInfo_(struct soap*, const struct __ns1__InPassCarInfo_ *, const char*, const char*);

#ifndef soap_write___ns1__InPassCarInfo_
#define soap_write___ns1__InPassCarInfo_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__InPassCarInfo_(soap, data),0) || soap_put___ns1__InPassCarInfo_(soap, data, "-ns1:InPassCarInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__InPassCarInfo_ * SOAP_FMAC4 soap_get___ns1__InPassCarInfo_(struct soap*, struct __ns1__InPassCarInfo_ *, const char*, const char*);

#ifndef soap_read___ns1__InPassCarInfo_
#define soap_read___ns1__InPassCarInfo_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__InPassCarInfo_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__InPassCarInfo_ * SOAP_FMAC2 soap_instantiate___ns1__InPassCarInfo_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__InPassCarInfo_ * soap_new___ns1__InPassCarInfo_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__InPassCarInfo_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__InPassCarInfo_ * soap_new_req___ns1__InPassCarInfo_(struct soap *soap) { struct __ns1__InPassCarInfo_ *_p = soap_instantiate___ns1__InPassCarInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__InPassCarInfo_(soap, _p); } return _p; }

inline struct __ns1__InPassCarInfo_ * soap_new_set___ns1__InPassCarInfo_(struct soap *soap, _ns1__InPassCarInfo *ns1__InPassCarInfo) { struct __ns1__InPassCarInfo_ *_p = soap_instantiate___ns1__InPassCarInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__InPassCarInfo_(soap, _p); _p->ns1__InPassCarInfo = ns1__InPassCarInfo; } return _p; }

inline void soap_delete___ns1__InPassCarInfo_(struct soap *soap, struct __ns1__InPassCarInfo_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__InPassCarInfo_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__CarPlateRecog_
#define SOAP_TYPE___ns1__CarPlateRecog_ (178)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__CarPlateRecog_(struct soap*, struct __ns1__CarPlateRecog_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__CarPlateRecog_(struct soap*, const struct __ns1__CarPlateRecog_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__CarPlateRecog_(struct soap*, const char*, int, const struct __ns1__CarPlateRecog_ *, const char*);
SOAP_FMAC3 struct __ns1__CarPlateRecog_ * SOAP_FMAC4 soap_in___ns1__CarPlateRecog_(struct soap*, const char*, struct __ns1__CarPlateRecog_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__CarPlateRecog_(struct soap*, const struct __ns1__CarPlateRecog_ *, const char*, const char*);

#ifndef soap_write___ns1__CarPlateRecog_
#define soap_write___ns1__CarPlateRecog_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__CarPlateRecog_(soap, data),0) || soap_put___ns1__CarPlateRecog_(soap, data, "-ns1:CarPlateRecog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__CarPlateRecog_ * SOAP_FMAC4 soap_get___ns1__CarPlateRecog_(struct soap*, struct __ns1__CarPlateRecog_ *, const char*, const char*);

#ifndef soap_read___ns1__CarPlateRecog_
#define soap_read___ns1__CarPlateRecog_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__CarPlateRecog_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__CarPlateRecog_ * SOAP_FMAC2 soap_instantiate___ns1__CarPlateRecog_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__CarPlateRecog_ * soap_new___ns1__CarPlateRecog_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__CarPlateRecog_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__CarPlateRecog_ * soap_new_req___ns1__CarPlateRecog_(struct soap *soap) { struct __ns1__CarPlateRecog_ *_p = soap_instantiate___ns1__CarPlateRecog_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__CarPlateRecog_(soap, _p); } return _p; }

inline struct __ns1__CarPlateRecog_ * soap_new_set___ns1__CarPlateRecog_(struct soap *soap, _ns1__CarPlateRecog *ns1__CarPlateRecog) { struct __ns1__CarPlateRecog_ *_p = soap_instantiate___ns1__CarPlateRecog_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__CarPlateRecog_(soap, _p); _p->ns1__CarPlateRecog = ns1__CarPlateRecog; } return _p; }

inline void soap_delete___ns1__CarPlateRecog_(struct soap *soap, struct __ns1__CarPlateRecog_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__CarPlateRecog_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetXMlFormat_
#define SOAP_TYPE___ns1__GetXMlFormat_ (176)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetXMlFormat_(struct soap*, struct __ns1__GetXMlFormat_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetXMlFormat_(struct soap*, const struct __ns1__GetXMlFormat_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetXMlFormat_(struct soap*, const char*, int, const struct __ns1__GetXMlFormat_ *, const char*);
SOAP_FMAC3 struct __ns1__GetXMlFormat_ * SOAP_FMAC4 soap_in___ns1__GetXMlFormat_(struct soap*, const char*, struct __ns1__GetXMlFormat_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetXMlFormat_(struct soap*, const struct __ns1__GetXMlFormat_ *, const char*, const char*);

#ifndef soap_write___ns1__GetXMlFormat_
#define soap_write___ns1__GetXMlFormat_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetXMlFormat_(soap, data),0) || soap_put___ns1__GetXMlFormat_(soap, data, "-ns1:GetXMlFormat", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetXMlFormat_ * SOAP_FMAC4 soap_get___ns1__GetXMlFormat_(struct soap*, struct __ns1__GetXMlFormat_ *, const char*, const char*);

#ifndef soap_read___ns1__GetXMlFormat_
#define soap_read___ns1__GetXMlFormat_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetXMlFormat_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetXMlFormat_ * SOAP_FMAC2 soap_instantiate___ns1__GetXMlFormat_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetXMlFormat_ * soap_new___ns1__GetXMlFormat_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetXMlFormat_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetXMlFormat_ * soap_new_req___ns1__GetXMlFormat_(struct soap *soap) { struct __ns1__GetXMlFormat_ *_p = soap_instantiate___ns1__GetXMlFormat_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetXMlFormat_(soap, _p); } return _p; }

inline struct __ns1__GetXMlFormat_ * soap_new_set___ns1__GetXMlFormat_(struct soap *soap, _ns1__GetXMlFormat *ns1__GetXMlFormat) { struct __ns1__GetXMlFormat_ *_p = soap_instantiate___ns1__GetXMlFormat_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetXMlFormat_(soap, _p); _p->ns1__GetXMlFormat = ns1__GetXMlFormat; } return _p; }

inline void soap_delete___ns1__GetXMlFormat_(struct soap *soap, struct __ns1__GetXMlFormat_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetXMlFormat_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetCurrentVersion_
#define SOAP_TYPE___ns1__GetCurrentVersion_ (174)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetCurrentVersion_(struct soap*, struct __ns1__GetCurrentVersion_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetCurrentVersion_(struct soap*, const struct __ns1__GetCurrentVersion_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetCurrentVersion_(struct soap*, const char*, int, const struct __ns1__GetCurrentVersion_ *, const char*);
SOAP_FMAC3 struct __ns1__GetCurrentVersion_ * SOAP_FMAC4 soap_in___ns1__GetCurrentVersion_(struct soap*, const char*, struct __ns1__GetCurrentVersion_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetCurrentVersion_(struct soap*, const struct __ns1__GetCurrentVersion_ *, const char*, const char*);

#ifndef soap_write___ns1__GetCurrentVersion_
#define soap_write___ns1__GetCurrentVersion_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetCurrentVersion_(soap, data),0) || soap_put___ns1__GetCurrentVersion_(soap, data, "-ns1:GetCurrentVersion", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetCurrentVersion_ * SOAP_FMAC4 soap_get___ns1__GetCurrentVersion_(struct soap*, struct __ns1__GetCurrentVersion_ *, const char*, const char*);

#ifndef soap_read___ns1__GetCurrentVersion_
#define soap_read___ns1__GetCurrentVersion_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetCurrentVersion_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetCurrentVersion_ * SOAP_FMAC2 soap_instantiate___ns1__GetCurrentVersion_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetCurrentVersion_ * soap_new___ns1__GetCurrentVersion_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetCurrentVersion_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetCurrentVersion_ * soap_new_req___ns1__GetCurrentVersion_(struct soap *soap) { struct __ns1__GetCurrentVersion_ *_p = soap_instantiate___ns1__GetCurrentVersion_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetCurrentVersion_(soap, _p); } return _p; }

inline struct __ns1__GetCurrentVersion_ * soap_new_set___ns1__GetCurrentVersion_(struct soap *soap, _ns1__GetCurrentVersion *ns1__GetCurrentVersion) { struct __ns1__GetCurrentVersion_ *_p = soap_instantiate___ns1__GetCurrentVersion_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetCurrentVersion_(soap, _p); _p->ns1__GetCurrentVersion = ns1__GetCurrentVersion; } return _p; }

inline void soap_delete___ns1__GetCurrentVersion_(struct soap *soap, struct __ns1__GetCurrentVersion_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetCurrentVersion_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__WebserviceTest_
#define SOAP_TYPE___ns1__WebserviceTest_ (172)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__WebserviceTest_(struct soap*, struct __ns1__WebserviceTest_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__WebserviceTest_(struct soap*, const struct __ns1__WebserviceTest_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__WebserviceTest_(struct soap*, const char*, int, const struct __ns1__WebserviceTest_ *, const char*);
SOAP_FMAC3 struct __ns1__WebserviceTest_ * SOAP_FMAC4 soap_in___ns1__WebserviceTest_(struct soap*, const char*, struct __ns1__WebserviceTest_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__WebserviceTest_(struct soap*, const struct __ns1__WebserviceTest_ *, const char*, const char*);

#ifndef soap_write___ns1__WebserviceTest_
#define soap_write___ns1__WebserviceTest_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__WebserviceTest_(soap, data),0) || soap_put___ns1__WebserviceTest_(soap, data, "-ns1:WebserviceTest", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__WebserviceTest_ * SOAP_FMAC4 soap_get___ns1__WebserviceTest_(struct soap*, struct __ns1__WebserviceTest_ *, const char*, const char*);

#ifndef soap_read___ns1__WebserviceTest_
#define soap_read___ns1__WebserviceTest_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__WebserviceTest_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__WebserviceTest_ * SOAP_FMAC2 soap_instantiate___ns1__WebserviceTest_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__WebserviceTest_ * soap_new___ns1__WebserviceTest_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__WebserviceTest_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__WebserviceTest_ * soap_new_req___ns1__WebserviceTest_(struct soap *soap) { struct __ns1__WebserviceTest_ *_p = soap_instantiate___ns1__WebserviceTest_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__WebserviceTest_(soap, _p); } return _p; }

inline struct __ns1__WebserviceTest_ * soap_new_set___ns1__WebserviceTest_(struct soap *soap, _ns1__WebserviceTest *ns1__WebserviceTest) { struct __ns1__WebserviceTest_ *_p = soap_instantiate___ns1__WebserviceTest_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__WebserviceTest_(soap, _p); _p->ns1__WebserviceTest = ns1__WebserviceTest; } return _p; }

inline void soap_delete___ns1__WebserviceTest_(struct soap *soap, struct __ns1__WebserviceTest_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__WebserviceTest_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__CheckUserInfo
#define SOAP_TYPE___ns1__CheckUserInfo (170)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__CheckUserInfo(struct soap*, struct __ns1__CheckUserInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__CheckUserInfo(struct soap*, const struct __ns1__CheckUserInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__CheckUserInfo(struct soap*, const char*, int, const struct __ns1__CheckUserInfo *, const char*);
SOAP_FMAC3 struct __ns1__CheckUserInfo * SOAP_FMAC4 soap_in___ns1__CheckUserInfo(struct soap*, const char*, struct __ns1__CheckUserInfo *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__CheckUserInfo(struct soap*, const struct __ns1__CheckUserInfo *, const char*, const char*);

#ifndef soap_write___ns1__CheckUserInfo
#define soap_write___ns1__CheckUserInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__CheckUserInfo(soap, data),0) || soap_put___ns1__CheckUserInfo(soap, data, "-ns1:CheckUserInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__CheckUserInfo * SOAP_FMAC4 soap_get___ns1__CheckUserInfo(struct soap*, struct __ns1__CheckUserInfo *, const char*, const char*);

#ifndef soap_read___ns1__CheckUserInfo
#define soap_read___ns1__CheckUserInfo(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__CheckUserInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__CheckUserInfo * SOAP_FMAC2 soap_instantiate___ns1__CheckUserInfo(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__CheckUserInfo * soap_new___ns1__CheckUserInfo(struct soap *soap, int n = -1) { return soap_instantiate___ns1__CheckUserInfo(soap, n, NULL, NULL, NULL); }

inline struct __ns1__CheckUserInfo * soap_new_req___ns1__CheckUserInfo(struct soap *soap) { struct __ns1__CheckUserInfo *_p = soap_instantiate___ns1__CheckUserInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__CheckUserInfo(soap, _p); } return _p; }

inline struct __ns1__CheckUserInfo * soap_new_set___ns1__CheckUserInfo(struct soap *soap, _ns1__CheckUserInfo *ns1__CheckUserInfo) { struct __ns1__CheckUserInfo *_p = soap_instantiate___ns1__CheckUserInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__CheckUserInfo(soap, _p); _p->ns1__CheckUserInfo = ns1__CheckUserInfo; } return _p; }

inline void soap_delete___ns1__CheckUserInfo(struct soap *soap, struct __ns1__CheckUserInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__CheckUserInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__addTransRecInfo
#define SOAP_TYPE___ns1__addTransRecInfo (166)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__addTransRecInfo(struct soap*, struct __ns1__addTransRecInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__addTransRecInfo(struct soap*, const struct __ns1__addTransRecInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__addTransRecInfo(struct soap*, const char*, int, const struct __ns1__addTransRecInfo *, const char*);
SOAP_FMAC3 struct __ns1__addTransRecInfo * SOAP_FMAC4 soap_in___ns1__addTransRecInfo(struct soap*, const char*, struct __ns1__addTransRecInfo *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__addTransRecInfo(struct soap*, const struct __ns1__addTransRecInfo *, const char*, const char*);

#ifndef soap_write___ns1__addTransRecInfo
#define soap_write___ns1__addTransRecInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__addTransRecInfo(soap, data),0) || soap_put___ns1__addTransRecInfo(soap, data, "-ns1:addTransRecInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__addTransRecInfo * SOAP_FMAC4 soap_get___ns1__addTransRecInfo(struct soap*, struct __ns1__addTransRecInfo *, const char*, const char*);

#ifndef soap_read___ns1__addTransRecInfo
#define soap_read___ns1__addTransRecInfo(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__addTransRecInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__addTransRecInfo * SOAP_FMAC2 soap_instantiate___ns1__addTransRecInfo(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__addTransRecInfo * soap_new___ns1__addTransRecInfo(struct soap *soap, int n = -1) { return soap_instantiate___ns1__addTransRecInfo(soap, n, NULL, NULL, NULL); }

inline struct __ns1__addTransRecInfo * soap_new_req___ns1__addTransRecInfo(struct soap *soap) { struct __ns1__addTransRecInfo *_p = soap_instantiate___ns1__addTransRecInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__addTransRecInfo(soap, _p); } return _p; }

inline struct __ns1__addTransRecInfo * soap_new_set___ns1__addTransRecInfo(struct soap *soap, _ns1__addTransRecInfo *ns1__addTransRecInfo) { struct __ns1__addTransRecInfo *_p = soap_instantiate___ns1__addTransRecInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__addTransRecInfo(soap, _p); _p->ns1__addTransRecInfo = ns1__addTransRecInfo; } return _p; }

inline void soap_delete___ns1__addTransRecInfo(struct soap *soap, struct __ns1__addTransRecInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__addTransRecInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetJdsbhRecoveryInfo
#define SOAP_TYPE___ns1__GetJdsbhRecoveryInfo (162)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetJdsbhRecoveryInfo(struct soap*, struct __ns1__GetJdsbhRecoveryInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetJdsbhRecoveryInfo(struct soap*, const struct __ns1__GetJdsbhRecoveryInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetJdsbhRecoveryInfo(struct soap*, const char*, int, const struct __ns1__GetJdsbhRecoveryInfo *, const char*);
SOAP_FMAC3 struct __ns1__GetJdsbhRecoveryInfo * SOAP_FMAC4 soap_in___ns1__GetJdsbhRecoveryInfo(struct soap*, const char*, struct __ns1__GetJdsbhRecoveryInfo *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetJdsbhRecoveryInfo(struct soap*, const struct __ns1__GetJdsbhRecoveryInfo *, const char*, const char*);

#ifndef soap_write___ns1__GetJdsbhRecoveryInfo
#define soap_write___ns1__GetJdsbhRecoveryInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetJdsbhRecoveryInfo(soap, data),0) || soap_put___ns1__GetJdsbhRecoveryInfo(soap, data, "-ns1:GetJdsbhRecoveryInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetJdsbhRecoveryInfo * SOAP_FMAC4 soap_get___ns1__GetJdsbhRecoveryInfo(struct soap*, struct __ns1__GetJdsbhRecoveryInfo *, const char*, const char*);

#ifndef soap_read___ns1__GetJdsbhRecoveryInfo
#define soap_read___ns1__GetJdsbhRecoveryInfo(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetJdsbhRecoveryInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetJdsbhRecoveryInfo * SOAP_FMAC2 soap_instantiate___ns1__GetJdsbhRecoveryInfo(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetJdsbhRecoveryInfo * soap_new___ns1__GetJdsbhRecoveryInfo(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetJdsbhRecoveryInfo(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetJdsbhRecoveryInfo * soap_new_req___ns1__GetJdsbhRecoveryInfo(struct soap *soap) { struct __ns1__GetJdsbhRecoveryInfo *_p = soap_instantiate___ns1__GetJdsbhRecoveryInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetJdsbhRecoveryInfo(soap, _p); } return _p; }

inline struct __ns1__GetJdsbhRecoveryInfo * soap_new_set___ns1__GetJdsbhRecoveryInfo(struct soap *soap, _ns1__GetJdsbhRecoveryInfo *ns1__GetJdsbhRecoveryInfo) { struct __ns1__GetJdsbhRecoveryInfo *_p = soap_instantiate___ns1__GetJdsbhRecoveryInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetJdsbhRecoveryInfo(soap, _p); _p->ns1__GetJdsbhRecoveryInfo = ns1__GetJdsbhRecoveryInfo; } return _p; }

inline void soap_delete___ns1__GetJdsbhRecoveryInfo(struct soap *soap, struct __ns1__GetJdsbhRecoveryInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetJdsbhRecoveryInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetJdsbhRecovery
#define SOAP_TYPE___ns1__GetJdsbhRecovery (158)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetJdsbhRecovery(struct soap*, struct __ns1__GetJdsbhRecovery *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetJdsbhRecovery(struct soap*, const struct __ns1__GetJdsbhRecovery *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetJdsbhRecovery(struct soap*, const char*, int, const struct __ns1__GetJdsbhRecovery *, const char*);
SOAP_FMAC3 struct __ns1__GetJdsbhRecovery * SOAP_FMAC4 soap_in___ns1__GetJdsbhRecovery(struct soap*, const char*, struct __ns1__GetJdsbhRecovery *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetJdsbhRecovery(struct soap*, const struct __ns1__GetJdsbhRecovery *, const char*, const char*);

#ifndef soap_write___ns1__GetJdsbhRecovery
#define soap_write___ns1__GetJdsbhRecovery(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetJdsbhRecovery(soap, data),0) || soap_put___ns1__GetJdsbhRecovery(soap, data, "-ns1:GetJdsbhRecovery", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetJdsbhRecovery * SOAP_FMAC4 soap_get___ns1__GetJdsbhRecovery(struct soap*, struct __ns1__GetJdsbhRecovery *, const char*, const char*);

#ifndef soap_read___ns1__GetJdsbhRecovery
#define soap_read___ns1__GetJdsbhRecovery(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetJdsbhRecovery(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetJdsbhRecovery * SOAP_FMAC2 soap_instantiate___ns1__GetJdsbhRecovery(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetJdsbhRecovery * soap_new___ns1__GetJdsbhRecovery(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetJdsbhRecovery(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetJdsbhRecovery * soap_new_req___ns1__GetJdsbhRecovery(struct soap *soap) { struct __ns1__GetJdsbhRecovery *_p = soap_instantiate___ns1__GetJdsbhRecovery(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetJdsbhRecovery(soap, _p); } return _p; }

inline struct __ns1__GetJdsbhRecovery * soap_new_set___ns1__GetJdsbhRecovery(struct soap *soap, _ns1__GetJdsbhRecovery *ns1__GetJdsbhRecovery) { struct __ns1__GetJdsbhRecovery *_p = soap_instantiate___ns1__GetJdsbhRecovery(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetJdsbhRecovery(soap, _p); _p->ns1__GetJdsbhRecovery = ns1__GetJdsbhRecovery; } return _p; }

inline void soap_delete___ns1__GetJdsbhRecovery(struct soap *soap, struct __ns1__GetJdsbhRecovery *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetJdsbhRecovery(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetViolationInfo
#define SOAP_TYPE___ns1__GetViolationInfo (154)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetViolationInfo(struct soap*, struct __ns1__GetViolationInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetViolationInfo(struct soap*, const struct __ns1__GetViolationInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetViolationInfo(struct soap*, const char*, int, const struct __ns1__GetViolationInfo *, const char*);
SOAP_FMAC3 struct __ns1__GetViolationInfo * SOAP_FMAC4 soap_in___ns1__GetViolationInfo(struct soap*, const char*, struct __ns1__GetViolationInfo *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetViolationInfo(struct soap*, const struct __ns1__GetViolationInfo *, const char*, const char*);

#ifndef soap_write___ns1__GetViolationInfo
#define soap_write___ns1__GetViolationInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetViolationInfo(soap, data),0) || soap_put___ns1__GetViolationInfo(soap, data, "-ns1:GetViolationInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetViolationInfo * SOAP_FMAC4 soap_get___ns1__GetViolationInfo(struct soap*, struct __ns1__GetViolationInfo *, const char*, const char*);

#ifndef soap_read___ns1__GetViolationInfo
#define soap_read___ns1__GetViolationInfo(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetViolationInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetViolationInfo * SOAP_FMAC2 soap_instantiate___ns1__GetViolationInfo(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetViolationInfo * soap_new___ns1__GetViolationInfo(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetViolationInfo(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetViolationInfo * soap_new_req___ns1__GetViolationInfo(struct soap *soap) { struct __ns1__GetViolationInfo *_p = soap_instantiate___ns1__GetViolationInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetViolationInfo(soap, _p); } return _p; }

inline struct __ns1__GetViolationInfo * soap_new_set___ns1__GetViolationInfo(struct soap *soap, _ns1__GetViolationInfo *ns1__GetViolationInfo) { struct __ns1__GetViolationInfo *_p = soap_instantiate___ns1__GetViolationInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetViolationInfo(soap, _p); _p->ns1__GetViolationInfo = ns1__GetViolationInfo; } return _p; }

inline void soap_delete___ns1__GetViolationInfo(struct soap *soap, struct __ns1__GetViolationInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetViolationInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__InViolationInfo
#define SOAP_TYPE___ns1__InViolationInfo (150)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__InViolationInfo(struct soap*, struct __ns1__InViolationInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__InViolationInfo(struct soap*, const struct __ns1__InViolationInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__InViolationInfo(struct soap*, const char*, int, const struct __ns1__InViolationInfo *, const char*);
SOAP_FMAC3 struct __ns1__InViolationInfo * SOAP_FMAC4 soap_in___ns1__InViolationInfo(struct soap*, const char*, struct __ns1__InViolationInfo *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__InViolationInfo(struct soap*, const struct __ns1__InViolationInfo *, const char*, const char*);

#ifndef soap_write___ns1__InViolationInfo
#define soap_write___ns1__InViolationInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__InViolationInfo(soap, data),0) || soap_put___ns1__InViolationInfo(soap, data, "-ns1:InViolationInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__InViolationInfo * SOAP_FMAC4 soap_get___ns1__InViolationInfo(struct soap*, struct __ns1__InViolationInfo *, const char*, const char*);

#ifndef soap_read___ns1__InViolationInfo
#define soap_read___ns1__InViolationInfo(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__InViolationInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__InViolationInfo * SOAP_FMAC2 soap_instantiate___ns1__InViolationInfo(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__InViolationInfo * soap_new___ns1__InViolationInfo(struct soap *soap, int n = -1) { return soap_instantiate___ns1__InViolationInfo(soap, n, NULL, NULL, NULL); }

inline struct __ns1__InViolationInfo * soap_new_req___ns1__InViolationInfo(struct soap *soap) { struct __ns1__InViolationInfo *_p = soap_instantiate___ns1__InViolationInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__InViolationInfo(soap, _p); } return _p; }

inline struct __ns1__InViolationInfo * soap_new_set___ns1__InViolationInfo(struct soap *soap, _ns1__InViolationInfo *ns1__InViolationInfo) { struct __ns1__InViolationInfo *_p = soap_instantiate___ns1__InViolationInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__InViolationInfo(soap, _p); _p->ns1__InViolationInfo = ns1__InViolationInfo; } return _p; }

inline void soap_delete___ns1__InViolationInfo(struct soap *soap, struct __ns1__InViolationInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__InViolationInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__UpdataDeviceState
#define SOAP_TYPE___ns1__UpdataDeviceState (146)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__UpdataDeviceState(struct soap*, struct __ns1__UpdataDeviceState *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__UpdataDeviceState(struct soap*, const struct __ns1__UpdataDeviceState *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__UpdataDeviceState(struct soap*, const char*, int, const struct __ns1__UpdataDeviceState *, const char*);
SOAP_FMAC3 struct __ns1__UpdataDeviceState * SOAP_FMAC4 soap_in___ns1__UpdataDeviceState(struct soap*, const char*, struct __ns1__UpdataDeviceState *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__UpdataDeviceState(struct soap*, const struct __ns1__UpdataDeviceState *, const char*, const char*);

#ifndef soap_write___ns1__UpdataDeviceState
#define soap_write___ns1__UpdataDeviceState(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__UpdataDeviceState(soap, data),0) || soap_put___ns1__UpdataDeviceState(soap, data, "-ns1:UpdataDeviceState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__UpdataDeviceState * SOAP_FMAC4 soap_get___ns1__UpdataDeviceState(struct soap*, struct __ns1__UpdataDeviceState *, const char*, const char*);

#ifndef soap_read___ns1__UpdataDeviceState
#define soap_read___ns1__UpdataDeviceState(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__UpdataDeviceState(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__UpdataDeviceState * SOAP_FMAC2 soap_instantiate___ns1__UpdataDeviceState(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__UpdataDeviceState * soap_new___ns1__UpdataDeviceState(struct soap *soap, int n = -1) { return soap_instantiate___ns1__UpdataDeviceState(soap, n, NULL, NULL, NULL); }

inline struct __ns1__UpdataDeviceState * soap_new_req___ns1__UpdataDeviceState(struct soap *soap) { struct __ns1__UpdataDeviceState *_p = soap_instantiate___ns1__UpdataDeviceState(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__UpdataDeviceState(soap, _p); } return _p; }

inline struct __ns1__UpdataDeviceState * soap_new_set___ns1__UpdataDeviceState(struct soap *soap, _ns1__UpdataDeviceState *ns1__UpdataDeviceState) { struct __ns1__UpdataDeviceState *_p = soap_instantiate___ns1__UpdataDeviceState(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__UpdataDeviceState(soap, _p); _p->ns1__UpdataDeviceState = ns1__UpdataDeviceState; } return _p; }

inline void soap_delete___ns1__UpdataDeviceState(struct soap *soap, struct __ns1__UpdataDeviceState *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__UpdataDeviceState(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetAlarmInfo
#define SOAP_TYPE___ns1__GetAlarmInfo (142)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetAlarmInfo(struct soap*, struct __ns1__GetAlarmInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetAlarmInfo(struct soap*, const struct __ns1__GetAlarmInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetAlarmInfo(struct soap*, const char*, int, const struct __ns1__GetAlarmInfo *, const char*);
SOAP_FMAC3 struct __ns1__GetAlarmInfo * SOAP_FMAC4 soap_in___ns1__GetAlarmInfo(struct soap*, const char*, struct __ns1__GetAlarmInfo *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetAlarmInfo(struct soap*, const struct __ns1__GetAlarmInfo *, const char*, const char*);

#ifndef soap_write___ns1__GetAlarmInfo
#define soap_write___ns1__GetAlarmInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetAlarmInfo(soap, data),0) || soap_put___ns1__GetAlarmInfo(soap, data, "-ns1:GetAlarmInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetAlarmInfo * SOAP_FMAC4 soap_get___ns1__GetAlarmInfo(struct soap*, struct __ns1__GetAlarmInfo *, const char*, const char*);

#ifndef soap_read___ns1__GetAlarmInfo
#define soap_read___ns1__GetAlarmInfo(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetAlarmInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetAlarmInfo * SOAP_FMAC2 soap_instantiate___ns1__GetAlarmInfo(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetAlarmInfo * soap_new___ns1__GetAlarmInfo(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetAlarmInfo(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetAlarmInfo * soap_new_req___ns1__GetAlarmInfo(struct soap *soap) { struct __ns1__GetAlarmInfo *_p = soap_instantiate___ns1__GetAlarmInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetAlarmInfo(soap, _p); } return _p; }

inline struct __ns1__GetAlarmInfo * soap_new_set___ns1__GetAlarmInfo(struct soap *soap, _ns1__GetAlarmInfo *ns1__GetAlarmInfo) { struct __ns1__GetAlarmInfo *_p = soap_instantiate___ns1__GetAlarmInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetAlarmInfo(soap, _p); _p->ns1__GetAlarmInfo = ns1__GetAlarmInfo; } return _p; }

inline void soap_delete___ns1__GetAlarmInfo(struct soap *soap, struct __ns1__GetAlarmInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetAlarmInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__UpdateVioPeccancyInfo
#define SOAP_TYPE___ns1__UpdateVioPeccancyInfo (138)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__UpdateVioPeccancyInfo(struct soap*, struct __ns1__UpdateVioPeccancyInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__UpdateVioPeccancyInfo(struct soap*, const struct __ns1__UpdateVioPeccancyInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__UpdateVioPeccancyInfo(struct soap*, const char*, int, const struct __ns1__UpdateVioPeccancyInfo *, const char*);
SOAP_FMAC3 struct __ns1__UpdateVioPeccancyInfo * SOAP_FMAC4 soap_in___ns1__UpdateVioPeccancyInfo(struct soap*, const char*, struct __ns1__UpdateVioPeccancyInfo *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__UpdateVioPeccancyInfo(struct soap*, const struct __ns1__UpdateVioPeccancyInfo *, const char*, const char*);

#ifndef soap_write___ns1__UpdateVioPeccancyInfo
#define soap_write___ns1__UpdateVioPeccancyInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__UpdateVioPeccancyInfo(soap, data),0) || soap_put___ns1__UpdateVioPeccancyInfo(soap, data, "-ns1:UpdateVioPeccancyInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__UpdateVioPeccancyInfo * SOAP_FMAC4 soap_get___ns1__UpdateVioPeccancyInfo(struct soap*, struct __ns1__UpdateVioPeccancyInfo *, const char*, const char*);

#ifndef soap_read___ns1__UpdateVioPeccancyInfo
#define soap_read___ns1__UpdateVioPeccancyInfo(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__UpdateVioPeccancyInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__UpdateVioPeccancyInfo * SOAP_FMAC2 soap_instantiate___ns1__UpdateVioPeccancyInfo(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__UpdateVioPeccancyInfo * soap_new___ns1__UpdateVioPeccancyInfo(struct soap *soap, int n = -1) { return soap_instantiate___ns1__UpdateVioPeccancyInfo(soap, n, NULL, NULL, NULL); }

inline struct __ns1__UpdateVioPeccancyInfo * soap_new_req___ns1__UpdateVioPeccancyInfo(struct soap *soap) { struct __ns1__UpdateVioPeccancyInfo *_p = soap_instantiate___ns1__UpdateVioPeccancyInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__UpdateVioPeccancyInfo(soap, _p); } return _p; }

inline struct __ns1__UpdateVioPeccancyInfo * soap_new_set___ns1__UpdateVioPeccancyInfo(struct soap *soap, _ns1__UpdateVioPeccancyInfo *ns1__UpdateVioPeccancyInfo) { struct __ns1__UpdateVioPeccancyInfo *_p = soap_instantiate___ns1__UpdateVioPeccancyInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__UpdateVioPeccancyInfo(soap, _p); _p->ns1__UpdateVioPeccancyInfo = ns1__UpdateVioPeccancyInfo; } return _p; }

inline void soap_delete___ns1__UpdateVioPeccancyInfo(struct soap *soap, struct __ns1__UpdateVioPeccancyInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__UpdateVioPeccancyInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetVioPeccancyNoCheckInfo
#define SOAP_TYPE___ns1__GetVioPeccancyNoCheckInfo (134)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetVioPeccancyNoCheckInfo(struct soap*, struct __ns1__GetVioPeccancyNoCheckInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetVioPeccancyNoCheckInfo(struct soap*, const struct __ns1__GetVioPeccancyNoCheckInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetVioPeccancyNoCheckInfo(struct soap*, const char*, int, const struct __ns1__GetVioPeccancyNoCheckInfo *, const char*);
SOAP_FMAC3 struct __ns1__GetVioPeccancyNoCheckInfo * SOAP_FMAC4 soap_in___ns1__GetVioPeccancyNoCheckInfo(struct soap*, const char*, struct __ns1__GetVioPeccancyNoCheckInfo *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetVioPeccancyNoCheckInfo(struct soap*, const struct __ns1__GetVioPeccancyNoCheckInfo *, const char*, const char*);

#ifndef soap_write___ns1__GetVioPeccancyNoCheckInfo
#define soap_write___ns1__GetVioPeccancyNoCheckInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetVioPeccancyNoCheckInfo(soap, data),0) || soap_put___ns1__GetVioPeccancyNoCheckInfo(soap, data, "-ns1:GetVioPeccancyNoCheckInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetVioPeccancyNoCheckInfo * SOAP_FMAC4 soap_get___ns1__GetVioPeccancyNoCheckInfo(struct soap*, struct __ns1__GetVioPeccancyNoCheckInfo *, const char*, const char*);

#ifndef soap_read___ns1__GetVioPeccancyNoCheckInfo
#define soap_read___ns1__GetVioPeccancyNoCheckInfo(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetVioPeccancyNoCheckInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetVioPeccancyNoCheckInfo * SOAP_FMAC2 soap_instantiate___ns1__GetVioPeccancyNoCheckInfo(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetVioPeccancyNoCheckInfo * soap_new___ns1__GetVioPeccancyNoCheckInfo(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetVioPeccancyNoCheckInfo(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetVioPeccancyNoCheckInfo * soap_new_req___ns1__GetVioPeccancyNoCheckInfo(struct soap *soap) { struct __ns1__GetVioPeccancyNoCheckInfo *_p = soap_instantiate___ns1__GetVioPeccancyNoCheckInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetVioPeccancyNoCheckInfo(soap, _p); } return _p; }

inline struct __ns1__GetVioPeccancyNoCheckInfo * soap_new_set___ns1__GetVioPeccancyNoCheckInfo(struct soap *soap, _ns1__GetVioPeccancyNoCheckInfo *ns1__GetVioPeccancyNoCheckInfo) { struct __ns1__GetVioPeccancyNoCheckInfo *_p = soap_instantiate___ns1__GetVioPeccancyNoCheckInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetVioPeccancyNoCheckInfo(soap, _p); _p->ns1__GetVioPeccancyNoCheckInfo = ns1__GetVioPeccancyNoCheckInfo; } return _p; }

inline void soap_delete___ns1__GetVioPeccancyNoCheckInfo(struct soap *soap, struct __ns1__GetVioPeccancyNoCheckInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetVioPeccancyNoCheckInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__UpdatePeccancyInfo
#define SOAP_TYPE___ns1__UpdatePeccancyInfo (130)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__UpdatePeccancyInfo(struct soap*, struct __ns1__UpdatePeccancyInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__UpdatePeccancyInfo(struct soap*, const struct __ns1__UpdatePeccancyInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__UpdatePeccancyInfo(struct soap*, const char*, int, const struct __ns1__UpdatePeccancyInfo *, const char*);
SOAP_FMAC3 struct __ns1__UpdatePeccancyInfo * SOAP_FMAC4 soap_in___ns1__UpdatePeccancyInfo(struct soap*, const char*, struct __ns1__UpdatePeccancyInfo *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__UpdatePeccancyInfo(struct soap*, const struct __ns1__UpdatePeccancyInfo *, const char*, const char*);

#ifndef soap_write___ns1__UpdatePeccancyInfo
#define soap_write___ns1__UpdatePeccancyInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__UpdatePeccancyInfo(soap, data),0) || soap_put___ns1__UpdatePeccancyInfo(soap, data, "-ns1:UpdatePeccancyInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__UpdatePeccancyInfo * SOAP_FMAC4 soap_get___ns1__UpdatePeccancyInfo(struct soap*, struct __ns1__UpdatePeccancyInfo *, const char*, const char*);

#ifndef soap_read___ns1__UpdatePeccancyInfo
#define soap_read___ns1__UpdatePeccancyInfo(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__UpdatePeccancyInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__UpdatePeccancyInfo * SOAP_FMAC2 soap_instantiate___ns1__UpdatePeccancyInfo(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__UpdatePeccancyInfo * soap_new___ns1__UpdatePeccancyInfo(struct soap *soap, int n = -1) { return soap_instantiate___ns1__UpdatePeccancyInfo(soap, n, NULL, NULL, NULL); }

inline struct __ns1__UpdatePeccancyInfo * soap_new_req___ns1__UpdatePeccancyInfo(struct soap *soap) { struct __ns1__UpdatePeccancyInfo *_p = soap_instantiate___ns1__UpdatePeccancyInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__UpdatePeccancyInfo(soap, _p); } return _p; }

inline struct __ns1__UpdatePeccancyInfo * soap_new_set___ns1__UpdatePeccancyInfo(struct soap *soap, _ns1__UpdatePeccancyInfo *ns1__UpdatePeccancyInfo) { struct __ns1__UpdatePeccancyInfo *_p = soap_instantiate___ns1__UpdatePeccancyInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__UpdatePeccancyInfo(soap, _p); _p->ns1__UpdatePeccancyInfo = ns1__UpdatePeccancyInfo; } return _p; }

inline void soap_delete___ns1__UpdatePeccancyInfo(struct soap *soap, struct __ns1__UpdatePeccancyInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__UpdatePeccancyInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetPeccancyNoCheckInfo
#define SOAP_TYPE___ns1__GetPeccancyNoCheckInfo (126)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetPeccancyNoCheckInfo(struct soap*, struct __ns1__GetPeccancyNoCheckInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetPeccancyNoCheckInfo(struct soap*, const struct __ns1__GetPeccancyNoCheckInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetPeccancyNoCheckInfo(struct soap*, const char*, int, const struct __ns1__GetPeccancyNoCheckInfo *, const char*);
SOAP_FMAC3 struct __ns1__GetPeccancyNoCheckInfo * SOAP_FMAC4 soap_in___ns1__GetPeccancyNoCheckInfo(struct soap*, const char*, struct __ns1__GetPeccancyNoCheckInfo *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetPeccancyNoCheckInfo(struct soap*, const struct __ns1__GetPeccancyNoCheckInfo *, const char*, const char*);

#ifndef soap_write___ns1__GetPeccancyNoCheckInfo
#define soap_write___ns1__GetPeccancyNoCheckInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetPeccancyNoCheckInfo(soap, data),0) || soap_put___ns1__GetPeccancyNoCheckInfo(soap, data, "-ns1:GetPeccancyNoCheckInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetPeccancyNoCheckInfo * SOAP_FMAC4 soap_get___ns1__GetPeccancyNoCheckInfo(struct soap*, struct __ns1__GetPeccancyNoCheckInfo *, const char*, const char*);

#ifndef soap_read___ns1__GetPeccancyNoCheckInfo
#define soap_read___ns1__GetPeccancyNoCheckInfo(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetPeccancyNoCheckInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetPeccancyNoCheckInfo * SOAP_FMAC2 soap_instantiate___ns1__GetPeccancyNoCheckInfo(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetPeccancyNoCheckInfo * soap_new___ns1__GetPeccancyNoCheckInfo(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetPeccancyNoCheckInfo(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetPeccancyNoCheckInfo * soap_new_req___ns1__GetPeccancyNoCheckInfo(struct soap *soap) { struct __ns1__GetPeccancyNoCheckInfo *_p = soap_instantiate___ns1__GetPeccancyNoCheckInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetPeccancyNoCheckInfo(soap, _p); } return _p; }

inline struct __ns1__GetPeccancyNoCheckInfo * soap_new_set___ns1__GetPeccancyNoCheckInfo(struct soap *soap, _ns1__GetPeccancyNoCheckInfo *ns1__GetPeccancyNoCheckInfo) { struct __ns1__GetPeccancyNoCheckInfo *_p = soap_instantiate___ns1__GetPeccancyNoCheckInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetPeccancyNoCheckInfo(soap, _p); _p->ns1__GetPeccancyNoCheckInfo = ns1__GetPeccancyNoCheckInfo; } return _p; }

inline void soap_delete___ns1__GetPeccancyNoCheckInfo(struct soap *soap, struct __ns1__GetPeccancyNoCheckInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetPeccancyNoCheckInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetPeccancyInfo
#define SOAP_TYPE___ns1__GetPeccancyInfo (122)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetPeccancyInfo(struct soap*, struct __ns1__GetPeccancyInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetPeccancyInfo(struct soap*, const struct __ns1__GetPeccancyInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetPeccancyInfo(struct soap*, const char*, int, const struct __ns1__GetPeccancyInfo *, const char*);
SOAP_FMAC3 struct __ns1__GetPeccancyInfo * SOAP_FMAC4 soap_in___ns1__GetPeccancyInfo(struct soap*, const char*, struct __ns1__GetPeccancyInfo *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetPeccancyInfo(struct soap*, const struct __ns1__GetPeccancyInfo *, const char*, const char*);

#ifndef soap_write___ns1__GetPeccancyInfo
#define soap_write___ns1__GetPeccancyInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetPeccancyInfo(soap, data),0) || soap_put___ns1__GetPeccancyInfo(soap, data, "-ns1:GetPeccancyInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetPeccancyInfo * SOAP_FMAC4 soap_get___ns1__GetPeccancyInfo(struct soap*, struct __ns1__GetPeccancyInfo *, const char*, const char*);

#ifndef soap_read___ns1__GetPeccancyInfo
#define soap_read___ns1__GetPeccancyInfo(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetPeccancyInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetPeccancyInfo * SOAP_FMAC2 soap_instantiate___ns1__GetPeccancyInfo(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetPeccancyInfo * soap_new___ns1__GetPeccancyInfo(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetPeccancyInfo(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetPeccancyInfo * soap_new_req___ns1__GetPeccancyInfo(struct soap *soap) { struct __ns1__GetPeccancyInfo *_p = soap_instantiate___ns1__GetPeccancyInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetPeccancyInfo(soap, _p); } return _p; }

inline struct __ns1__GetPeccancyInfo * soap_new_set___ns1__GetPeccancyInfo(struct soap *soap, _ns1__GetPeccancyInfo *ns1__GetPeccancyInfo) { struct __ns1__GetPeccancyInfo *_p = soap_instantiate___ns1__GetPeccancyInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetPeccancyInfo(soap, _p); _p->ns1__GetPeccancyInfo = ns1__GetPeccancyInfo; } return _p; }

inline void soap_delete___ns1__GetPeccancyInfo(struct soap *soap, struct __ns1__GetPeccancyInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetPeccancyInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetPassCarInfo
#define SOAP_TYPE___ns1__GetPassCarInfo (118)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetPassCarInfo(struct soap*, struct __ns1__GetPassCarInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetPassCarInfo(struct soap*, const struct __ns1__GetPassCarInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetPassCarInfo(struct soap*, const char*, int, const struct __ns1__GetPassCarInfo *, const char*);
SOAP_FMAC3 struct __ns1__GetPassCarInfo * SOAP_FMAC4 soap_in___ns1__GetPassCarInfo(struct soap*, const char*, struct __ns1__GetPassCarInfo *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetPassCarInfo(struct soap*, const struct __ns1__GetPassCarInfo *, const char*, const char*);

#ifndef soap_write___ns1__GetPassCarInfo
#define soap_write___ns1__GetPassCarInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetPassCarInfo(soap, data),0) || soap_put___ns1__GetPassCarInfo(soap, data, "-ns1:GetPassCarInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetPassCarInfo * SOAP_FMAC4 soap_get___ns1__GetPassCarInfo(struct soap*, struct __ns1__GetPassCarInfo *, const char*, const char*);

#ifndef soap_read___ns1__GetPassCarInfo
#define soap_read___ns1__GetPassCarInfo(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetPassCarInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetPassCarInfo * SOAP_FMAC2 soap_instantiate___ns1__GetPassCarInfo(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetPassCarInfo * soap_new___ns1__GetPassCarInfo(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetPassCarInfo(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetPassCarInfo * soap_new_req___ns1__GetPassCarInfo(struct soap *soap) { struct __ns1__GetPassCarInfo *_p = soap_instantiate___ns1__GetPassCarInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetPassCarInfo(soap, _p); } return _p; }

inline struct __ns1__GetPassCarInfo * soap_new_set___ns1__GetPassCarInfo(struct soap *soap, _ns1__GetPassCarInfo *ns1__GetPassCarInfo) { struct __ns1__GetPassCarInfo *_p = soap_instantiate___ns1__GetPassCarInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetPassCarInfo(soap, _p); _p->ns1__GetPassCarInfo = ns1__GetPassCarInfo; } return _p; }

inline void soap_delete___ns1__GetPassCarInfo(struct soap *soap, struct __ns1__GetPassCarInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetPassCarInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetLocationInfo
#define SOAP_TYPE___ns1__GetLocationInfo (114)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetLocationInfo(struct soap*, struct __ns1__GetLocationInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetLocationInfo(struct soap*, const struct __ns1__GetLocationInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetLocationInfo(struct soap*, const char*, int, const struct __ns1__GetLocationInfo *, const char*);
SOAP_FMAC3 struct __ns1__GetLocationInfo * SOAP_FMAC4 soap_in___ns1__GetLocationInfo(struct soap*, const char*, struct __ns1__GetLocationInfo *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetLocationInfo(struct soap*, const struct __ns1__GetLocationInfo *, const char*, const char*);

#ifndef soap_write___ns1__GetLocationInfo
#define soap_write___ns1__GetLocationInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetLocationInfo(soap, data),0) || soap_put___ns1__GetLocationInfo(soap, data, "-ns1:GetLocationInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetLocationInfo * SOAP_FMAC4 soap_get___ns1__GetLocationInfo(struct soap*, struct __ns1__GetLocationInfo *, const char*, const char*);

#ifndef soap_read___ns1__GetLocationInfo
#define soap_read___ns1__GetLocationInfo(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetLocationInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetLocationInfo * SOAP_FMAC2 soap_instantiate___ns1__GetLocationInfo(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetLocationInfo * soap_new___ns1__GetLocationInfo(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetLocationInfo(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetLocationInfo * soap_new_req___ns1__GetLocationInfo(struct soap *soap) { struct __ns1__GetLocationInfo *_p = soap_instantiate___ns1__GetLocationInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetLocationInfo(soap, _p); } return _p; }

inline struct __ns1__GetLocationInfo * soap_new_set___ns1__GetLocationInfo(struct soap *soap, _ns1__GetLocationInfo *ns1__GetLocationInfo) { struct __ns1__GetLocationInfo *_p = soap_instantiate___ns1__GetLocationInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetLocationInfo(soap, _p); _p->ns1__GetLocationInfo = ns1__GetLocationInfo; } return _p; }

inline void soap_delete___ns1__GetLocationInfo(struct soap *soap, struct __ns1__GetLocationInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetLocationInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__RevokeSuspicionInfo
#define SOAP_TYPE___ns1__RevokeSuspicionInfo (110)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__RevokeSuspicionInfo(struct soap*, struct __ns1__RevokeSuspicionInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__RevokeSuspicionInfo(struct soap*, const struct __ns1__RevokeSuspicionInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__RevokeSuspicionInfo(struct soap*, const char*, int, const struct __ns1__RevokeSuspicionInfo *, const char*);
SOAP_FMAC3 struct __ns1__RevokeSuspicionInfo * SOAP_FMAC4 soap_in___ns1__RevokeSuspicionInfo(struct soap*, const char*, struct __ns1__RevokeSuspicionInfo *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__RevokeSuspicionInfo(struct soap*, const struct __ns1__RevokeSuspicionInfo *, const char*, const char*);

#ifndef soap_write___ns1__RevokeSuspicionInfo
#define soap_write___ns1__RevokeSuspicionInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__RevokeSuspicionInfo(soap, data),0) || soap_put___ns1__RevokeSuspicionInfo(soap, data, "-ns1:RevokeSuspicionInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__RevokeSuspicionInfo * SOAP_FMAC4 soap_get___ns1__RevokeSuspicionInfo(struct soap*, struct __ns1__RevokeSuspicionInfo *, const char*, const char*);

#ifndef soap_read___ns1__RevokeSuspicionInfo
#define soap_read___ns1__RevokeSuspicionInfo(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__RevokeSuspicionInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__RevokeSuspicionInfo * SOAP_FMAC2 soap_instantiate___ns1__RevokeSuspicionInfo(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__RevokeSuspicionInfo * soap_new___ns1__RevokeSuspicionInfo(struct soap *soap, int n = -1) { return soap_instantiate___ns1__RevokeSuspicionInfo(soap, n, NULL, NULL, NULL); }

inline struct __ns1__RevokeSuspicionInfo * soap_new_req___ns1__RevokeSuspicionInfo(struct soap *soap) { struct __ns1__RevokeSuspicionInfo *_p = soap_instantiate___ns1__RevokeSuspicionInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__RevokeSuspicionInfo(soap, _p); } return _p; }

inline struct __ns1__RevokeSuspicionInfo * soap_new_set___ns1__RevokeSuspicionInfo(struct soap *soap, _ns1__RevokeSuspicionInfo *ns1__RevokeSuspicionInfo) { struct __ns1__RevokeSuspicionInfo *_p = soap_instantiate___ns1__RevokeSuspicionInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__RevokeSuspicionInfo(soap, _p); _p->ns1__RevokeSuspicionInfo = ns1__RevokeSuspicionInfo; } return _p; }

inline void soap_delete___ns1__RevokeSuspicionInfo(struct soap *soap, struct __ns1__RevokeSuspicionInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__RevokeSuspicionInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__InSuspicionInfo
#define SOAP_TYPE___ns1__InSuspicionInfo (106)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__InSuspicionInfo(struct soap*, struct __ns1__InSuspicionInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__InSuspicionInfo(struct soap*, const struct __ns1__InSuspicionInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__InSuspicionInfo(struct soap*, const char*, int, const struct __ns1__InSuspicionInfo *, const char*);
SOAP_FMAC3 struct __ns1__InSuspicionInfo * SOAP_FMAC4 soap_in___ns1__InSuspicionInfo(struct soap*, const char*, struct __ns1__InSuspicionInfo *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__InSuspicionInfo(struct soap*, const struct __ns1__InSuspicionInfo *, const char*, const char*);

#ifndef soap_write___ns1__InSuspicionInfo
#define soap_write___ns1__InSuspicionInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__InSuspicionInfo(soap, data),0) || soap_put___ns1__InSuspicionInfo(soap, data, "-ns1:InSuspicionInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__InSuspicionInfo * SOAP_FMAC4 soap_get___ns1__InSuspicionInfo(struct soap*, struct __ns1__InSuspicionInfo *, const char*, const char*);

#ifndef soap_read___ns1__InSuspicionInfo
#define soap_read___ns1__InSuspicionInfo(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__InSuspicionInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__InSuspicionInfo * SOAP_FMAC2 soap_instantiate___ns1__InSuspicionInfo(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__InSuspicionInfo * soap_new___ns1__InSuspicionInfo(struct soap *soap, int n = -1) { return soap_instantiate___ns1__InSuspicionInfo(soap, n, NULL, NULL, NULL); }

inline struct __ns1__InSuspicionInfo * soap_new_req___ns1__InSuspicionInfo(struct soap *soap) { struct __ns1__InSuspicionInfo *_p = soap_instantiate___ns1__InSuspicionInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__InSuspicionInfo(soap, _p); } return _p; }

inline struct __ns1__InSuspicionInfo * soap_new_set___ns1__InSuspicionInfo(struct soap *soap, _ns1__InSuspicionInfo *ns1__InSuspicionInfo) { struct __ns1__InSuspicionInfo *_p = soap_instantiate___ns1__InSuspicionInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__InSuspicionInfo(soap, _p); _p->ns1__InSuspicionInfo = ns1__InSuspicionInfo; } return _p; }

inline void soap_delete___ns1__InSuspicionInfo(struct soap *soap, struct __ns1__InSuspicionInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__InSuspicionInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__IntExtralistInfo
#define SOAP_TYPE___ns1__IntExtralistInfo (102)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__IntExtralistInfo(struct soap*, struct __ns1__IntExtralistInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__IntExtralistInfo(struct soap*, const struct __ns1__IntExtralistInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__IntExtralistInfo(struct soap*, const char*, int, const struct __ns1__IntExtralistInfo *, const char*);
SOAP_FMAC3 struct __ns1__IntExtralistInfo * SOAP_FMAC4 soap_in___ns1__IntExtralistInfo(struct soap*, const char*, struct __ns1__IntExtralistInfo *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__IntExtralistInfo(struct soap*, const struct __ns1__IntExtralistInfo *, const char*, const char*);

#ifndef soap_write___ns1__IntExtralistInfo
#define soap_write___ns1__IntExtralistInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__IntExtralistInfo(soap, data),0) || soap_put___ns1__IntExtralistInfo(soap, data, "-ns1:IntExtralistInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__IntExtralistInfo * SOAP_FMAC4 soap_get___ns1__IntExtralistInfo(struct soap*, struct __ns1__IntExtralistInfo *, const char*, const char*);

#ifndef soap_read___ns1__IntExtralistInfo
#define soap_read___ns1__IntExtralistInfo(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__IntExtralistInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__IntExtralistInfo * SOAP_FMAC2 soap_instantiate___ns1__IntExtralistInfo(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__IntExtralistInfo * soap_new___ns1__IntExtralistInfo(struct soap *soap, int n = -1) { return soap_instantiate___ns1__IntExtralistInfo(soap, n, NULL, NULL, NULL); }

inline struct __ns1__IntExtralistInfo * soap_new_req___ns1__IntExtralistInfo(struct soap *soap) { struct __ns1__IntExtralistInfo *_p = soap_instantiate___ns1__IntExtralistInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__IntExtralistInfo(soap, _p); } return _p; }

inline struct __ns1__IntExtralistInfo * soap_new_set___ns1__IntExtralistInfo(struct soap *soap, _ns1__IntExtralistInfo *ns1__IntExtralistInfo) { struct __ns1__IntExtralistInfo *_p = soap_instantiate___ns1__IntExtralistInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__IntExtralistInfo(soap, _p); _p->ns1__IntExtralistInfo = ns1__IntExtralistInfo; } return _p; }

inline void soap_delete___ns1__IntExtralistInfo(struct soap *soap, struct __ns1__IntExtralistInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__IntExtralistInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__InChecklessInfo
#define SOAP_TYPE___ns1__InChecklessInfo (98)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__InChecklessInfo(struct soap*, struct __ns1__InChecklessInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__InChecklessInfo(struct soap*, const struct __ns1__InChecklessInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__InChecklessInfo(struct soap*, const char*, int, const struct __ns1__InChecklessInfo *, const char*);
SOAP_FMAC3 struct __ns1__InChecklessInfo * SOAP_FMAC4 soap_in___ns1__InChecklessInfo(struct soap*, const char*, struct __ns1__InChecklessInfo *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__InChecklessInfo(struct soap*, const struct __ns1__InChecklessInfo *, const char*, const char*);

#ifndef soap_write___ns1__InChecklessInfo
#define soap_write___ns1__InChecklessInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__InChecklessInfo(soap, data),0) || soap_put___ns1__InChecklessInfo(soap, data, "-ns1:InChecklessInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__InChecklessInfo * SOAP_FMAC4 soap_get___ns1__InChecklessInfo(struct soap*, struct __ns1__InChecklessInfo *, const char*, const char*);

#ifndef soap_read___ns1__InChecklessInfo
#define soap_read___ns1__InChecklessInfo(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__InChecklessInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__InChecklessInfo * SOAP_FMAC2 soap_instantiate___ns1__InChecklessInfo(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__InChecklessInfo * soap_new___ns1__InChecklessInfo(struct soap *soap, int n = -1) { return soap_instantiate___ns1__InChecklessInfo(soap, n, NULL, NULL, NULL); }

inline struct __ns1__InChecklessInfo * soap_new_req___ns1__InChecklessInfo(struct soap *soap) { struct __ns1__InChecklessInfo *_p = soap_instantiate___ns1__InChecklessInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__InChecklessInfo(soap, _p); } return _p; }

inline struct __ns1__InChecklessInfo * soap_new_set___ns1__InChecklessInfo(struct soap *soap, _ns1__InChecklessInfo *ns1__InChecklessInfo) { struct __ns1__InChecklessInfo *_p = soap_instantiate___ns1__InChecklessInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__InChecklessInfo(soap, _p); _p->ns1__InChecklessInfo = ns1__InChecklessInfo; } return _p; }

inline void soap_delete___ns1__InChecklessInfo(struct soap *soap, struct __ns1__InChecklessInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__InChecklessInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__InBlacklistInfo
#define SOAP_TYPE___ns1__InBlacklistInfo (94)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__InBlacklistInfo(struct soap*, struct __ns1__InBlacklistInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__InBlacklistInfo(struct soap*, const struct __ns1__InBlacklistInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__InBlacklistInfo(struct soap*, const char*, int, const struct __ns1__InBlacklistInfo *, const char*);
SOAP_FMAC3 struct __ns1__InBlacklistInfo * SOAP_FMAC4 soap_in___ns1__InBlacklistInfo(struct soap*, const char*, struct __ns1__InBlacklistInfo *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__InBlacklistInfo(struct soap*, const struct __ns1__InBlacklistInfo *, const char*, const char*);

#ifndef soap_write___ns1__InBlacklistInfo
#define soap_write___ns1__InBlacklistInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__InBlacklistInfo(soap, data),0) || soap_put___ns1__InBlacklistInfo(soap, data, "-ns1:InBlacklistInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__InBlacklistInfo * SOAP_FMAC4 soap_get___ns1__InBlacklistInfo(struct soap*, struct __ns1__InBlacklistInfo *, const char*, const char*);

#ifndef soap_read___ns1__InBlacklistInfo
#define soap_read___ns1__InBlacklistInfo(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__InBlacklistInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__InBlacklistInfo * SOAP_FMAC2 soap_instantiate___ns1__InBlacklistInfo(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__InBlacklistInfo * soap_new___ns1__InBlacklistInfo(struct soap *soap, int n = -1) { return soap_instantiate___ns1__InBlacklistInfo(soap, n, NULL, NULL, NULL); }

inline struct __ns1__InBlacklistInfo * soap_new_req___ns1__InBlacklistInfo(struct soap *soap) { struct __ns1__InBlacklistInfo *_p = soap_instantiate___ns1__InBlacklistInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__InBlacklistInfo(soap, _p); } return _p; }

inline struct __ns1__InBlacklistInfo * soap_new_set___ns1__InBlacklistInfo(struct soap *soap, _ns1__InBlacklistInfo *ns1__InBlacklistInfo) { struct __ns1__InBlacklistInfo *_p = soap_instantiate___ns1__InBlacklistInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__InBlacklistInfo(soap, _p); _p->ns1__InBlacklistInfo = ns1__InBlacklistInfo; } return _p; }

inline void soap_delete___ns1__InBlacklistInfo(struct soap *soap, struct __ns1__InBlacklistInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__InBlacklistInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__InCheckedPeccancyInfo
#define SOAP_TYPE___ns1__InCheckedPeccancyInfo (90)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__InCheckedPeccancyInfo(struct soap*, struct __ns1__InCheckedPeccancyInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__InCheckedPeccancyInfo(struct soap*, const struct __ns1__InCheckedPeccancyInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__InCheckedPeccancyInfo(struct soap*, const char*, int, const struct __ns1__InCheckedPeccancyInfo *, const char*);
SOAP_FMAC3 struct __ns1__InCheckedPeccancyInfo * SOAP_FMAC4 soap_in___ns1__InCheckedPeccancyInfo(struct soap*, const char*, struct __ns1__InCheckedPeccancyInfo *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__InCheckedPeccancyInfo(struct soap*, const struct __ns1__InCheckedPeccancyInfo *, const char*, const char*);

#ifndef soap_write___ns1__InCheckedPeccancyInfo
#define soap_write___ns1__InCheckedPeccancyInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__InCheckedPeccancyInfo(soap, data),0) || soap_put___ns1__InCheckedPeccancyInfo(soap, data, "-ns1:InCheckedPeccancyInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__InCheckedPeccancyInfo * SOAP_FMAC4 soap_get___ns1__InCheckedPeccancyInfo(struct soap*, struct __ns1__InCheckedPeccancyInfo *, const char*, const char*);

#ifndef soap_read___ns1__InCheckedPeccancyInfo
#define soap_read___ns1__InCheckedPeccancyInfo(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__InCheckedPeccancyInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__InCheckedPeccancyInfo * SOAP_FMAC2 soap_instantiate___ns1__InCheckedPeccancyInfo(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__InCheckedPeccancyInfo * soap_new___ns1__InCheckedPeccancyInfo(struct soap *soap, int n = -1) { return soap_instantiate___ns1__InCheckedPeccancyInfo(soap, n, NULL, NULL, NULL); }

inline struct __ns1__InCheckedPeccancyInfo * soap_new_req___ns1__InCheckedPeccancyInfo(struct soap *soap) { struct __ns1__InCheckedPeccancyInfo *_p = soap_instantiate___ns1__InCheckedPeccancyInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__InCheckedPeccancyInfo(soap, _p); } return _p; }

inline struct __ns1__InCheckedPeccancyInfo * soap_new_set___ns1__InCheckedPeccancyInfo(struct soap *soap, _ns1__InCheckedPeccancyInfo *ns1__InCheckedPeccancyInfo) { struct __ns1__InCheckedPeccancyInfo *_p = soap_instantiate___ns1__InCheckedPeccancyInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__InCheckedPeccancyInfo(soap, _p); _p->ns1__InCheckedPeccancyInfo = ns1__InCheckedPeccancyInfo; } return _p; }

inline void soap_delete___ns1__InCheckedPeccancyInfo(struct soap *soap, struct __ns1__InCheckedPeccancyInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__InCheckedPeccancyInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__InPeccancyInfo
#define SOAP_TYPE___ns1__InPeccancyInfo (86)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__InPeccancyInfo(struct soap*, struct __ns1__InPeccancyInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__InPeccancyInfo(struct soap*, const struct __ns1__InPeccancyInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__InPeccancyInfo(struct soap*, const char*, int, const struct __ns1__InPeccancyInfo *, const char*);
SOAP_FMAC3 struct __ns1__InPeccancyInfo * SOAP_FMAC4 soap_in___ns1__InPeccancyInfo(struct soap*, const char*, struct __ns1__InPeccancyInfo *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__InPeccancyInfo(struct soap*, const struct __ns1__InPeccancyInfo *, const char*, const char*);

#ifndef soap_write___ns1__InPeccancyInfo
#define soap_write___ns1__InPeccancyInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__InPeccancyInfo(soap, data),0) || soap_put___ns1__InPeccancyInfo(soap, data, "-ns1:InPeccancyInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__InPeccancyInfo * SOAP_FMAC4 soap_get___ns1__InPeccancyInfo(struct soap*, struct __ns1__InPeccancyInfo *, const char*, const char*);

#ifndef soap_read___ns1__InPeccancyInfo
#define soap_read___ns1__InPeccancyInfo(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__InPeccancyInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__InPeccancyInfo * SOAP_FMAC2 soap_instantiate___ns1__InPeccancyInfo(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__InPeccancyInfo * soap_new___ns1__InPeccancyInfo(struct soap *soap, int n = -1) { return soap_instantiate___ns1__InPeccancyInfo(soap, n, NULL, NULL, NULL); }

inline struct __ns1__InPeccancyInfo * soap_new_req___ns1__InPeccancyInfo(struct soap *soap) { struct __ns1__InPeccancyInfo *_p = soap_instantiate___ns1__InPeccancyInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__InPeccancyInfo(soap, _p); } return _p; }

inline struct __ns1__InPeccancyInfo * soap_new_set___ns1__InPeccancyInfo(struct soap *soap, _ns1__InPeccancyInfo *ns1__InPeccancyInfo) { struct __ns1__InPeccancyInfo *_p = soap_instantiate___ns1__InPeccancyInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__InPeccancyInfo(soap, _p); _p->ns1__InPeccancyInfo = ns1__InPeccancyInfo; } return _p; }

inline void soap_delete___ns1__InPeccancyInfo(struct soap *soap, struct __ns1__InPeccancyInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__InPeccancyInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__InPassCarInfo
#define SOAP_TYPE___ns1__InPassCarInfo (82)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__InPassCarInfo(struct soap*, struct __ns1__InPassCarInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__InPassCarInfo(struct soap*, const struct __ns1__InPassCarInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__InPassCarInfo(struct soap*, const char*, int, const struct __ns1__InPassCarInfo *, const char*);
SOAP_FMAC3 struct __ns1__InPassCarInfo * SOAP_FMAC4 soap_in___ns1__InPassCarInfo(struct soap*, const char*, struct __ns1__InPassCarInfo *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__InPassCarInfo(struct soap*, const struct __ns1__InPassCarInfo *, const char*, const char*);

#ifndef soap_write___ns1__InPassCarInfo
#define soap_write___ns1__InPassCarInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__InPassCarInfo(soap, data),0) || soap_put___ns1__InPassCarInfo(soap, data, "-ns1:InPassCarInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__InPassCarInfo * SOAP_FMAC4 soap_get___ns1__InPassCarInfo(struct soap*, struct __ns1__InPassCarInfo *, const char*, const char*);

#ifndef soap_read___ns1__InPassCarInfo
#define soap_read___ns1__InPassCarInfo(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__InPassCarInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__InPassCarInfo * SOAP_FMAC2 soap_instantiate___ns1__InPassCarInfo(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__InPassCarInfo * soap_new___ns1__InPassCarInfo(struct soap *soap, int n = -1) { return soap_instantiate___ns1__InPassCarInfo(soap, n, NULL, NULL, NULL); }

inline struct __ns1__InPassCarInfo * soap_new_req___ns1__InPassCarInfo(struct soap *soap) { struct __ns1__InPassCarInfo *_p = soap_instantiate___ns1__InPassCarInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__InPassCarInfo(soap, _p); } return _p; }

inline struct __ns1__InPassCarInfo * soap_new_set___ns1__InPassCarInfo(struct soap *soap, _ns1__InPassCarInfo *ns1__InPassCarInfo) { struct __ns1__InPassCarInfo *_p = soap_instantiate___ns1__InPassCarInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__InPassCarInfo(soap, _p); _p->ns1__InPassCarInfo = ns1__InPassCarInfo; } return _p; }

inline void soap_delete___ns1__InPassCarInfo(struct soap *soap, struct __ns1__InPassCarInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__InPassCarInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__CarPlateRecog
#define SOAP_TYPE___ns1__CarPlateRecog (78)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__CarPlateRecog(struct soap*, struct __ns1__CarPlateRecog *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__CarPlateRecog(struct soap*, const struct __ns1__CarPlateRecog *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__CarPlateRecog(struct soap*, const char*, int, const struct __ns1__CarPlateRecog *, const char*);
SOAP_FMAC3 struct __ns1__CarPlateRecog * SOAP_FMAC4 soap_in___ns1__CarPlateRecog(struct soap*, const char*, struct __ns1__CarPlateRecog *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__CarPlateRecog(struct soap*, const struct __ns1__CarPlateRecog *, const char*, const char*);

#ifndef soap_write___ns1__CarPlateRecog
#define soap_write___ns1__CarPlateRecog(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__CarPlateRecog(soap, data),0) || soap_put___ns1__CarPlateRecog(soap, data, "-ns1:CarPlateRecog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__CarPlateRecog * SOAP_FMAC4 soap_get___ns1__CarPlateRecog(struct soap*, struct __ns1__CarPlateRecog *, const char*, const char*);

#ifndef soap_read___ns1__CarPlateRecog
#define soap_read___ns1__CarPlateRecog(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__CarPlateRecog(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__CarPlateRecog * SOAP_FMAC2 soap_instantiate___ns1__CarPlateRecog(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__CarPlateRecog * soap_new___ns1__CarPlateRecog(struct soap *soap, int n = -1) { return soap_instantiate___ns1__CarPlateRecog(soap, n, NULL, NULL, NULL); }

inline struct __ns1__CarPlateRecog * soap_new_req___ns1__CarPlateRecog(struct soap *soap) { struct __ns1__CarPlateRecog *_p = soap_instantiate___ns1__CarPlateRecog(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__CarPlateRecog(soap, _p); } return _p; }

inline struct __ns1__CarPlateRecog * soap_new_set___ns1__CarPlateRecog(struct soap *soap, _ns1__CarPlateRecog *ns1__CarPlateRecog) { struct __ns1__CarPlateRecog *_p = soap_instantiate___ns1__CarPlateRecog(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__CarPlateRecog(soap, _p); _p->ns1__CarPlateRecog = ns1__CarPlateRecog; } return _p; }

inline void soap_delete___ns1__CarPlateRecog(struct soap *soap, struct __ns1__CarPlateRecog *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__CarPlateRecog(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetXMlFormat
#define SOAP_TYPE___ns1__GetXMlFormat (74)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetXMlFormat(struct soap*, struct __ns1__GetXMlFormat *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetXMlFormat(struct soap*, const struct __ns1__GetXMlFormat *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetXMlFormat(struct soap*, const char*, int, const struct __ns1__GetXMlFormat *, const char*);
SOAP_FMAC3 struct __ns1__GetXMlFormat * SOAP_FMAC4 soap_in___ns1__GetXMlFormat(struct soap*, const char*, struct __ns1__GetXMlFormat *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetXMlFormat(struct soap*, const struct __ns1__GetXMlFormat *, const char*, const char*);

#ifndef soap_write___ns1__GetXMlFormat
#define soap_write___ns1__GetXMlFormat(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetXMlFormat(soap, data),0) || soap_put___ns1__GetXMlFormat(soap, data, "-ns1:GetXMlFormat", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetXMlFormat * SOAP_FMAC4 soap_get___ns1__GetXMlFormat(struct soap*, struct __ns1__GetXMlFormat *, const char*, const char*);

#ifndef soap_read___ns1__GetXMlFormat
#define soap_read___ns1__GetXMlFormat(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetXMlFormat(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetXMlFormat * SOAP_FMAC2 soap_instantiate___ns1__GetXMlFormat(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetXMlFormat * soap_new___ns1__GetXMlFormat(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetXMlFormat(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetXMlFormat * soap_new_req___ns1__GetXMlFormat(struct soap *soap) { struct __ns1__GetXMlFormat *_p = soap_instantiate___ns1__GetXMlFormat(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetXMlFormat(soap, _p); } return _p; }

inline struct __ns1__GetXMlFormat * soap_new_set___ns1__GetXMlFormat(struct soap *soap, _ns1__GetXMlFormat *ns1__GetXMlFormat) { struct __ns1__GetXMlFormat *_p = soap_instantiate___ns1__GetXMlFormat(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetXMlFormat(soap, _p); _p->ns1__GetXMlFormat = ns1__GetXMlFormat; } return _p; }

inline void soap_delete___ns1__GetXMlFormat(struct soap *soap, struct __ns1__GetXMlFormat *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetXMlFormat(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetCurrentVersion
#define SOAP_TYPE___ns1__GetCurrentVersion (70)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetCurrentVersion(struct soap*, struct __ns1__GetCurrentVersion *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetCurrentVersion(struct soap*, const struct __ns1__GetCurrentVersion *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetCurrentVersion(struct soap*, const char*, int, const struct __ns1__GetCurrentVersion *, const char*);
SOAP_FMAC3 struct __ns1__GetCurrentVersion * SOAP_FMAC4 soap_in___ns1__GetCurrentVersion(struct soap*, const char*, struct __ns1__GetCurrentVersion *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetCurrentVersion(struct soap*, const struct __ns1__GetCurrentVersion *, const char*, const char*);

#ifndef soap_write___ns1__GetCurrentVersion
#define soap_write___ns1__GetCurrentVersion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetCurrentVersion(soap, data),0) || soap_put___ns1__GetCurrentVersion(soap, data, "-ns1:GetCurrentVersion", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetCurrentVersion * SOAP_FMAC4 soap_get___ns1__GetCurrentVersion(struct soap*, struct __ns1__GetCurrentVersion *, const char*, const char*);

#ifndef soap_read___ns1__GetCurrentVersion
#define soap_read___ns1__GetCurrentVersion(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetCurrentVersion(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetCurrentVersion * SOAP_FMAC2 soap_instantiate___ns1__GetCurrentVersion(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetCurrentVersion * soap_new___ns1__GetCurrentVersion(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetCurrentVersion(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetCurrentVersion * soap_new_req___ns1__GetCurrentVersion(struct soap *soap) { struct __ns1__GetCurrentVersion *_p = soap_instantiate___ns1__GetCurrentVersion(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetCurrentVersion(soap, _p); } return _p; }

inline struct __ns1__GetCurrentVersion * soap_new_set___ns1__GetCurrentVersion(struct soap *soap, _ns1__GetCurrentVersion *ns1__GetCurrentVersion) { struct __ns1__GetCurrentVersion *_p = soap_instantiate___ns1__GetCurrentVersion(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetCurrentVersion(soap, _p); _p->ns1__GetCurrentVersion = ns1__GetCurrentVersion; } return _p; }

inline void soap_delete___ns1__GetCurrentVersion(struct soap *soap, struct __ns1__GetCurrentVersion *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetCurrentVersion(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__WebserviceTest
#define SOAP_TYPE___ns1__WebserviceTest (66)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__WebserviceTest(struct soap*, struct __ns1__WebserviceTest *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__WebserviceTest(struct soap*, const struct __ns1__WebserviceTest *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__WebserviceTest(struct soap*, const char*, int, const struct __ns1__WebserviceTest *, const char*);
SOAP_FMAC3 struct __ns1__WebserviceTest * SOAP_FMAC4 soap_in___ns1__WebserviceTest(struct soap*, const char*, struct __ns1__WebserviceTest *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__WebserviceTest(struct soap*, const struct __ns1__WebserviceTest *, const char*, const char*);

#ifndef soap_write___ns1__WebserviceTest
#define soap_write___ns1__WebserviceTest(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__WebserviceTest(soap, data),0) || soap_put___ns1__WebserviceTest(soap, data, "-ns1:WebserviceTest", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__WebserviceTest * SOAP_FMAC4 soap_get___ns1__WebserviceTest(struct soap*, struct __ns1__WebserviceTest *, const char*, const char*);

#ifndef soap_read___ns1__WebserviceTest
#define soap_read___ns1__WebserviceTest(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__WebserviceTest(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__WebserviceTest * SOAP_FMAC2 soap_instantiate___ns1__WebserviceTest(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__WebserviceTest * soap_new___ns1__WebserviceTest(struct soap *soap, int n = -1) { return soap_instantiate___ns1__WebserviceTest(soap, n, NULL, NULL, NULL); }

inline struct __ns1__WebserviceTest * soap_new_req___ns1__WebserviceTest(struct soap *soap) { struct __ns1__WebserviceTest *_p = soap_instantiate___ns1__WebserviceTest(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__WebserviceTest(soap, _p); } return _p; }

inline struct __ns1__WebserviceTest * soap_new_set___ns1__WebserviceTest(struct soap *soap, _ns1__WebserviceTest *ns1__WebserviceTest) { struct __ns1__WebserviceTest *_p = soap_instantiate___ns1__WebserviceTest(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__WebserviceTest(soap, _p); _p->ns1__WebserviceTest = ns1__WebserviceTest; } return _p; }

inline void soap_delete___ns1__WebserviceTest(struct soap *soap, struct __ns1__WebserviceTest *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__WebserviceTest(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (234)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data),0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (233)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data),0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (227)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data),0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef SOAP_TYPE_PointerTo_ns1__CheckUserInfoResponse
#define SOAP_TYPE_PointerTo_ns1__CheckUserInfoResponse (168)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CheckUserInfoResponse(struct soap*, _ns1__CheckUserInfoResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CheckUserInfoResponse(struct soap*, const char *, int, _ns1__CheckUserInfoResponse *const*, const char *);
SOAP_FMAC3 _ns1__CheckUserInfoResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__CheckUserInfoResponse(struct soap*, const char*, _ns1__CheckUserInfoResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CheckUserInfoResponse(struct soap*, _ns1__CheckUserInfoResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__CheckUserInfoResponse
#define soap_write_PointerTo_ns1__CheckUserInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__CheckUserInfoResponse(soap, data),0) || soap_put_PointerTo_ns1__CheckUserInfoResponse(soap, data, "ns1:CheckUserInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__CheckUserInfoResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__CheckUserInfoResponse(struct soap*, _ns1__CheckUserInfoResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__CheckUserInfoResponse
#define soap_read_PointerTo_ns1__CheckUserInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__CheckUserInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__CheckUserInfo
#define SOAP_TYPE_PointerTo_ns1__CheckUserInfo (167)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CheckUserInfo(struct soap*, _ns1__CheckUserInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CheckUserInfo(struct soap*, const char *, int, _ns1__CheckUserInfo *const*, const char *);
SOAP_FMAC3 _ns1__CheckUserInfo ** SOAP_FMAC4 soap_in_PointerTo_ns1__CheckUserInfo(struct soap*, const char*, _ns1__CheckUserInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CheckUserInfo(struct soap*, _ns1__CheckUserInfo *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__CheckUserInfo
#define soap_write_PointerTo_ns1__CheckUserInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__CheckUserInfo(soap, data),0) || soap_put_PointerTo_ns1__CheckUserInfo(soap, data, "ns1:CheckUserInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__CheckUserInfo ** SOAP_FMAC4 soap_get_PointerTo_ns1__CheckUserInfo(struct soap*, _ns1__CheckUserInfo **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__CheckUserInfo
#define soap_read_PointerTo_ns1__CheckUserInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__CheckUserInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__addTransRecInfoResponse
#define SOAP_TYPE_PointerTo_ns1__addTransRecInfoResponse (164)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__addTransRecInfoResponse(struct soap*, _ns1__addTransRecInfoResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__addTransRecInfoResponse(struct soap*, const char *, int, _ns1__addTransRecInfoResponse *const*, const char *);
SOAP_FMAC3 _ns1__addTransRecInfoResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__addTransRecInfoResponse(struct soap*, const char*, _ns1__addTransRecInfoResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__addTransRecInfoResponse(struct soap*, _ns1__addTransRecInfoResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__addTransRecInfoResponse
#define soap_write_PointerTo_ns1__addTransRecInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__addTransRecInfoResponse(soap, data),0) || soap_put_PointerTo_ns1__addTransRecInfoResponse(soap, data, "ns1:addTransRecInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__addTransRecInfoResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__addTransRecInfoResponse(struct soap*, _ns1__addTransRecInfoResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__addTransRecInfoResponse
#define soap_read_PointerTo_ns1__addTransRecInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__addTransRecInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__addTransRecInfo
#define SOAP_TYPE_PointerTo_ns1__addTransRecInfo (163)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__addTransRecInfo(struct soap*, _ns1__addTransRecInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__addTransRecInfo(struct soap*, const char *, int, _ns1__addTransRecInfo *const*, const char *);
SOAP_FMAC3 _ns1__addTransRecInfo ** SOAP_FMAC4 soap_in_PointerTo_ns1__addTransRecInfo(struct soap*, const char*, _ns1__addTransRecInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__addTransRecInfo(struct soap*, _ns1__addTransRecInfo *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__addTransRecInfo
#define soap_write_PointerTo_ns1__addTransRecInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__addTransRecInfo(soap, data),0) || soap_put_PointerTo_ns1__addTransRecInfo(soap, data, "ns1:addTransRecInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__addTransRecInfo ** SOAP_FMAC4 soap_get_PointerTo_ns1__addTransRecInfo(struct soap*, _ns1__addTransRecInfo **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__addTransRecInfo
#define soap_read_PointerTo_ns1__addTransRecInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__addTransRecInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetJdsbhRecoveryInfoResponse
#define SOAP_TYPE_PointerTo_ns1__GetJdsbhRecoveryInfoResponse (160)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetJdsbhRecoveryInfoResponse(struct soap*, _ns1__GetJdsbhRecoveryInfoResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetJdsbhRecoveryInfoResponse(struct soap*, const char *, int, _ns1__GetJdsbhRecoveryInfoResponse *const*, const char *);
SOAP_FMAC3 _ns1__GetJdsbhRecoveryInfoResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetJdsbhRecoveryInfoResponse(struct soap*, const char*, _ns1__GetJdsbhRecoveryInfoResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetJdsbhRecoveryInfoResponse(struct soap*, _ns1__GetJdsbhRecoveryInfoResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetJdsbhRecoveryInfoResponse
#define soap_write_PointerTo_ns1__GetJdsbhRecoveryInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetJdsbhRecoveryInfoResponse(soap, data),0) || soap_put_PointerTo_ns1__GetJdsbhRecoveryInfoResponse(soap, data, "ns1:GetJdsbhRecoveryInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetJdsbhRecoveryInfoResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetJdsbhRecoveryInfoResponse(struct soap*, _ns1__GetJdsbhRecoveryInfoResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetJdsbhRecoveryInfoResponse
#define soap_read_PointerTo_ns1__GetJdsbhRecoveryInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetJdsbhRecoveryInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetJdsbhRecoveryInfo
#define SOAP_TYPE_PointerTo_ns1__GetJdsbhRecoveryInfo (159)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetJdsbhRecoveryInfo(struct soap*, _ns1__GetJdsbhRecoveryInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetJdsbhRecoveryInfo(struct soap*, const char *, int, _ns1__GetJdsbhRecoveryInfo *const*, const char *);
SOAP_FMAC3 _ns1__GetJdsbhRecoveryInfo ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetJdsbhRecoveryInfo(struct soap*, const char*, _ns1__GetJdsbhRecoveryInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetJdsbhRecoveryInfo(struct soap*, _ns1__GetJdsbhRecoveryInfo *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetJdsbhRecoveryInfo
#define soap_write_PointerTo_ns1__GetJdsbhRecoveryInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetJdsbhRecoveryInfo(soap, data),0) || soap_put_PointerTo_ns1__GetJdsbhRecoveryInfo(soap, data, "ns1:GetJdsbhRecoveryInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetJdsbhRecoveryInfo ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetJdsbhRecoveryInfo(struct soap*, _ns1__GetJdsbhRecoveryInfo **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetJdsbhRecoveryInfo
#define soap_read_PointerTo_ns1__GetJdsbhRecoveryInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetJdsbhRecoveryInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetJdsbhRecoveryResponse
#define SOAP_TYPE_PointerTo_ns1__GetJdsbhRecoveryResponse (156)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetJdsbhRecoveryResponse(struct soap*, _ns1__GetJdsbhRecoveryResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetJdsbhRecoveryResponse(struct soap*, const char *, int, _ns1__GetJdsbhRecoveryResponse *const*, const char *);
SOAP_FMAC3 _ns1__GetJdsbhRecoveryResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetJdsbhRecoveryResponse(struct soap*, const char*, _ns1__GetJdsbhRecoveryResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetJdsbhRecoveryResponse(struct soap*, _ns1__GetJdsbhRecoveryResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetJdsbhRecoveryResponse
#define soap_write_PointerTo_ns1__GetJdsbhRecoveryResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetJdsbhRecoveryResponse(soap, data),0) || soap_put_PointerTo_ns1__GetJdsbhRecoveryResponse(soap, data, "ns1:GetJdsbhRecoveryResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetJdsbhRecoveryResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetJdsbhRecoveryResponse(struct soap*, _ns1__GetJdsbhRecoveryResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetJdsbhRecoveryResponse
#define soap_read_PointerTo_ns1__GetJdsbhRecoveryResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetJdsbhRecoveryResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetJdsbhRecovery
#define SOAP_TYPE_PointerTo_ns1__GetJdsbhRecovery (155)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetJdsbhRecovery(struct soap*, _ns1__GetJdsbhRecovery *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetJdsbhRecovery(struct soap*, const char *, int, _ns1__GetJdsbhRecovery *const*, const char *);
SOAP_FMAC3 _ns1__GetJdsbhRecovery ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetJdsbhRecovery(struct soap*, const char*, _ns1__GetJdsbhRecovery **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetJdsbhRecovery(struct soap*, _ns1__GetJdsbhRecovery *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetJdsbhRecovery
#define soap_write_PointerTo_ns1__GetJdsbhRecovery(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetJdsbhRecovery(soap, data),0) || soap_put_PointerTo_ns1__GetJdsbhRecovery(soap, data, "ns1:GetJdsbhRecovery", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetJdsbhRecovery ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetJdsbhRecovery(struct soap*, _ns1__GetJdsbhRecovery **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetJdsbhRecovery
#define soap_read_PointerTo_ns1__GetJdsbhRecovery(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetJdsbhRecovery(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetViolationInfoResponse
#define SOAP_TYPE_PointerTo_ns1__GetViolationInfoResponse (152)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetViolationInfoResponse(struct soap*, _ns1__GetViolationInfoResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetViolationInfoResponse(struct soap*, const char *, int, _ns1__GetViolationInfoResponse *const*, const char *);
SOAP_FMAC3 _ns1__GetViolationInfoResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetViolationInfoResponse(struct soap*, const char*, _ns1__GetViolationInfoResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetViolationInfoResponse(struct soap*, _ns1__GetViolationInfoResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetViolationInfoResponse
#define soap_write_PointerTo_ns1__GetViolationInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetViolationInfoResponse(soap, data),0) || soap_put_PointerTo_ns1__GetViolationInfoResponse(soap, data, "ns1:GetViolationInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetViolationInfoResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetViolationInfoResponse(struct soap*, _ns1__GetViolationInfoResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetViolationInfoResponse
#define soap_read_PointerTo_ns1__GetViolationInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetViolationInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetViolationInfo
#define SOAP_TYPE_PointerTo_ns1__GetViolationInfo (151)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetViolationInfo(struct soap*, _ns1__GetViolationInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetViolationInfo(struct soap*, const char *, int, _ns1__GetViolationInfo *const*, const char *);
SOAP_FMAC3 _ns1__GetViolationInfo ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetViolationInfo(struct soap*, const char*, _ns1__GetViolationInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetViolationInfo(struct soap*, _ns1__GetViolationInfo *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetViolationInfo
#define soap_write_PointerTo_ns1__GetViolationInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetViolationInfo(soap, data),0) || soap_put_PointerTo_ns1__GetViolationInfo(soap, data, "ns1:GetViolationInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetViolationInfo ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetViolationInfo(struct soap*, _ns1__GetViolationInfo **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetViolationInfo
#define soap_read_PointerTo_ns1__GetViolationInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetViolationInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__InViolationInfoResponse
#define SOAP_TYPE_PointerTo_ns1__InViolationInfoResponse (148)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__InViolationInfoResponse(struct soap*, _ns1__InViolationInfoResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__InViolationInfoResponse(struct soap*, const char *, int, _ns1__InViolationInfoResponse *const*, const char *);
SOAP_FMAC3 _ns1__InViolationInfoResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__InViolationInfoResponse(struct soap*, const char*, _ns1__InViolationInfoResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__InViolationInfoResponse(struct soap*, _ns1__InViolationInfoResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__InViolationInfoResponse
#define soap_write_PointerTo_ns1__InViolationInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__InViolationInfoResponse(soap, data),0) || soap_put_PointerTo_ns1__InViolationInfoResponse(soap, data, "ns1:InViolationInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__InViolationInfoResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__InViolationInfoResponse(struct soap*, _ns1__InViolationInfoResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__InViolationInfoResponse
#define soap_read_PointerTo_ns1__InViolationInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__InViolationInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__InViolationInfo
#define SOAP_TYPE_PointerTo_ns1__InViolationInfo (147)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__InViolationInfo(struct soap*, _ns1__InViolationInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__InViolationInfo(struct soap*, const char *, int, _ns1__InViolationInfo *const*, const char *);
SOAP_FMAC3 _ns1__InViolationInfo ** SOAP_FMAC4 soap_in_PointerTo_ns1__InViolationInfo(struct soap*, const char*, _ns1__InViolationInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__InViolationInfo(struct soap*, _ns1__InViolationInfo *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__InViolationInfo
#define soap_write_PointerTo_ns1__InViolationInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__InViolationInfo(soap, data),0) || soap_put_PointerTo_ns1__InViolationInfo(soap, data, "ns1:InViolationInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__InViolationInfo ** SOAP_FMAC4 soap_get_PointerTo_ns1__InViolationInfo(struct soap*, _ns1__InViolationInfo **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__InViolationInfo
#define soap_read_PointerTo_ns1__InViolationInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__InViolationInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__UpdataDeviceStateResponse
#define SOAP_TYPE_PointerTo_ns1__UpdataDeviceStateResponse (144)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__UpdataDeviceStateResponse(struct soap*, _ns1__UpdataDeviceStateResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__UpdataDeviceStateResponse(struct soap*, const char *, int, _ns1__UpdataDeviceStateResponse *const*, const char *);
SOAP_FMAC3 _ns1__UpdataDeviceStateResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__UpdataDeviceStateResponse(struct soap*, const char*, _ns1__UpdataDeviceStateResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__UpdataDeviceStateResponse(struct soap*, _ns1__UpdataDeviceStateResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__UpdataDeviceStateResponse
#define soap_write_PointerTo_ns1__UpdataDeviceStateResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__UpdataDeviceStateResponse(soap, data),0) || soap_put_PointerTo_ns1__UpdataDeviceStateResponse(soap, data, "ns1:UpdataDeviceStateResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__UpdataDeviceStateResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__UpdataDeviceStateResponse(struct soap*, _ns1__UpdataDeviceStateResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__UpdataDeviceStateResponse
#define soap_read_PointerTo_ns1__UpdataDeviceStateResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__UpdataDeviceStateResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__UpdataDeviceState
#define SOAP_TYPE_PointerTo_ns1__UpdataDeviceState (143)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__UpdataDeviceState(struct soap*, _ns1__UpdataDeviceState *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__UpdataDeviceState(struct soap*, const char *, int, _ns1__UpdataDeviceState *const*, const char *);
SOAP_FMAC3 _ns1__UpdataDeviceState ** SOAP_FMAC4 soap_in_PointerTo_ns1__UpdataDeviceState(struct soap*, const char*, _ns1__UpdataDeviceState **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__UpdataDeviceState(struct soap*, _ns1__UpdataDeviceState *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__UpdataDeviceState
#define soap_write_PointerTo_ns1__UpdataDeviceState(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__UpdataDeviceState(soap, data),0) || soap_put_PointerTo_ns1__UpdataDeviceState(soap, data, "ns1:UpdataDeviceState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__UpdataDeviceState ** SOAP_FMAC4 soap_get_PointerTo_ns1__UpdataDeviceState(struct soap*, _ns1__UpdataDeviceState **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__UpdataDeviceState
#define soap_read_PointerTo_ns1__UpdataDeviceState(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__UpdataDeviceState(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetAlarmInfoResponse
#define SOAP_TYPE_PointerTo_ns1__GetAlarmInfoResponse (140)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetAlarmInfoResponse(struct soap*, _ns1__GetAlarmInfoResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetAlarmInfoResponse(struct soap*, const char *, int, _ns1__GetAlarmInfoResponse *const*, const char *);
SOAP_FMAC3 _ns1__GetAlarmInfoResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetAlarmInfoResponse(struct soap*, const char*, _ns1__GetAlarmInfoResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetAlarmInfoResponse(struct soap*, _ns1__GetAlarmInfoResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetAlarmInfoResponse
#define soap_write_PointerTo_ns1__GetAlarmInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetAlarmInfoResponse(soap, data),0) || soap_put_PointerTo_ns1__GetAlarmInfoResponse(soap, data, "ns1:GetAlarmInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetAlarmInfoResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetAlarmInfoResponse(struct soap*, _ns1__GetAlarmInfoResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetAlarmInfoResponse
#define soap_read_PointerTo_ns1__GetAlarmInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetAlarmInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetAlarmInfo
#define SOAP_TYPE_PointerTo_ns1__GetAlarmInfo (139)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetAlarmInfo(struct soap*, _ns1__GetAlarmInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetAlarmInfo(struct soap*, const char *, int, _ns1__GetAlarmInfo *const*, const char *);
SOAP_FMAC3 _ns1__GetAlarmInfo ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetAlarmInfo(struct soap*, const char*, _ns1__GetAlarmInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetAlarmInfo(struct soap*, _ns1__GetAlarmInfo *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetAlarmInfo
#define soap_write_PointerTo_ns1__GetAlarmInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetAlarmInfo(soap, data),0) || soap_put_PointerTo_ns1__GetAlarmInfo(soap, data, "ns1:GetAlarmInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetAlarmInfo ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetAlarmInfo(struct soap*, _ns1__GetAlarmInfo **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetAlarmInfo
#define soap_read_PointerTo_ns1__GetAlarmInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetAlarmInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__UpdateVioPeccancyInfoResponse
#define SOAP_TYPE_PointerTo_ns1__UpdateVioPeccancyInfoResponse (136)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__UpdateVioPeccancyInfoResponse(struct soap*, _ns1__UpdateVioPeccancyInfoResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__UpdateVioPeccancyInfoResponse(struct soap*, const char *, int, _ns1__UpdateVioPeccancyInfoResponse *const*, const char *);
SOAP_FMAC3 _ns1__UpdateVioPeccancyInfoResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__UpdateVioPeccancyInfoResponse(struct soap*, const char*, _ns1__UpdateVioPeccancyInfoResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__UpdateVioPeccancyInfoResponse(struct soap*, _ns1__UpdateVioPeccancyInfoResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__UpdateVioPeccancyInfoResponse
#define soap_write_PointerTo_ns1__UpdateVioPeccancyInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__UpdateVioPeccancyInfoResponse(soap, data),0) || soap_put_PointerTo_ns1__UpdateVioPeccancyInfoResponse(soap, data, "ns1:UpdateVioPeccancyInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__UpdateVioPeccancyInfoResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__UpdateVioPeccancyInfoResponse(struct soap*, _ns1__UpdateVioPeccancyInfoResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__UpdateVioPeccancyInfoResponse
#define soap_read_PointerTo_ns1__UpdateVioPeccancyInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__UpdateVioPeccancyInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__UpdateVioPeccancyInfo
#define SOAP_TYPE_PointerTo_ns1__UpdateVioPeccancyInfo (135)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__UpdateVioPeccancyInfo(struct soap*, _ns1__UpdateVioPeccancyInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__UpdateVioPeccancyInfo(struct soap*, const char *, int, _ns1__UpdateVioPeccancyInfo *const*, const char *);
SOAP_FMAC3 _ns1__UpdateVioPeccancyInfo ** SOAP_FMAC4 soap_in_PointerTo_ns1__UpdateVioPeccancyInfo(struct soap*, const char*, _ns1__UpdateVioPeccancyInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__UpdateVioPeccancyInfo(struct soap*, _ns1__UpdateVioPeccancyInfo *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__UpdateVioPeccancyInfo
#define soap_write_PointerTo_ns1__UpdateVioPeccancyInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__UpdateVioPeccancyInfo(soap, data),0) || soap_put_PointerTo_ns1__UpdateVioPeccancyInfo(soap, data, "ns1:UpdateVioPeccancyInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__UpdateVioPeccancyInfo ** SOAP_FMAC4 soap_get_PointerTo_ns1__UpdateVioPeccancyInfo(struct soap*, _ns1__UpdateVioPeccancyInfo **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__UpdateVioPeccancyInfo
#define soap_read_PointerTo_ns1__UpdateVioPeccancyInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__UpdateVioPeccancyInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetVioPeccancyNoCheckInfoResponse
#define SOAP_TYPE_PointerTo_ns1__GetVioPeccancyNoCheckInfoResponse (132)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetVioPeccancyNoCheckInfoResponse(struct soap*, _ns1__GetVioPeccancyNoCheckInfoResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetVioPeccancyNoCheckInfoResponse(struct soap*, const char *, int, _ns1__GetVioPeccancyNoCheckInfoResponse *const*, const char *);
SOAP_FMAC3 _ns1__GetVioPeccancyNoCheckInfoResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetVioPeccancyNoCheckInfoResponse(struct soap*, const char*, _ns1__GetVioPeccancyNoCheckInfoResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetVioPeccancyNoCheckInfoResponse(struct soap*, _ns1__GetVioPeccancyNoCheckInfoResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetVioPeccancyNoCheckInfoResponse
#define soap_write_PointerTo_ns1__GetVioPeccancyNoCheckInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetVioPeccancyNoCheckInfoResponse(soap, data),0) || soap_put_PointerTo_ns1__GetVioPeccancyNoCheckInfoResponse(soap, data, "ns1:GetVioPeccancyNoCheckInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetVioPeccancyNoCheckInfoResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetVioPeccancyNoCheckInfoResponse(struct soap*, _ns1__GetVioPeccancyNoCheckInfoResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetVioPeccancyNoCheckInfoResponse
#define soap_read_PointerTo_ns1__GetVioPeccancyNoCheckInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetVioPeccancyNoCheckInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetVioPeccancyNoCheckInfo
#define SOAP_TYPE_PointerTo_ns1__GetVioPeccancyNoCheckInfo (131)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetVioPeccancyNoCheckInfo(struct soap*, _ns1__GetVioPeccancyNoCheckInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetVioPeccancyNoCheckInfo(struct soap*, const char *, int, _ns1__GetVioPeccancyNoCheckInfo *const*, const char *);
SOAP_FMAC3 _ns1__GetVioPeccancyNoCheckInfo ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetVioPeccancyNoCheckInfo(struct soap*, const char*, _ns1__GetVioPeccancyNoCheckInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetVioPeccancyNoCheckInfo(struct soap*, _ns1__GetVioPeccancyNoCheckInfo *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetVioPeccancyNoCheckInfo
#define soap_write_PointerTo_ns1__GetVioPeccancyNoCheckInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetVioPeccancyNoCheckInfo(soap, data),0) || soap_put_PointerTo_ns1__GetVioPeccancyNoCheckInfo(soap, data, "ns1:GetVioPeccancyNoCheckInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetVioPeccancyNoCheckInfo ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetVioPeccancyNoCheckInfo(struct soap*, _ns1__GetVioPeccancyNoCheckInfo **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetVioPeccancyNoCheckInfo
#define soap_read_PointerTo_ns1__GetVioPeccancyNoCheckInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetVioPeccancyNoCheckInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__UpdatePeccancyInfoResponse
#define SOAP_TYPE_PointerTo_ns1__UpdatePeccancyInfoResponse (128)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__UpdatePeccancyInfoResponse(struct soap*, _ns1__UpdatePeccancyInfoResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__UpdatePeccancyInfoResponse(struct soap*, const char *, int, _ns1__UpdatePeccancyInfoResponse *const*, const char *);
SOAP_FMAC3 _ns1__UpdatePeccancyInfoResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__UpdatePeccancyInfoResponse(struct soap*, const char*, _ns1__UpdatePeccancyInfoResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__UpdatePeccancyInfoResponse(struct soap*, _ns1__UpdatePeccancyInfoResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__UpdatePeccancyInfoResponse
#define soap_write_PointerTo_ns1__UpdatePeccancyInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__UpdatePeccancyInfoResponse(soap, data),0) || soap_put_PointerTo_ns1__UpdatePeccancyInfoResponse(soap, data, "ns1:UpdatePeccancyInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__UpdatePeccancyInfoResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__UpdatePeccancyInfoResponse(struct soap*, _ns1__UpdatePeccancyInfoResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__UpdatePeccancyInfoResponse
#define soap_read_PointerTo_ns1__UpdatePeccancyInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__UpdatePeccancyInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__UpdatePeccancyInfo
#define SOAP_TYPE_PointerTo_ns1__UpdatePeccancyInfo (127)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__UpdatePeccancyInfo(struct soap*, _ns1__UpdatePeccancyInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__UpdatePeccancyInfo(struct soap*, const char *, int, _ns1__UpdatePeccancyInfo *const*, const char *);
SOAP_FMAC3 _ns1__UpdatePeccancyInfo ** SOAP_FMAC4 soap_in_PointerTo_ns1__UpdatePeccancyInfo(struct soap*, const char*, _ns1__UpdatePeccancyInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__UpdatePeccancyInfo(struct soap*, _ns1__UpdatePeccancyInfo *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__UpdatePeccancyInfo
#define soap_write_PointerTo_ns1__UpdatePeccancyInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__UpdatePeccancyInfo(soap, data),0) || soap_put_PointerTo_ns1__UpdatePeccancyInfo(soap, data, "ns1:UpdatePeccancyInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__UpdatePeccancyInfo ** SOAP_FMAC4 soap_get_PointerTo_ns1__UpdatePeccancyInfo(struct soap*, _ns1__UpdatePeccancyInfo **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__UpdatePeccancyInfo
#define soap_read_PointerTo_ns1__UpdatePeccancyInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__UpdatePeccancyInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetPeccancyNoCheckInfoResponse
#define SOAP_TYPE_PointerTo_ns1__GetPeccancyNoCheckInfoResponse (124)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetPeccancyNoCheckInfoResponse(struct soap*, _ns1__GetPeccancyNoCheckInfoResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetPeccancyNoCheckInfoResponse(struct soap*, const char *, int, _ns1__GetPeccancyNoCheckInfoResponse *const*, const char *);
SOAP_FMAC3 _ns1__GetPeccancyNoCheckInfoResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetPeccancyNoCheckInfoResponse(struct soap*, const char*, _ns1__GetPeccancyNoCheckInfoResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetPeccancyNoCheckInfoResponse(struct soap*, _ns1__GetPeccancyNoCheckInfoResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetPeccancyNoCheckInfoResponse
#define soap_write_PointerTo_ns1__GetPeccancyNoCheckInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetPeccancyNoCheckInfoResponse(soap, data),0) || soap_put_PointerTo_ns1__GetPeccancyNoCheckInfoResponse(soap, data, "ns1:GetPeccancyNoCheckInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetPeccancyNoCheckInfoResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetPeccancyNoCheckInfoResponse(struct soap*, _ns1__GetPeccancyNoCheckInfoResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetPeccancyNoCheckInfoResponse
#define soap_read_PointerTo_ns1__GetPeccancyNoCheckInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetPeccancyNoCheckInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetPeccancyNoCheckInfo
#define SOAP_TYPE_PointerTo_ns1__GetPeccancyNoCheckInfo (123)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetPeccancyNoCheckInfo(struct soap*, _ns1__GetPeccancyNoCheckInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetPeccancyNoCheckInfo(struct soap*, const char *, int, _ns1__GetPeccancyNoCheckInfo *const*, const char *);
SOAP_FMAC3 _ns1__GetPeccancyNoCheckInfo ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetPeccancyNoCheckInfo(struct soap*, const char*, _ns1__GetPeccancyNoCheckInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetPeccancyNoCheckInfo(struct soap*, _ns1__GetPeccancyNoCheckInfo *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetPeccancyNoCheckInfo
#define soap_write_PointerTo_ns1__GetPeccancyNoCheckInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetPeccancyNoCheckInfo(soap, data),0) || soap_put_PointerTo_ns1__GetPeccancyNoCheckInfo(soap, data, "ns1:GetPeccancyNoCheckInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetPeccancyNoCheckInfo ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetPeccancyNoCheckInfo(struct soap*, _ns1__GetPeccancyNoCheckInfo **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetPeccancyNoCheckInfo
#define soap_read_PointerTo_ns1__GetPeccancyNoCheckInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetPeccancyNoCheckInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetPeccancyInfoResponse
#define SOAP_TYPE_PointerTo_ns1__GetPeccancyInfoResponse (120)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetPeccancyInfoResponse(struct soap*, _ns1__GetPeccancyInfoResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetPeccancyInfoResponse(struct soap*, const char *, int, _ns1__GetPeccancyInfoResponse *const*, const char *);
SOAP_FMAC3 _ns1__GetPeccancyInfoResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetPeccancyInfoResponse(struct soap*, const char*, _ns1__GetPeccancyInfoResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetPeccancyInfoResponse(struct soap*, _ns1__GetPeccancyInfoResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetPeccancyInfoResponse
#define soap_write_PointerTo_ns1__GetPeccancyInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetPeccancyInfoResponse(soap, data),0) || soap_put_PointerTo_ns1__GetPeccancyInfoResponse(soap, data, "ns1:GetPeccancyInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetPeccancyInfoResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetPeccancyInfoResponse(struct soap*, _ns1__GetPeccancyInfoResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetPeccancyInfoResponse
#define soap_read_PointerTo_ns1__GetPeccancyInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetPeccancyInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetPeccancyInfo
#define SOAP_TYPE_PointerTo_ns1__GetPeccancyInfo (119)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetPeccancyInfo(struct soap*, _ns1__GetPeccancyInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetPeccancyInfo(struct soap*, const char *, int, _ns1__GetPeccancyInfo *const*, const char *);
SOAP_FMAC3 _ns1__GetPeccancyInfo ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetPeccancyInfo(struct soap*, const char*, _ns1__GetPeccancyInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetPeccancyInfo(struct soap*, _ns1__GetPeccancyInfo *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetPeccancyInfo
#define soap_write_PointerTo_ns1__GetPeccancyInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetPeccancyInfo(soap, data),0) || soap_put_PointerTo_ns1__GetPeccancyInfo(soap, data, "ns1:GetPeccancyInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetPeccancyInfo ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetPeccancyInfo(struct soap*, _ns1__GetPeccancyInfo **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetPeccancyInfo
#define soap_read_PointerTo_ns1__GetPeccancyInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetPeccancyInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetPassCarInfoResponse
#define SOAP_TYPE_PointerTo_ns1__GetPassCarInfoResponse (116)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetPassCarInfoResponse(struct soap*, _ns1__GetPassCarInfoResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetPassCarInfoResponse(struct soap*, const char *, int, _ns1__GetPassCarInfoResponse *const*, const char *);
SOAP_FMAC3 _ns1__GetPassCarInfoResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetPassCarInfoResponse(struct soap*, const char*, _ns1__GetPassCarInfoResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetPassCarInfoResponse(struct soap*, _ns1__GetPassCarInfoResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetPassCarInfoResponse
#define soap_write_PointerTo_ns1__GetPassCarInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetPassCarInfoResponse(soap, data),0) || soap_put_PointerTo_ns1__GetPassCarInfoResponse(soap, data, "ns1:GetPassCarInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetPassCarInfoResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetPassCarInfoResponse(struct soap*, _ns1__GetPassCarInfoResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetPassCarInfoResponse
#define soap_read_PointerTo_ns1__GetPassCarInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetPassCarInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetPassCarInfo
#define SOAP_TYPE_PointerTo_ns1__GetPassCarInfo (115)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetPassCarInfo(struct soap*, _ns1__GetPassCarInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetPassCarInfo(struct soap*, const char *, int, _ns1__GetPassCarInfo *const*, const char *);
SOAP_FMAC3 _ns1__GetPassCarInfo ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetPassCarInfo(struct soap*, const char*, _ns1__GetPassCarInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetPassCarInfo(struct soap*, _ns1__GetPassCarInfo *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetPassCarInfo
#define soap_write_PointerTo_ns1__GetPassCarInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetPassCarInfo(soap, data),0) || soap_put_PointerTo_ns1__GetPassCarInfo(soap, data, "ns1:GetPassCarInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetPassCarInfo ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetPassCarInfo(struct soap*, _ns1__GetPassCarInfo **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetPassCarInfo
#define soap_read_PointerTo_ns1__GetPassCarInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetPassCarInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetLocationInfoResponse
#define SOAP_TYPE_PointerTo_ns1__GetLocationInfoResponse (112)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetLocationInfoResponse(struct soap*, _ns1__GetLocationInfoResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetLocationInfoResponse(struct soap*, const char *, int, _ns1__GetLocationInfoResponse *const*, const char *);
SOAP_FMAC3 _ns1__GetLocationInfoResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetLocationInfoResponse(struct soap*, const char*, _ns1__GetLocationInfoResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetLocationInfoResponse(struct soap*, _ns1__GetLocationInfoResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetLocationInfoResponse
#define soap_write_PointerTo_ns1__GetLocationInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetLocationInfoResponse(soap, data),0) || soap_put_PointerTo_ns1__GetLocationInfoResponse(soap, data, "ns1:GetLocationInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetLocationInfoResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetLocationInfoResponse(struct soap*, _ns1__GetLocationInfoResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetLocationInfoResponse
#define soap_read_PointerTo_ns1__GetLocationInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetLocationInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetLocationInfo
#define SOAP_TYPE_PointerTo_ns1__GetLocationInfo (111)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetLocationInfo(struct soap*, _ns1__GetLocationInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetLocationInfo(struct soap*, const char *, int, _ns1__GetLocationInfo *const*, const char *);
SOAP_FMAC3 _ns1__GetLocationInfo ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetLocationInfo(struct soap*, const char*, _ns1__GetLocationInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetLocationInfo(struct soap*, _ns1__GetLocationInfo *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetLocationInfo
#define soap_write_PointerTo_ns1__GetLocationInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetLocationInfo(soap, data),0) || soap_put_PointerTo_ns1__GetLocationInfo(soap, data, "ns1:GetLocationInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetLocationInfo ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetLocationInfo(struct soap*, _ns1__GetLocationInfo **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetLocationInfo
#define soap_read_PointerTo_ns1__GetLocationInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetLocationInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__RevokeSuspicionInfoResponse
#define SOAP_TYPE_PointerTo_ns1__RevokeSuspicionInfoResponse (108)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__RevokeSuspicionInfoResponse(struct soap*, _ns1__RevokeSuspicionInfoResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__RevokeSuspicionInfoResponse(struct soap*, const char *, int, _ns1__RevokeSuspicionInfoResponse *const*, const char *);
SOAP_FMAC3 _ns1__RevokeSuspicionInfoResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__RevokeSuspicionInfoResponse(struct soap*, const char*, _ns1__RevokeSuspicionInfoResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__RevokeSuspicionInfoResponse(struct soap*, _ns1__RevokeSuspicionInfoResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__RevokeSuspicionInfoResponse
#define soap_write_PointerTo_ns1__RevokeSuspicionInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__RevokeSuspicionInfoResponse(soap, data),0) || soap_put_PointerTo_ns1__RevokeSuspicionInfoResponse(soap, data, "ns1:RevokeSuspicionInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__RevokeSuspicionInfoResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__RevokeSuspicionInfoResponse(struct soap*, _ns1__RevokeSuspicionInfoResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__RevokeSuspicionInfoResponse
#define soap_read_PointerTo_ns1__RevokeSuspicionInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__RevokeSuspicionInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__RevokeSuspicionInfo
#define SOAP_TYPE_PointerTo_ns1__RevokeSuspicionInfo (107)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__RevokeSuspicionInfo(struct soap*, _ns1__RevokeSuspicionInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__RevokeSuspicionInfo(struct soap*, const char *, int, _ns1__RevokeSuspicionInfo *const*, const char *);
SOAP_FMAC3 _ns1__RevokeSuspicionInfo ** SOAP_FMAC4 soap_in_PointerTo_ns1__RevokeSuspicionInfo(struct soap*, const char*, _ns1__RevokeSuspicionInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__RevokeSuspicionInfo(struct soap*, _ns1__RevokeSuspicionInfo *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__RevokeSuspicionInfo
#define soap_write_PointerTo_ns1__RevokeSuspicionInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__RevokeSuspicionInfo(soap, data),0) || soap_put_PointerTo_ns1__RevokeSuspicionInfo(soap, data, "ns1:RevokeSuspicionInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__RevokeSuspicionInfo ** SOAP_FMAC4 soap_get_PointerTo_ns1__RevokeSuspicionInfo(struct soap*, _ns1__RevokeSuspicionInfo **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__RevokeSuspicionInfo
#define soap_read_PointerTo_ns1__RevokeSuspicionInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__RevokeSuspicionInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__InSuspicionInfoResponse
#define SOAP_TYPE_PointerTo_ns1__InSuspicionInfoResponse (104)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__InSuspicionInfoResponse(struct soap*, _ns1__InSuspicionInfoResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__InSuspicionInfoResponse(struct soap*, const char *, int, _ns1__InSuspicionInfoResponse *const*, const char *);
SOAP_FMAC3 _ns1__InSuspicionInfoResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__InSuspicionInfoResponse(struct soap*, const char*, _ns1__InSuspicionInfoResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__InSuspicionInfoResponse(struct soap*, _ns1__InSuspicionInfoResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__InSuspicionInfoResponse
#define soap_write_PointerTo_ns1__InSuspicionInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__InSuspicionInfoResponse(soap, data),0) || soap_put_PointerTo_ns1__InSuspicionInfoResponse(soap, data, "ns1:InSuspicionInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__InSuspicionInfoResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__InSuspicionInfoResponse(struct soap*, _ns1__InSuspicionInfoResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__InSuspicionInfoResponse
#define soap_read_PointerTo_ns1__InSuspicionInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__InSuspicionInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__InSuspicionInfo
#define SOAP_TYPE_PointerTo_ns1__InSuspicionInfo (103)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__InSuspicionInfo(struct soap*, _ns1__InSuspicionInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__InSuspicionInfo(struct soap*, const char *, int, _ns1__InSuspicionInfo *const*, const char *);
SOAP_FMAC3 _ns1__InSuspicionInfo ** SOAP_FMAC4 soap_in_PointerTo_ns1__InSuspicionInfo(struct soap*, const char*, _ns1__InSuspicionInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__InSuspicionInfo(struct soap*, _ns1__InSuspicionInfo *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__InSuspicionInfo
#define soap_write_PointerTo_ns1__InSuspicionInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__InSuspicionInfo(soap, data),0) || soap_put_PointerTo_ns1__InSuspicionInfo(soap, data, "ns1:InSuspicionInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__InSuspicionInfo ** SOAP_FMAC4 soap_get_PointerTo_ns1__InSuspicionInfo(struct soap*, _ns1__InSuspicionInfo **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__InSuspicionInfo
#define soap_read_PointerTo_ns1__InSuspicionInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__InSuspicionInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__IntExtralistInfoResponse
#define SOAP_TYPE_PointerTo_ns1__IntExtralistInfoResponse (100)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__IntExtralistInfoResponse(struct soap*, _ns1__IntExtralistInfoResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__IntExtralistInfoResponse(struct soap*, const char *, int, _ns1__IntExtralistInfoResponse *const*, const char *);
SOAP_FMAC3 _ns1__IntExtralistInfoResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__IntExtralistInfoResponse(struct soap*, const char*, _ns1__IntExtralistInfoResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__IntExtralistInfoResponse(struct soap*, _ns1__IntExtralistInfoResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__IntExtralistInfoResponse
#define soap_write_PointerTo_ns1__IntExtralistInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__IntExtralistInfoResponse(soap, data),0) || soap_put_PointerTo_ns1__IntExtralistInfoResponse(soap, data, "ns1:IntExtralistInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__IntExtralistInfoResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__IntExtralistInfoResponse(struct soap*, _ns1__IntExtralistInfoResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__IntExtralistInfoResponse
#define soap_read_PointerTo_ns1__IntExtralistInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__IntExtralistInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__IntExtralistInfo
#define SOAP_TYPE_PointerTo_ns1__IntExtralistInfo (99)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__IntExtralistInfo(struct soap*, _ns1__IntExtralistInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__IntExtralistInfo(struct soap*, const char *, int, _ns1__IntExtralistInfo *const*, const char *);
SOAP_FMAC3 _ns1__IntExtralistInfo ** SOAP_FMAC4 soap_in_PointerTo_ns1__IntExtralistInfo(struct soap*, const char*, _ns1__IntExtralistInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__IntExtralistInfo(struct soap*, _ns1__IntExtralistInfo *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__IntExtralistInfo
#define soap_write_PointerTo_ns1__IntExtralistInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__IntExtralistInfo(soap, data),0) || soap_put_PointerTo_ns1__IntExtralistInfo(soap, data, "ns1:IntExtralistInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__IntExtralistInfo ** SOAP_FMAC4 soap_get_PointerTo_ns1__IntExtralistInfo(struct soap*, _ns1__IntExtralistInfo **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__IntExtralistInfo
#define soap_read_PointerTo_ns1__IntExtralistInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__IntExtralistInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__InChecklessInfoResponse
#define SOAP_TYPE_PointerTo_ns1__InChecklessInfoResponse (96)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__InChecklessInfoResponse(struct soap*, _ns1__InChecklessInfoResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__InChecklessInfoResponse(struct soap*, const char *, int, _ns1__InChecklessInfoResponse *const*, const char *);
SOAP_FMAC3 _ns1__InChecklessInfoResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__InChecklessInfoResponse(struct soap*, const char*, _ns1__InChecklessInfoResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__InChecklessInfoResponse(struct soap*, _ns1__InChecklessInfoResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__InChecklessInfoResponse
#define soap_write_PointerTo_ns1__InChecklessInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__InChecklessInfoResponse(soap, data),0) || soap_put_PointerTo_ns1__InChecklessInfoResponse(soap, data, "ns1:InChecklessInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__InChecklessInfoResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__InChecklessInfoResponse(struct soap*, _ns1__InChecklessInfoResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__InChecklessInfoResponse
#define soap_read_PointerTo_ns1__InChecklessInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__InChecklessInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__InChecklessInfo
#define SOAP_TYPE_PointerTo_ns1__InChecklessInfo (95)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__InChecklessInfo(struct soap*, _ns1__InChecklessInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__InChecklessInfo(struct soap*, const char *, int, _ns1__InChecklessInfo *const*, const char *);
SOAP_FMAC3 _ns1__InChecklessInfo ** SOAP_FMAC4 soap_in_PointerTo_ns1__InChecklessInfo(struct soap*, const char*, _ns1__InChecklessInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__InChecklessInfo(struct soap*, _ns1__InChecklessInfo *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__InChecklessInfo
#define soap_write_PointerTo_ns1__InChecklessInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__InChecklessInfo(soap, data),0) || soap_put_PointerTo_ns1__InChecklessInfo(soap, data, "ns1:InChecklessInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__InChecklessInfo ** SOAP_FMAC4 soap_get_PointerTo_ns1__InChecklessInfo(struct soap*, _ns1__InChecklessInfo **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__InChecklessInfo
#define soap_read_PointerTo_ns1__InChecklessInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__InChecklessInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__InBlacklistInfoResponse
#define SOAP_TYPE_PointerTo_ns1__InBlacklistInfoResponse (92)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__InBlacklistInfoResponse(struct soap*, _ns1__InBlacklistInfoResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__InBlacklistInfoResponse(struct soap*, const char *, int, _ns1__InBlacklistInfoResponse *const*, const char *);
SOAP_FMAC3 _ns1__InBlacklistInfoResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__InBlacklistInfoResponse(struct soap*, const char*, _ns1__InBlacklistInfoResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__InBlacklistInfoResponse(struct soap*, _ns1__InBlacklistInfoResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__InBlacklistInfoResponse
#define soap_write_PointerTo_ns1__InBlacklistInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__InBlacklistInfoResponse(soap, data),0) || soap_put_PointerTo_ns1__InBlacklistInfoResponse(soap, data, "ns1:InBlacklistInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__InBlacklistInfoResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__InBlacklistInfoResponse(struct soap*, _ns1__InBlacklistInfoResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__InBlacklistInfoResponse
#define soap_read_PointerTo_ns1__InBlacklistInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__InBlacklistInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__InBlacklistInfo
#define SOAP_TYPE_PointerTo_ns1__InBlacklistInfo (91)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__InBlacklistInfo(struct soap*, _ns1__InBlacklistInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__InBlacklistInfo(struct soap*, const char *, int, _ns1__InBlacklistInfo *const*, const char *);
SOAP_FMAC3 _ns1__InBlacklistInfo ** SOAP_FMAC4 soap_in_PointerTo_ns1__InBlacklistInfo(struct soap*, const char*, _ns1__InBlacklistInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__InBlacklistInfo(struct soap*, _ns1__InBlacklistInfo *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__InBlacklistInfo
#define soap_write_PointerTo_ns1__InBlacklistInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__InBlacklistInfo(soap, data),0) || soap_put_PointerTo_ns1__InBlacklistInfo(soap, data, "ns1:InBlacklistInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__InBlacklistInfo ** SOAP_FMAC4 soap_get_PointerTo_ns1__InBlacklistInfo(struct soap*, _ns1__InBlacklistInfo **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__InBlacklistInfo
#define soap_read_PointerTo_ns1__InBlacklistInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__InBlacklistInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__InCheckedPeccancyInfoResponse
#define SOAP_TYPE_PointerTo_ns1__InCheckedPeccancyInfoResponse (88)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__InCheckedPeccancyInfoResponse(struct soap*, _ns1__InCheckedPeccancyInfoResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__InCheckedPeccancyInfoResponse(struct soap*, const char *, int, _ns1__InCheckedPeccancyInfoResponse *const*, const char *);
SOAP_FMAC3 _ns1__InCheckedPeccancyInfoResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__InCheckedPeccancyInfoResponse(struct soap*, const char*, _ns1__InCheckedPeccancyInfoResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__InCheckedPeccancyInfoResponse(struct soap*, _ns1__InCheckedPeccancyInfoResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__InCheckedPeccancyInfoResponse
#define soap_write_PointerTo_ns1__InCheckedPeccancyInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__InCheckedPeccancyInfoResponse(soap, data),0) || soap_put_PointerTo_ns1__InCheckedPeccancyInfoResponse(soap, data, "ns1:InCheckedPeccancyInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__InCheckedPeccancyInfoResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__InCheckedPeccancyInfoResponse(struct soap*, _ns1__InCheckedPeccancyInfoResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__InCheckedPeccancyInfoResponse
#define soap_read_PointerTo_ns1__InCheckedPeccancyInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__InCheckedPeccancyInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__InCheckedPeccancyInfo
#define SOAP_TYPE_PointerTo_ns1__InCheckedPeccancyInfo (87)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__InCheckedPeccancyInfo(struct soap*, _ns1__InCheckedPeccancyInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__InCheckedPeccancyInfo(struct soap*, const char *, int, _ns1__InCheckedPeccancyInfo *const*, const char *);
SOAP_FMAC3 _ns1__InCheckedPeccancyInfo ** SOAP_FMAC4 soap_in_PointerTo_ns1__InCheckedPeccancyInfo(struct soap*, const char*, _ns1__InCheckedPeccancyInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__InCheckedPeccancyInfo(struct soap*, _ns1__InCheckedPeccancyInfo *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__InCheckedPeccancyInfo
#define soap_write_PointerTo_ns1__InCheckedPeccancyInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__InCheckedPeccancyInfo(soap, data),0) || soap_put_PointerTo_ns1__InCheckedPeccancyInfo(soap, data, "ns1:InCheckedPeccancyInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__InCheckedPeccancyInfo ** SOAP_FMAC4 soap_get_PointerTo_ns1__InCheckedPeccancyInfo(struct soap*, _ns1__InCheckedPeccancyInfo **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__InCheckedPeccancyInfo
#define soap_read_PointerTo_ns1__InCheckedPeccancyInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__InCheckedPeccancyInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__InPeccancyInfoResponse
#define SOAP_TYPE_PointerTo_ns1__InPeccancyInfoResponse (84)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__InPeccancyInfoResponse(struct soap*, _ns1__InPeccancyInfoResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__InPeccancyInfoResponse(struct soap*, const char *, int, _ns1__InPeccancyInfoResponse *const*, const char *);
SOAP_FMAC3 _ns1__InPeccancyInfoResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__InPeccancyInfoResponse(struct soap*, const char*, _ns1__InPeccancyInfoResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__InPeccancyInfoResponse(struct soap*, _ns1__InPeccancyInfoResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__InPeccancyInfoResponse
#define soap_write_PointerTo_ns1__InPeccancyInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__InPeccancyInfoResponse(soap, data),0) || soap_put_PointerTo_ns1__InPeccancyInfoResponse(soap, data, "ns1:InPeccancyInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__InPeccancyInfoResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__InPeccancyInfoResponse(struct soap*, _ns1__InPeccancyInfoResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__InPeccancyInfoResponse
#define soap_read_PointerTo_ns1__InPeccancyInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__InPeccancyInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__InPeccancyInfo
#define SOAP_TYPE_PointerTo_ns1__InPeccancyInfo (83)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__InPeccancyInfo(struct soap*, _ns1__InPeccancyInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__InPeccancyInfo(struct soap*, const char *, int, _ns1__InPeccancyInfo *const*, const char *);
SOAP_FMAC3 _ns1__InPeccancyInfo ** SOAP_FMAC4 soap_in_PointerTo_ns1__InPeccancyInfo(struct soap*, const char*, _ns1__InPeccancyInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__InPeccancyInfo(struct soap*, _ns1__InPeccancyInfo *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__InPeccancyInfo
#define soap_write_PointerTo_ns1__InPeccancyInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__InPeccancyInfo(soap, data),0) || soap_put_PointerTo_ns1__InPeccancyInfo(soap, data, "ns1:InPeccancyInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__InPeccancyInfo ** SOAP_FMAC4 soap_get_PointerTo_ns1__InPeccancyInfo(struct soap*, _ns1__InPeccancyInfo **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__InPeccancyInfo
#define soap_read_PointerTo_ns1__InPeccancyInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__InPeccancyInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__InPassCarInfoResponse
#define SOAP_TYPE_PointerTo_ns1__InPassCarInfoResponse (80)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__InPassCarInfoResponse(struct soap*, _ns1__InPassCarInfoResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__InPassCarInfoResponse(struct soap*, const char *, int, _ns1__InPassCarInfoResponse *const*, const char *);
SOAP_FMAC3 _ns1__InPassCarInfoResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__InPassCarInfoResponse(struct soap*, const char*, _ns1__InPassCarInfoResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__InPassCarInfoResponse(struct soap*, _ns1__InPassCarInfoResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__InPassCarInfoResponse
#define soap_write_PointerTo_ns1__InPassCarInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__InPassCarInfoResponse(soap, data),0) || soap_put_PointerTo_ns1__InPassCarInfoResponse(soap, data, "ns1:InPassCarInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__InPassCarInfoResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__InPassCarInfoResponse(struct soap*, _ns1__InPassCarInfoResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__InPassCarInfoResponse
#define soap_read_PointerTo_ns1__InPassCarInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__InPassCarInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__InPassCarInfo
#define SOAP_TYPE_PointerTo_ns1__InPassCarInfo (79)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__InPassCarInfo(struct soap*, _ns1__InPassCarInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__InPassCarInfo(struct soap*, const char *, int, _ns1__InPassCarInfo *const*, const char *);
SOAP_FMAC3 _ns1__InPassCarInfo ** SOAP_FMAC4 soap_in_PointerTo_ns1__InPassCarInfo(struct soap*, const char*, _ns1__InPassCarInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__InPassCarInfo(struct soap*, _ns1__InPassCarInfo *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__InPassCarInfo
#define soap_write_PointerTo_ns1__InPassCarInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__InPassCarInfo(soap, data),0) || soap_put_PointerTo_ns1__InPassCarInfo(soap, data, "ns1:InPassCarInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__InPassCarInfo ** SOAP_FMAC4 soap_get_PointerTo_ns1__InPassCarInfo(struct soap*, _ns1__InPassCarInfo **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__InPassCarInfo
#define soap_read_PointerTo_ns1__InPassCarInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__InPassCarInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__CarPlateRecogResponse
#define SOAP_TYPE_PointerTo_ns1__CarPlateRecogResponse (76)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CarPlateRecogResponse(struct soap*, _ns1__CarPlateRecogResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CarPlateRecogResponse(struct soap*, const char *, int, _ns1__CarPlateRecogResponse *const*, const char *);
SOAP_FMAC3 _ns1__CarPlateRecogResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__CarPlateRecogResponse(struct soap*, const char*, _ns1__CarPlateRecogResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CarPlateRecogResponse(struct soap*, _ns1__CarPlateRecogResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__CarPlateRecogResponse
#define soap_write_PointerTo_ns1__CarPlateRecogResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__CarPlateRecogResponse(soap, data),0) || soap_put_PointerTo_ns1__CarPlateRecogResponse(soap, data, "ns1:CarPlateRecogResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__CarPlateRecogResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__CarPlateRecogResponse(struct soap*, _ns1__CarPlateRecogResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__CarPlateRecogResponse
#define soap_read_PointerTo_ns1__CarPlateRecogResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__CarPlateRecogResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__CarPlateRecog
#define SOAP_TYPE_PointerTo_ns1__CarPlateRecog (75)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CarPlateRecog(struct soap*, _ns1__CarPlateRecog *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CarPlateRecog(struct soap*, const char *, int, _ns1__CarPlateRecog *const*, const char *);
SOAP_FMAC3 _ns1__CarPlateRecog ** SOAP_FMAC4 soap_in_PointerTo_ns1__CarPlateRecog(struct soap*, const char*, _ns1__CarPlateRecog **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CarPlateRecog(struct soap*, _ns1__CarPlateRecog *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__CarPlateRecog
#define soap_write_PointerTo_ns1__CarPlateRecog(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__CarPlateRecog(soap, data),0) || soap_put_PointerTo_ns1__CarPlateRecog(soap, data, "ns1:CarPlateRecog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__CarPlateRecog ** SOAP_FMAC4 soap_get_PointerTo_ns1__CarPlateRecog(struct soap*, _ns1__CarPlateRecog **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__CarPlateRecog
#define soap_read_PointerTo_ns1__CarPlateRecog(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__CarPlateRecog(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetXMlFormatResponse
#define SOAP_TYPE_PointerTo_ns1__GetXMlFormatResponse (72)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetXMlFormatResponse(struct soap*, _ns1__GetXMlFormatResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetXMlFormatResponse(struct soap*, const char *, int, _ns1__GetXMlFormatResponse *const*, const char *);
SOAP_FMAC3 _ns1__GetXMlFormatResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetXMlFormatResponse(struct soap*, const char*, _ns1__GetXMlFormatResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetXMlFormatResponse(struct soap*, _ns1__GetXMlFormatResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetXMlFormatResponse
#define soap_write_PointerTo_ns1__GetXMlFormatResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetXMlFormatResponse(soap, data),0) || soap_put_PointerTo_ns1__GetXMlFormatResponse(soap, data, "ns1:GetXMlFormatResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetXMlFormatResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetXMlFormatResponse(struct soap*, _ns1__GetXMlFormatResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetXMlFormatResponse
#define soap_read_PointerTo_ns1__GetXMlFormatResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetXMlFormatResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetXMlFormat
#define SOAP_TYPE_PointerTo_ns1__GetXMlFormat (71)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetXMlFormat(struct soap*, _ns1__GetXMlFormat *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetXMlFormat(struct soap*, const char *, int, _ns1__GetXMlFormat *const*, const char *);
SOAP_FMAC3 _ns1__GetXMlFormat ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetXMlFormat(struct soap*, const char*, _ns1__GetXMlFormat **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetXMlFormat(struct soap*, _ns1__GetXMlFormat *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetXMlFormat
#define soap_write_PointerTo_ns1__GetXMlFormat(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetXMlFormat(soap, data),0) || soap_put_PointerTo_ns1__GetXMlFormat(soap, data, "ns1:GetXMlFormat", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetXMlFormat ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetXMlFormat(struct soap*, _ns1__GetXMlFormat **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetXMlFormat
#define soap_read_PointerTo_ns1__GetXMlFormat(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetXMlFormat(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetCurrentVersionResponse
#define SOAP_TYPE_PointerTo_ns1__GetCurrentVersionResponse (68)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetCurrentVersionResponse(struct soap*, _ns1__GetCurrentVersionResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetCurrentVersionResponse(struct soap*, const char *, int, _ns1__GetCurrentVersionResponse *const*, const char *);
SOAP_FMAC3 _ns1__GetCurrentVersionResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetCurrentVersionResponse(struct soap*, const char*, _ns1__GetCurrentVersionResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetCurrentVersionResponse(struct soap*, _ns1__GetCurrentVersionResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetCurrentVersionResponse
#define soap_write_PointerTo_ns1__GetCurrentVersionResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetCurrentVersionResponse(soap, data),0) || soap_put_PointerTo_ns1__GetCurrentVersionResponse(soap, data, "ns1:GetCurrentVersionResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetCurrentVersionResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetCurrentVersionResponse(struct soap*, _ns1__GetCurrentVersionResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetCurrentVersionResponse
#define soap_read_PointerTo_ns1__GetCurrentVersionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetCurrentVersionResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetCurrentVersion
#define SOAP_TYPE_PointerTo_ns1__GetCurrentVersion (67)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetCurrentVersion(struct soap*, _ns1__GetCurrentVersion *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetCurrentVersion(struct soap*, const char *, int, _ns1__GetCurrentVersion *const*, const char *);
SOAP_FMAC3 _ns1__GetCurrentVersion ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetCurrentVersion(struct soap*, const char*, _ns1__GetCurrentVersion **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetCurrentVersion(struct soap*, _ns1__GetCurrentVersion *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetCurrentVersion
#define soap_write_PointerTo_ns1__GetCurrentVersion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetCurrentVersion(soap, data),0) || soap_put_PointerTo_ns1__GetCurrentVersion(soap, data, "ns1:GetCurrentVersion", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetCurrentVersion ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetCurrentVersion(struct soap*, _ns1__GetCurrentVersion **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetCurrentVersion
#define soap_read_PointerTo_ns1__GetCurrentVersion(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetCurrentVersion(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__WebserviceTestResponse
#define SOAP_TYPE_PointerTo_ns1__WebserviceTestResponse (64)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__WebserviceTestResponse(struct soap*, _ns1__WebserviceTestResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__WebserviceTestResponse(struct soap*, const char *, int, _ns1__WebserviceTestResponse *const*, const char *);
SOAP_FMAC3 _ns1__WebserviceTestResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__WebserviceTestResponse(struct soap*, const char*, _ns1__WebserviceTestResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__WebserviceTestResponse(struct soap*, _ns1__WebserviceTestResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__WebserviceTestResponse
#define soap_write_PointerTo_ns1__WebserviceTestResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__WebserviceTestResponse(soap, data),0) || soap_put_PointerTo_ns1__WebserviceTestResponse(soap, data, "ns1:WebserviceTestResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__WebserviceTestResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__WebserviceTestResponse(struct soap*, _ns1__WebserviceTestResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__WebserviceTestResponse
#define soap_read_PointerTo_ns1__WebserviceTestResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__WebserviceTestResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__WebserviceTest
#define SOAP_TYPE_PointerTo_ns1__WebserviceTest (63)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__WebserviceTest(struct soap*, _ns1__WebserviceTest *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__WebserviceTest(struct soap*, const char *, int, _ns1__WebserviceTest *const*, const char *);
SOAP_FMAC3 _ns1__WebserviceTest ** SOAP_FMAC4 soap_in_PointerTo_ns1__WebserviceTest(struct soap*, const char*, _ns1__WebserviceTest **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__WebserviceTest(struct soap*, _ns1__WebserviceTest *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__WebserviceTest
#define soap_write_PointerTo_ns1__WebserviceTest(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__WebserviceTest(soap, data),0) || soap_put_PointerTo_ns1__WebserviceTest(soap, data, "ns1:WebserviceTest", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__WebserviceTest ** SOAP_FMAC4 soap_get_PointerTo_ns1__WebserviceTest(struct soap*, _ns1__WebserviceTest **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__WebserviceTest
#define soap_read_PointerTo_ns1__WebserviceTest(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__WebserviceTest(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__QName(soap, data),0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_string(soap, data),0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

/* End of soapH.h */
