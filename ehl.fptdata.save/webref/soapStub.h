/* soapStub.h
   Generated by gSOAP 2.8.17r from OpenInterface.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapStub_H
#define soapStub_H
#define SOAP_NAMESPACE_OF_ns1	"http://tempuri.org/"
#include "stdsoap2.h"
#if GSOAP_VERSION != 20817
# error "GSOAP VERSION MISMATCH IN GENERATED CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE__ns1__WebserviceTest
#define SOAP_TYPE__ns1__WebserviceTest (7)
/* ns1:WebserviceTest */
class SOAP_CMAC _ns1__WebserviceTest
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 7; } /* = unique type id SOAP_TYPE__ns1__WebserviceTest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__WebserviceTest() { _ns1__WebserviceTest::soap_default(NULL); }
	virtual ~_ns1__WebserviceTest() { }
};
#endif

#ifndef SOAP_TYPE__ns1__WebserviceTestResponse
#define SOAP_TYPE__ns1__WebserviceTestResponse (8)
/* ns1:WebserviceTestResponse */
class SOAP_CMAC _ns1__WebserviceTestResponse
{
public:
	char *WebserviceTestResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 8; } /* = unique type id SOAP_TYPE__ns1__WebserviceTestResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__WebserviceTestResponse() { _ns1__WebserviceTestResponse::soap_default(NULL); }
	virtual ~_ns1__WebserviceTestResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetCurrentVersion
#define SOAP_TYPE__ns1__GetCurrentVersion (9)
/* ns1:GetCurrentVersion */
class SOAP_CMAC _ns1__GetCurrentVersion
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 9; } /* = unique type id SOAP_TYPE__ns1__GetCurrentVersion */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetCurrentVersion() { _ns1__GetCurrentVersion::soap_default(NULL); }
	virtual ~_ns1__GetCurrentVersion() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetCurrentVersionResponse
#define SOAP_TYPE__ns1__GetCurrentVersionResponse (10)
/* ns1:GetCurrentVersionResponse */
class SOAP_CMAC _ns1__GetCurrentVersionResponse
{
public:
	char *GetCurrentVersionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 10; } /* = unique type id SOAP_TYPE__ns1__GetCurrentVersionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetCurrentVersionResponse() { _ns1__GetCurrentVersionResponse::soap_default(NULL); }
	virtual ~_ns1__GetCurrentVersionResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetXMlFormat
#define SOAP_TYPE__ns1__GetXMlFormat (11)
/* ns1:GetXMlFormat */
class SOAP_CMAC _ns1__GetXMlFormat
{
public:
	char *systemType;	/* optional element of type xsd:string */
	char *iVersion;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 11; } /* = unique type id SOAP_TYPE__ns1__GetXMlFormat */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetXMlFormat() { _ns1__GetXMlFormat::soap_default(NULL); }
	virtual ~_ns1__GetXMlFormat() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetXMlFormatResponse
#define SOAP_TYPE__ns1__GetXMlFormatResponse (12)
/* ns1:GetXMlFormatResponse */
class SOAP_CMAC _ns1__GetXMlFormatResponse
{
public:
	char *GetXMlFormatResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 12; } /* = unique type id SOAP_TYPE__ns1__GetXMlFormatResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetXMlFormatResponse() { _ns1__GetXMlFormatResponse::soap_default(NULL); }
	virtual ~_ns1__GetXMlFormatResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__CarPlateRecog
#define SOAP_TYPE__ns1__CarPlateRecog (13)
/* ns1:CarPlateRecog */
class SOAP_CMAC _ns1__CarPlateRecog
{
public:
	char *xmlBody;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 13; } /* = unique type id SOAP_TYPE__ns1__CarPlateRecog */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__CarPlateRecog() { _ns1__CarPlateRecog::soap_default(NULL); }
	virtual ~_ns1__CarPlateRecog() { }
};
#endif

#ifndef SOAP_TYPE__ns1__CarPlateRecogResponse
#define SOAP_TYPE__ns1__CarPlateRecogResponse (14)
/* ns1:CarPlateRecogResponse */
class SOAP_CMAC _ns1__CarPlateRecogResponse
{
public:
	char *CarPlateRecogResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 14; } /* = unique type id SOAP_TYPE__ns1__CarPlateRecogResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__CarPlateRecogResponse() { _ns1__CarPlateRecogResponse::soap_default(NULL); }
	virtual ~_ns1__CarPlateRecogResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__InPassCarInfo
#define SOAP_TYPE__ns1__InPassCarInfo (15)
/* ns1:InPassCarInfo */
class SOAP_CMAC _ns1__InPassCarInfo
{
public:
	char *xmlBody;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 15; } /* = unique type id SOAP_TYPE__ns1__InPassCarInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__InPassCarInfo() { _ns1__InPassCarInfo::soap_default(NULL); }
	virtual ~_ns1__InPassCarInfo() { }
};
#endif

#ifndef SOAP_TYPE__ns1__InPassCarInfoResponse
#define SOAP_TYPE__ns1__InPassCarInfoResponse (16)
/* ns1:InPassCarInfoResponse */
class SOAP_CMAC _ns1__InPassCarInfoResponse
{
public:
	char *InPassCarInfoResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 16; } /* = unique type id SOAP_TYPE__ns1__InPassCarInfoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__InPassCarInfoResponse() { _ns1__InPassCarInfoResponse::soap_default(NULL); }
	virtual ~_ns1__InPassCarInfoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__InPeccancyInfo
#define SOAP_TYPE__ns1__InPeccancyInfo (17)
/* ns1:InPeccancyInfo */
class SOAP_CMAC _ns1__InPeccancyInfo
{
public:
	char *xmlBody;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 17; } /* = unique type id SOAP_TYPE__ns1__InPeccancyInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__InPeccancyInfo() { _ns1__InPeccancyInfo::soap_default(NULL); }
	virtual ~_ns1__InPeccancyInfo() { }
};
#endif

#ifndef SOAP_TYPE__ns1__InPeccancyInfoResponse
#define SOAP_TYPE__ns1__InPeccancyInfoResponse (18)
/* ns1:InPeccancyInfoResponse */
class SOAP_CMAC _ns1__InPeccancyInfoResponse
{
public:
	char *InPeccancyInfoResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 18; } /* = unique type id SOAP_TYPE__ns1__InPeccancyInfoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__InPeccancyInfoResponse() { _ns1__InPeccancyInfoResponse::soap_default(NULL); }
	virtual ~_ns1__InPeccancyInfoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__InCheckedPeccancyInfo
#define SOAP_TYPE__ns1__InCheckedPeccancyInfo (19)
/* ns1:InCheckedPeccancyInfo */
class SOAP_CMAC _ns1__InCheckedPeccancyInfo
{
public:
	char *xmlBody;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 19; } /* = unique type id SOAP_TYPE__ns1__InCheckedPeccancyInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__InCheckedPeccancyInfo() { _ns1__InCheckedPeccancyInfo::soap_default(NULL); }
	virtual ~_ns1__InCheckedPeccancyInfo() { }
};
#endif

#ifndef SOAP_TYPE__ns1__InCheckedPeccancyInfoResponse
#define SOAP_TYPE__ns1__InCheckedPeccancyInfoResponse (20)
/* ns1:InCheckedPeccancyInfoResponse */
class SOAP_CMAC _ns1__InCheckedPeccancyInfoResponse
{
public:
	char *InCheckedPeccancyInfoResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 20; } /* = unique type id SOAP_TYPE__ns1__InCheckedPeccancyInfoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__InCheckedPeccancyInfoResponse() { _ns1__InCheckedPeccancyInfoResponse::soap_default(NULL); }
	virtual ~_ns1__InCheckedPeccancyInfoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__InBlacklistInfo
#define SOAP_TYPE__ns1__InBlacklistInfo (21)
/* ns1:InBlacklistInfo */
class SOAP_CMAC _ns1__InBlacklistInfo
{
public:
	char *xmlBody;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 21; } /* = unique type id SOAP_TYPE__ns1__InBlacklistInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__InBlacklistInfo() { _ns1__InBlacklistInfo::soap_default(NULL); }
	virtual ~_ns1__InBlacklistInfo() { }
};
#endif

#ifndef SOAP_TYPE__ns1__InBlacklistInfoResponse
#define SOAP_TYPE__ns1__InBlacklistInfoResponse (22)
/* ns1:InBlacklistInfoResponse */
class SOAP_CMAC _ns1__InBlacklistInfoResponse
{
public:
	char *InBlacklistInfoResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 22; } /* = unique type id SOAP_TYPE__ns1__InBlacklistInfoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__InBlacklistInfoResponse() { _ns1__InBlacklistInfoResponse::soap_default(NULL); }
	virtual ~_ns1__InBlacklistInfoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__InChecklessInfo
#define SOAP_TYPE__ns1__InChecklessInfo (23)
/* ns1:InChecklessInfo */
class SOAP_CMAC _ns1__InChecklessInfo
{
public:
	char *xmlBody;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 23; } /* = unique type id SOAP_TYPE__ns1__InChecklessInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__InChecklessInfo() { _ns1__InChecklessInfo::soap_default(NULL); }
	virtual ~_ns1__InChecklessInfo() { }
};
#endif

#ifndef SOAP_TYPE__ns1__InChecklessInfoResponse
#define SOAP_TYPE__ns1__InChecklessInfoResponse (24)
/* ns1:InChecklessInfoResponse */
class SOAP_CMAC _ns1__InChecklessInfoResponse
{
public:
	char *InChecklessInfoResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 24; } /* = unique type id SOAP_TYPE__ns1__InChecklessInfoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__InChecklessInfoResponse() { _ns1__InChecklessInfoResponse::soap_default(NULL); }
	virtual ~_ns1__InChecklessInfoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__IntExtralistInfo
#define SOAP_TYPE__ns1__IntExtralistInfo (25)
/* ns1:IntExtralistInfo */
class SOAP_CMAC _ns1__IntExtralistInfo
{
public:
	char *xmlBody;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 25; } /* = unique type id SOAP_TYPE__ns1__IntExtralistInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__IntExtralistInfo() { _ns1__IntExtralistInfo::soap_default(NULL); }
	virtual ~_ns1__IntExtralistInfo() { }
};
#endif

#ifndef SOAP_TYPE__ns1__IntExtralistInfoResponse
#define SOAP_TYPE__ns1__IntExtralistInfoResponse (26)
/* ns1:IntExtralistInfoResponse */
class SOAP_CMAC _ns1__IntExtralistInfoResponse
{
public:
	char *IntExtralistInfoResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 26; } /* = unique type id SOAP_TYPE__ns1__IntExtralistInfoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__IntExtralistInfoResponse() { _ns1__IntExtralistInfoResponse::soap_default(NULL); }
	virtual ~_ns1__IntExtralistInfoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__InSuspicionInfo
#define SOAP_TYPE__ns1__InSuspicionInfo (27)
/* ns1:InSuspicionInfo */
class SOAP_CMAC _ns1__InSuspicionInfo
{
public:
	char *xmlBody;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 27; } /* = unique type id SOAP_TYPE__ns1__InSuspicionInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__InSuspicionInfo() { _ns1__InSuspicionInfo::soap_default(NULL); }
	virtual ~_ns1__InSuspicionInfo() { }
};
#endif

#ifndef SOAP_TYPE__ns1__InSuspicionInfoResponse
#define SOAP_TYPE__ns1__InSuspicionInfoResponse (28)
/* ns1:InSuspicionInfoResponse */
class SOAP_CMAC _ns1__InSuspicionInfoResponse
{
public:
	char *InSuspicionInfoResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 28; } /* = unique type id SOAP_TYPE__ns1__InSuspicionInfoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__InSuspicionInfoResponse() { _ns1__InSuspicionInfoResponse::soap_default(NULL); }
	virtual ~_ns1__InSuspicionInfoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__RevokeSuspicionInfo
#define SOAP_TYPE__ns1__RevokeSuspicionInfo (29)
/* ns1:RevokeSuspicionInfo */
class SOAP_CMAC _ns1__RevokeSuspicionInfo
{
public:
	char *xmlBody;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 29; } /* = unique type id SOAP_TYPE__ns1__RevokeSuspicionInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__RevokeSuspicionInfo() { _ns1__RevokeSuspicionInfo::soap_default(NULL); }
	virtual ~_ns1__RevokeSuspicionInfo() { }
};
#endif

#ifndef SOAP_TYPE__ns1__RevokeSuspicionInfoResponse
#define SOAP_TYPE__ns1__RevokeSuspicionInfoResponse (30)
/* ns1:RevokeSuspicionInfoResponse */
class SOAP_CMAC _ns1__RevokeSuspicionInfoResponse
{
public:
	char *RevokeSuspicionInfoResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 30; } /* = unique type id SOAP_TYPE__ns1__RevokeSuspicionInfoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__RevokeSuspicionInfoResponse() { _ns1__RevokeSuspicionInfoResponse::soap_default(NULL); }
	virtual ~_ns1__RevokeSuspicionInfoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetLocationInfo
#define SOAP_TYPE__ns1__GetLocationInfo (31)
/* ns1:GetLocationInfo */
class SOAP_CMAC _ns1__GetLocationInfo
{
public:
	char *ddbh;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 31; } /* = unique type id SOAP_TYPE__ns1__GetLocationInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetLocationInfo() { _ns1__GetLocationInfo::soap_default(NULL); }
	virtual ~_ns1__GetLocationInfo() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetLocationInfoResponse
#define SOAP_TYPE__ns1__GetLocationInfoResponse (32)
/* ns1:GetLocationInfoResponse */
class SOAP_CMAC _ns1__GetLocationInfoResponse
{
public:
	char *GetLocationInfoResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 32; } /* = unique type id SOAP_TYPE__ns1__GetLocationInfoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetLocationInfoResponse() { _ns1__GetLocationInfoResponse::soap_default(NULL); }
	virtual ~_ns1__GetLocationInfoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetPassCarInfo
#define SOAP_TYPE__ns1__GetPassCarInfo (33)
/* ns1:GetPassCarInfo */
class SOAP_CMAC _ns1__GetPassCarInfo
{
public:
	char *xmlBody;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 33; } /* = unique type id SOAP_TYPE__ns1__GetPassCarInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetPassCarInfo() { _ns1__GetPassCarInfo::soap_default(NULL); }
	virtual ~_ns1__GetPassCarInfo() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetPassCarInfoResponse
#define SOAP_TYPE__ns1__GetPassCarInfoResponse (34)
/* ns1:GetPassCarInfoResponse */
class SOAP_CMAC _ns1__GetPassCarInfoResponse
{
public:
	char *GetPassCarInfoResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 34; } /* = unique type id SOAP_TYPE__ns1__GetPassCarInfoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetPassCarInfoResponse() { _ns1__GetPassCarInfoResponse::soap_default(NULL); }
	virtual ~_ns1__GetPassCarInfoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetPeccancyInfo
#define SOAP_TYPE__ns1__GetPeccancyInfo (35)
/* ns1:GetPeccancyInfo */
class SOAP_CMAC _ns1__GetPeccancyInfo
{
public:
	char *xmlBody;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 35; } /* = unique type id SOAP_TYPE__ns1__GetPeccancyInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetPeccancyInfo() { _ns1__GetPeccancyInfo::soap_default(NULL); }
	virtual ~_ns1__GetPeccancyInfo() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetPeccancyInfoResponse
#define SOAP_TYPE__ns1__GetPeccancyInfoResponse (36)
/* ns1:GetPeccancyInfoResponse */
class SOAP_CMAC _ns1__GetPeccancyInfoResponse
{
public:
	char *GetPeccancyInfoResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 36; } /* = unique type id SOAP_TYPE__ns1__GetPeccancyInfoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetPeccancyInfoResponse() { _ns1__GetPeccancyInfoResponse::soap_default(NULL); }
	virtual ~_ns1__GetPeccancyInfoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetPeccancyNoCheckInfo
#define SOAP_TYPE__ns1__GetPeccancyNoCheckInfo (37)
/* ns1:GetPeccancyNoCheckInfo */
class SOAP_CMAC _ns1__GetPeccancyNoCheckInfo
{
public:
	char *xmlBody;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 37; } /* = unique type id SOAP_TYPE__ns1__GetPeccancyNoCheckInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetPeccancyNoCheckInfo() { _ns1__GetPeccancyNoCheckInfo::soap_default(NULL); }
	virtual ~_ns1__GetPeccancyNoCheckInfo() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetPeccancyNoCheckInfoResponse
#define SOAP_TYPE__ns1__GetPeccancyNoCheckInfoResponse (38)
/* ns1:GetPeccancyNoCheckInfoResponse */
class SOAP_CMAC _ns1__GetPeccancyNoCheckInfoResponse
{
public:
	char *GetPeccancyNoCheckInfoResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 38; } /* = unique type id SOAP_TYPE__ns1__GetPeccancyNoCheckInfoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetPeccancyNoCheckInfoResponse() { _ns1__GetPeccancyNoCheckInfoResponse::soap_default(NULL); }
	virtual ~_ns1__GetPeccancyNoCheckInfoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__UpdatePeccancyInfo
#define SOAP_TYPE__ns1__UpdatePeccancyInfo (39)
/* ns1:UpdatePeccancyInfo */
class SOAP_CMAC _ns1__UpdatePeccancyInfo
{
public:
	char *xmlBody;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 39; } /* = unique type id SOAP_TYPE__ns1__UpdatePeccancyInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__UpdatePeccancyInfo() { _ns1__UpdatePeccancyInfo::soap_default(NULL); }
	virtual ~_ns1__UpdatePeccancyInfo() { }
};
#endif

#ifndef SOAP_TYPE__ns1__UpdatePeccancyInfoResponse
#define SOAP_TYPE__ns1__UpdatePeccancyInfoResponse (40)
/* ns1:UpdatePeccancyInfoResponse */
class SOAP_CMAC _ns1__UpdatePeccancyInfoResponse
{
public:
	char *UpdatePeccancyInfoResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 40; } /* = unique type id SOAP_TYPE__ns1__UpdatePeccancyInfoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__UpdatePeccancyInfoResponse() { _ns1__UpdatePeccancyInfoResponse::soap_default(NULL); }
	virtual ~_ns1__UpdatePeccancyInfoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetVioPeccancyNoCheckInfo
#define SOAP_TYPE__ns1__GetVioPeccancyNoCheckInfo (41)
/* ns1:GetVioPeccancyNoCheckInfo */
class SOAP_CMAC _ns1__GetVioPeccancyNoCheckInfo
{
public:
	char *xmlBody;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 41; } /* = unique type id SOAP_TYPE__ns1__GetVioPeccancyNoCheckInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetVioPeccancyNoCheckInfo() { _ns1__GetVioPeccancyNoCheckInfo::soap_default(NULL); }
	virtual ~_ns1__GetVioPeccancyNoCheckInfo() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetVioPeccancyNoCheckInfoResponse
#define SOAP_TYPE__ns1__GetVioPeccancyNoCheckInfoResponse (42)
/* ns1:GetVioPeccancyNoCheckInfoResponse */
class SOAP_CMAC _ns1__GetVioPeccancyNoCheckInfoResponse
{
public:
	char *GetVioPeccancyNoCheckInfoResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 42; } /* = unique type id SOAP_TYPE__ns1__GetVioPeccancyNoCheckInfoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetVioPeccancyNoCheckInfoResponse() { _ns1__GetVioPeccancyNoCheckInfoResponse::soap_default(NULL); }
	virtual ~_ns1__GetVioPeccancyNoCheckInfoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__UpdateVioPeccancyInfo
#define SOAP_TYPE__ns1__UpdateVioPeccancyInfo (43)
/* ns1:UpdateVioPeccancyInfo */
class SOAP_CMAC _ns1__UpdateVioPeccancyInfo
{
public:
	char *xmlBody;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 43; } /* = unique type id SOAP_TYPE__ns1__UpdateVioPeccancyInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__UpdateVioPeccancyInfo() { _ns1__UpdateVioPeccancyInfo::soap_default(NULL); }
	virtual ~_ns1__UpdateVioPeccancyInfo() { }
};
#endif

#ifndef SOAP_TYPE__ns1__UpdateVioPeccancyInfoResponse
#define SOAP_TYPE__ns1__UpdateVioPeccancyInfoResponse (44)
/* ns1:UpdateVioPeccancyInfoResponse */
class SOAP_CMAC _ns1__UpdateVioPeccancyInfoResponse
{
public:
	char *UpdateVioPeccancyInfoResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 44; } /* = unique type id SOAP_TYPE__ns1__UpdateVioPeccancyInfoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__UpdateVioPeccancyInfoResponse() { _ns1__UpdateVioPeccancyInfoResponse::soap_default(NULL); }
	virtual ~_ns1__UpdateVioPeccancyInfoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetAlarmInfo
#define SOAP_TYPE__ns1__GetAlarmInfo (45)
/* ns1:GetAlarmInfo */
class SOAP_CMAC _ns1__GetAlarmInfo
{
public:
	char *xmlBody;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 45; } /* = unique type id SOAP_TYPE__ns1__GetAlarmInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetAlarmInfo() { _ns1__GetAlarmInfo::soap_default(NULL); }
	virtual ~_ns1__GetAlarmInfo() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetAlarmInfoResponse
#define SOAP_TYPE__ns1__GetAlarmInfoResponse (46)
/* ns1:GetAlarmInfoResponse */
class SOAP_CMAC _ns1__GetAlarmInfoResponse
{
public:
	char *GetAlarmInfoResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 46; } /* = unique type id SOAP_TYPE__ns1__GetAlarmInfoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetAlarmInfoResponse() { _ns1__GetAlarmInfoResponse::soap_default(NULL); }
	virtual ~_ns1__GetAlarmInfoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__UpdataDeviceState
#define SOAP_TYPE__ns1__UpdataDeviceState (47)
/* ns1:UpdataDeviceState */
class SOAP_CMAC _ns1__UpdataDeviceState
{
public:
	char *xmlBody;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 47; } /* = unique type id SOAP_TYPE__ns1__UpdataDeviceState */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__UpdataDeviceState() { _ns1__UpdataDeviceState::soap_default(NULL); }
	virtual ~_ns1__UpdataDeviceState() { }
};
#endif

#ifndef SOAP_TYPE__ns1__UpdataDeviceStateResponse
#define SOAP_TYPE__ns1__UpdataDeviceStateResponse (48)
/* ns1:UpdataDeviceStateResponse */
class SOAP_CMAC _ns1__UpdataDeviceStateResponse
{
public:
	char *UpdataDeviceStateResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 48; } /* = unique type id SOAP_TYPE__ns1__UpdataDeviceStateResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__UpdataDeviceStateResponse() { _ns1__UpdataDeviceStateResponse::soap_default(NULL); }
	virtual ~_ns1__UpdataDeviceStateResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__InViolationInfo
#define SOAP_TYPE__ns1__InViolationInfo (49)
/* ns1:InViolationInfo */
class SOAP_CMAC _ns1__InViolationInfo
{
public:
	char *xmlBody;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 49; } /* = unique type id SOAP_TYPE__ns1__InViolationInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__InViolationInfo() { _ns1__InViolationInfo::soap_default(NULL); }
	virtual ~_ns1__InViolationInfo() { }
};
#endif

#ifndef SOAP_TYPE__ns1__InViolationInfoResponse
#define SOAP_TYPE__ns1__InViolationInfoResponse (50)
/* ns1:InViolationInfoResponse */
class SOAP_CMAC _ns1__InViolationInfoResponse
{
public:
	char *InViolationInfoResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 50; } /* = unique type id SOAP_TYPE__ns1__InViolationInfoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__InViolationInfoResponse() { _ns1__InViolationInfoResponse::soap_default(NULL); }
	virtual ~_ns1__InViolationInfoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetViolationInfo
#define SOAP_TYPE__ns1__GetViolationInfo (51)
/* ns1:GetViolationInfo */
class SOAP_CMAC _ns1__GetViolationInfo
{
public:
	char *xmlBody;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 51; } /* = unique type id SOAP_TYPE__ns1__GetViolationInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetViolationInfo() { _ns1__GetViolationInfo::soap_default(NULL); }
	virtual ~_ns1__GetViolationInfo() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetViolationInfoResponse
#define SOAP_TYPE__ns1__GetViolationInfoResponse (52)
/* ns1:GetViolationInfoResponse */
class SOAP_CMAC _ns1__GetViolationInfoResponse
{
public:
	char *GetViolationInfoResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 52; } /* = unique type id SOAP_TYPE__ns1__GetViolationInfoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetViolationInfoResponse() { _ns1__GetViolationInfoResponse::soap_default(NULL); }
	virtual ~_ns1__GetViolationInfoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetJdsbhRecovery
#define SOAP_TYPE__ns1__GetJdsbhRecovery (53)
/* ns1:GetJdsbhRecovery */
class SOAP_CMAC _ns1__GetJdsbhRecovery
{
public:
	char *xmlBody;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 53; } /* = unique type id SOAP_TYPE__ns1__GetJdsbhRecovery */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetJdsbhRecovery() { _ns1__GetJdsbhRecovery::soap_default(NULL); }
	virtual ~_ns1__GetJdsbhRecovery() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetJdsbhRecoveryResponse
#define SOAP_TYPE__ns1__GetJdsbhRecoveryResponse (54)
/* ns1:GetJdsbhRecoveryResponse */
class SOAP_CMAC _ns1__GetJdsbhRecoveryResponse
{
public:
	char *GetJdsbhRecoveryResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 54; } /* = unique type id SOAP_TYPE__ns1__GetJdsbhRecoveryResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetJdsbhRecoveryResponse() { _ns1__GetJdsbhRecoveryResponse::soap_default(NULL); }
	virtual ~_ns1__GetJdsbhRecoveryResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetJdsbhRecoveryInfo
#define SOAP_TYPE__ns1__GetJdsbhRecoveryInfo (55)
/* ns1:GetJdsbhRecoveryInfo */
class SOAP_CMAC _ns1__GetJdsbhRecoveryInfo
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 55; } /* = unique type id SOAP_TYPE__ns1__GetJdsbhRecoveryInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetJdsbhRecoveryInfo() { _ns1__GetJdsbhRecoveryInfo::soap_default(NULL); }
	virtual ~_ns1__GetJdsbhRecoveryInfo() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetJdsbhRecoveryInfoResponse
#define SOAP_TYPE__ns1__GetJdsbhRecoveryInfoResponse (56)
/* ns1:GetJdsbhRecoveryInfoResponse */
class SOAP_CMAC _ns1__GetJdsbhRecoveryInfoResponse
{
public:
	char *GetJdsbhRecoveryInfoResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 56; } /* = unique type id SOAP_TYPE__ns1__GetJdsbhRecoveryInfoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetJdsbhRecoveryInfoResponse() { _ns1__GetJdsbhRecoveryInfoResponse::soap_default(NULL); }
	virtual ~_ns1__GetJdsbhRecoveryInfoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__addTransRecInfo
#define SOAP_TYPE__ns1__addTransRecInfo (57)
/* ns1:addTransRecInfo */
class SOAP_CMAC _ns1__addTransRecInfo
{
public:
	char *sjly;	/* optional element of type xsd:string */
	char *sbcj;	/* optional element of type xsd:string */
	char *sbbh;	/* optional element of type xsd:string */
	char *cjsj;	/* optional element of type xsd:string */
	char *wfxw;	/* optional element of type xsd:string */
	char *wfnr;	/* optional element of type xsd:string */
	char *zjwjlj;	/* optional element of type xsd:string */
	char *bz;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 57; } /* = unique type id SOAP_TYPE__ns1__addTransRecInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__addTransRecInfo() { _ns1__addTransRecInfo::soap_default(NULL); }
	virtual ~_ns1__addTransRecInfo() { }
};
#endif

#ifndef SOAP_TYPE__ns1__addTransRecInfoResponse
#define SOAP_TYPE__ns1__addTransRecInfoResponse (58)
/* ns1:addTransRecInfoResponse */
class SOAP_CMAC _ns1__addTransRecInfoResponse
{
public:
	char *addTransRecInfoResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 58; } /* = unique type id SOAP_TYPE__ns1__addTransRecInfoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__addTransRecInfoResponse() { _ns1__addTransRecInfoResponse::soap_default(NULL); }
	virtual ~_ns1__addTransRecInfoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__CheckUserInfo
#define SOAP_TYPE__ns1__CheckUserInfo (59)
/* ns1:CheckUserInfo */
class SOAP_CMAC _ns1__CheckUserInfo
{
public:
	char *xmlBody;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 59; } /* = unique type id SOAP_TYPE__ns1__CheckUserInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__CheckUserInfo() { _ns1__CheckUserInfo::soap_default(NULL); }
	virtual ~_ns1__CheckUserInfo() { }
};
#endif

#ifndef SOAP_TYPE__ns1__CheckUserInfoResponse
#define SOAP_TYPE__ns1__CheckUserInfoResponse (60)
/* ns1:CheckUserInfoResponse */
class SOAP_CMAC _ns1__CheckUserInfoResponse
{
public:
	bool CheckUserInfoResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 60; } /* = unique type id SOAP_TYPE__ns1__CheckUserInfoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__CheckUserInfoResponse() { _ns1__CheckUserInfoResponse::soap_default(NULL); }
	virtual ~_ns1__CheckUserInfoResponse() { }
};
#endif

#ifndef SOAP_TYPE___ns1__WebserviceTest
#define SOAP_TYPE___ns1__WebserviceTest (66)
/* Operation wrapper: */
struct __ns1__WebserviceTest
{
public:
	_ns1__WebserviceTest *ns1__WebserviceTest;	/* optional element of type ns1:WebserviceTest */
public:
	int soap_type() const { return 66; } /* = unique type id SOAP_TYPE___ns1__WebserviceTest */
};
#endif

#ifndef SOAP_TYPE___ns1__GetCurrentVersion
#define SOAP_TYPE___ns1__GetCurrentVersion (70)
/* Operation wrapper: */
struct __ns1__GetCurrentVersion
{
public:
	_ns1__GetCurrentVersion *ns1__GetCurrentVersion;	/* optional element of type ns1:GetCurrentVersion */
public:
	int soap_type() const { return 70; } /* = unique type id SOAP_TYPE___ns1__GetCurrentVersion */
};
#endif

#ifndef SOAP_TYPE___ns1__GetXMlFormat
#define SOAP_TYPE___ns1__GetXMlFormat (74)
/* Operation wrapper: */
struct __ns1__GetXMlFormat
{
public:
	_ns1__GetXMlFormat *ns1__GetXMlFormat;	/* optional element of type ns1:GetXMlFormat */
public:
	int soap_type() const { return 74; } /* = unique type id SOAP_TYPE___ns1__GetXMlFormat */
};
#endif

#ifndef SOAP_TYPE___ns1__CarPlateRecog
#define SOAP_TYPE___ns1__CarPlateRecog (78)
/* Operation wrapper: */
struct __ns1__CarPlateRecog
{
public:
	_ns1__CarPlateRecog *ns1__CarPlateRecog;	/* optional element of type ns1:CarPlateRecog */
public:
	int soap_type() const { return 78; } /* = unique type id SOAP_TYPE___ns1__CarPlateRecog */
};
#endif

#ifndef SOAP_TYPE___ns1__InPassCarInfo
#define SOAP_TYPE___ns1__InPassCarInfo (82)
/* Operation wrapper: */
struct __ns1__InPassCarInfo
{
public:
	_ns1__InPassCarInfo *ns1__InPassCarInfo;	/* optional element of type ns1:InPassCarInfo */
public:
	int soap_type() const { return 82; } /* = unique type id SOAP_TYPE___ns1__InPassCarInfo */
};
#endif

#ifndef SOAP_TYPE___ns1__InPeccancyInfo
#define SOAP_TYPE___ns1__InPeccancyInfo (86)
/* Operation wrapper: */
struct __ns1__InPeccancyInfo
{
public:
	_ns1__InPeccancyInfo *ns1__InPeccancyInfo;	/* optional element of type ns1:InPeccancyInfo */
public:
	int soap_type() const { return 86; } /* = unique type id SOAP_TYPE___ns1__InPeccancyInfo */
};
#endif

#ifndef SOAP_TYPE___ns1__InCheckedPeccancyInfo
#define SOAP_TYPE___ns1__InCheckedPeccancyInfo (90)
/* Operation wrapper: */
struct __ns1__InCheckedPeccancyInfo
{
public:
	_ns1__InCheckedPeccancyInfo *ns1__InCheckedPeccancyInfo;	/* optional element of type ns1:InCheckedPeccancyInfo */
public:
	int soap_type() const { return 90; } /* = unique type id SOAP_TYPE___ns1__InCheckedPeccancyInfo */
};
#endif

#ifndef SOAP_TYPE___ns1__InBlacklistInfo
#define SOAP_TYPE___ns1__InBlacklistInfo (94)
/* Operation wrapper: */
struct __ns1__InBlacklistInfo
{
public:
	_ns1__InBlacklistInfo *ns1__InBlacklistInfo;	/* optional element of type ns1:InBlacklistInfo */
public:
	int soap_type() const { return 94; } /* = unique type id SOAP_TYPE___ns1__InBlacklistInfo */
};
#endif

#ifndef SOAP_TYPE___ns1__InChecklessInfo
#define SOAP_TYPE___ns1__InChecklessInfo (98)
/* Operation wrapper: */
struct __ns1__InChecklessInfo
{
public:
	_ns1__InChecklessInfo *ns1__InChecklessInfo;	/* optional element of type ns1:InChecklessInfo */
public:
	int soap_type() const { return 98; } /* = unique type id SOAP_TYPE___ns1__InChecklessInfo */
};
#endif

#ifndef SOAP_TYPE___ns1__IntExtralistInfo
#define SOAP_TYPE___ns1__IntExtralistInfo (102)
/* Operation wrapper: */
struct __ns1__IntExtralistInfo
{
public:
	_ns1__IntExtralistInfo *ns1__IntExtralistInfo;	/* optional element of type ns1:IntExtralistInfo */
public:
	int soap_type() const { return 102; } /* = unique type id SOAP_TYPE___ns1__IntExtralistInfo */
};
#endif

#ifndef SOAP_TYPE___ns1__InSuspicionInfo
#define SOAP_TYPE___ns1__InSuspicionInfo (106)
/* Operation wrapper: */
struct __ns1__InSuspicionInfo
{
public:
	_ns1__InSuspicionInfo *ns1__InSuspicionInfo;	/* optional element of type ns1:InSuspicionInfo */
public:
	int soap_type() const { return 106; } /* = unique type id SOAP_TYPE___ns1__InSuspicionInfo */
};
#endif

#ifndef SOAP_TYPE___ns1__RevokeSuspicionInfo
#define SOAP_TYPE___ns1__RevokeSuspicionInfo (110)
/* Operation wrapper: */
struct __ns1__RevokeSuspicionInfo
{
public:
	_ns1__RevokeSuspicionInfo *ns1__RevokeSuspicionInfo;	/* optional element of type ns1:RevokeSuspicionInfo */
public:
	int soap_type() const { return 110; } /* = unique type id SOAP_TYPE___ns1__RevokeSuspicionInfo */
};
#endif

#ifndef SOAP_TYPE___ns1__GetLocationInfo
#define SOAP_TYPE___ns1__GetLocationInfo (114)
/* Operation wrapper: */
struct __ns1__GetLocationInfo
{
public:
	_ns1__GetLocationInfo *ns1__GetLocationInfo;	/* optional element of type ns1:GetLocationInfo */
public:
	int soap_type() const { return 114; } /* = unique type id SOAP_TYPE___ns1__GetLocationInfo */
};
#endif

#ifndef SOAP_TYPE___ns1__GetPassCarInfo
#define SOAP_TYPE___ns1__GetPassCarInfo (118)
/* Operation wrapper: */
struct __ns1__GetPassCarInfo
{
public:
	_ns1__GetPassCarInfo *ns1__GetPassCarInfo;	/* optional element of type ns1:GetPassCarInfo */
public:
	int soap_type() const { return 118; } /* = unique type id SOAP_TYPE___ns1__GetPassCarInfo */
};
#endif

#ifndef SOAP_TYPE___ns1__GetPeccancyInfo
#define SOAP_TYPE___ns1__GetPeccancyInfo (122)
/* Operation wrapper: */
struct __ns1__GetPeccancyInfo
{
public:
	_ns1__GetPeccancyInfo *ns1__GetPeccancyInfo;	/* optional element of type ns1:GetPeccancyInfo */
public:
	int soap_type() const { return 122; } /* = unique type id SOAP_TYPE___ns1__GetPeccancyInfo */
};
#endif

#ifndef SOAP_TYPE___ns1__GetPeccancyNoCheckInfo
#define SOAP_TYPE___ns1__GetPeccancyNoCheckInfo (126)
/* Operation wrapper: */
struct __ns1__GetPeccancyNoCheckInfo
{
public:
	_ns1__GetPeccancyNoCheckInfo *ns1__GetPeccancyNoCheckInfo;	/* optional element of type ns1:GetPeccancyNoCheckInfo */
public:
	int soap_type() const { return 126; } /* = unique type id SOAP_TYPE___ns1__GetPeccancyNoCheckInfo */
};
#endif

#ifndef SOAP_TYPE___ns1__UpdatePeccancyInfo
#define SOAP_TYPE___ns1__UpdatePeccancyInfo (130)
/* Operation wrapper: */
struct __ns1__UpdatePeccancyInfo
{
public:
	_ns1__UpdatePeccancyInfo *ns1__UpdatePeccancyInfo;	/* optional element of type ns1:UpdatePeccancyInfo */
public:
	int soap_type() const { return 130; } /* = unique type id SOAP_TYPE___ns1__UpdatePeccancyInfo */
};
#endif

#ifndef SOAP_TYPE___ns1__GetVioPeccancyNoCheckInfo
#define SOAP_TYPE___ns1__GetVioPeccancyNoCheckInfo (134)
/* Operation wrapper: */
struct __ns1__GetVioPeccancyNoCheckInfo
{
public:
	_ns1__GetVioPeccancyNoCheckInfo *ns1__GetVioPeccancyNoCheckInfo;	/* optional element of type ns1:GetVioPeccancyNoCheckInfo */
public:
	int soap_type() const { return 134; } /* = unique type id SOAP_TYPE___ns1__GetVioPeccancyNoCheckInfo */
};
#endif

#ifndef SOAP_TYPE___ns1__UpdateVioPeccancyInfo
#define SOAP_TYPE___ns1__UpdateVioPeccancyInfo (138)
/* Operation wrapper: */
struct __ns1__UpdateVioPeccancyInfo
{
public:
	_ns1__UpdateVioPeccancyInfo *ns1__UpdateVioPeccancyInfo;	/* optional element of type ns1:UpdateVioPeccancyInfo */
public:
	int soap_type() const { return 138; } /* = unique type id SOAP_TYPE___ns1__UpdateVioPeccancyInfo */
};
#endif

#ifndef SOAP_TYPE___ns1__GetAlarmInfo
#define SOAP_TYPE___ns1__GetAlarmInfo (142)
/* Operation wrapper: */
struct __ns1__GetAlarmInfo
{
public:
	_ns1__GetAlarmInfo *ns1__GetAlarmInfo;	/* optional element of type ns1:GetAlarmInfo */
public:
	int soap_type() const { return 142; } /* = unique type id SOAP_TYPE___ns1__GetAlarmInfo */
};
#endif

#ifndef SOAP_TYPE___ns1__UpdataDeviceState
#define SOAP_TYPE___ns1__UpdataDeviceState (146)
/* Operation wrapper: */
struct __ns1__UpdataDeviceState
{
public:
	_ns1__UpdataDeviceState *ns1__UpdataDeviceState;	/* optional element of type ns1:UpdataDeviceState */
public:
	int soap_type() const { return 146; } /* = unique type id SOAP_TYPE___ns1__UpdataDeviceState */
};
#endif

#ifndef SOAP_TYPE___ns1__InViolationInfo
#define SOAP_TYPE___ns1__InViolationInfo (150)
/* Operation wrapper: */
struct __ns1__InViolationInfo
{
public:
	_ns1__InViolationInfo *ns1__InViolationInfo;	/* optional element of type ns1:InViolationInfo */
public:
	int soap_type() const { return 150; } /* = unique type id SOAP_TYPE___ns1__InViolationInfo */
};
#endif

#ifndef SOAP_TYPE___ns1__GetViolationInfo
#define SOAP_TYPE___ns1__GetViolationInfo (154)
/* Operation wrapper: */
struct __ns1__GetViolationInfo
{
public:
	_ns1__GetViolationInfo *ns1__GetViolationInfo;	/* optional element of type ns1:GetViolationInfo */
public:
	int soap_type() const { return 154; } /* = unique type id SOAP_TYPE___ns1__GetViolationInfo */
};
#endif

#ifndef SOAP_TYPE___ns1__GetJdsbhRecovery
#define SOAP_TYPE___ns1__GetJdsbhRecovery (158)
/* Operation wrapper: */
struct __ns1__GetJdsbhRecovery
{
public:
	_ns1__GetJdsbhRecovery *ns1__GetJdsbhRecovery;	/* optional element of type ns1:GetJdsbhRecovery */
public:
	int soap_type() const { return 158; } /* = unique type id SOAP_TYPE___ns1__GetJdsbhRecovery */
};
#endif

#ifndef SOAP_TYPE___ns1__GetJdsbhRecoveryInfo
#define SOAP_TYPE___ns1__GetJdsbhRecoveryInfo (162)
/* Operation wrapper: */
struct __ns1__GetJdsbhRecoveryInfo
{
public:
	_ns1__GetJdsbhRecoveryInfo *ns1__GetJdsbhRecoveryInfo;	/* optional element of type ns1:GetJdsbhRecoveryInfo */
public:
	int soap_type() const { return 162; } /* = unique type id SOAP_TYPE___ns1__GetJdsbhRecoveryInfo */
};
#endif

#ifndef SOAP_TYPE___ns1__addTransRecInfo
#define SOAP_TYPE___ns1__addTransRecInfo (166)
/* Operation wrapper: */
struct __ns1__addTransRecInfo
{
public:
	_ns1__addTransRecInfo *ns1__addTransRecInfo;	/* optional element of type ns1:addTransRecInfo */
public:
	int soap_type() const { return 166; } /* = unique type id SOAP_TYPE___ns1__addTransRecInfo */
};
#endif

#ifndef SOAP_TYPE___ns1__CheckUserInfo
#define SOAP_TYPE___ns1__CheckUserInfo (170)
/* Operation wrapper: */
struct __ns1__CheckUserInfo
{
public:
	_ns1__CheckUserInfo *ns1__CheckUserInfo;	/* optional element of type ns1:CheckUserInfo */
public:
	int soap_type() const { return 170; } /* = unique type id SOAP_TYPE___ns1__CheckUserInfo */
};
#endif

#ifndef SOAP_TYPE___ns1__WebserviceTest_
#define SOAP_TYPE___ns1__WebserviceTest_ (172)
/* Operation wrapper: */
struct __ns1__WebserviceTest_
{
public:
	_ns1__WebserviceTest *ns1__WebserviceTest;	/* optional element of type ns1:WebserviceTest */
public:
	int soap_type() const { return 172; } /* = unique type id SOAP_TYPE___ns1__WebserviceTest_ */
};
#endif

#ifndef SOAP_TYPE___ns1__GetCurrentVersion_
#define SOAP_TYPE___ns1__GetCurrentVersion_ (174)
/* Operation wrapper: */
struct __ns1__GetCurrentVersion_
{
public:
	_ns1__GetCurrentVersion *ns1__GetCurrentVersion;	/* optional element of type ns1:GetCurrentVersion */
public:
	int soap_type() const { return 174; } /* = unique type id SOAP_TYPE___ns1__GetCurrentVersion_ */
};
#endif

#ifndef SOAP_TYPE___ns1__GetXMlFormat_
#define SOAP_TYPE___ns1__GetXMlFormat_ (176)
/* Operation wrapper: */
struct __ns1__GetXMlFormat_
{
public:
	_ns1__GetXMlFormat *ns1__GetXMlFormat;	/* optional element of type ns1:GetXMlFormat */
public:
	int soap_type() const { return 176; } /* = unique type id SOAP_TYPE___ns1__GetXMlFormat_ */
};
#endif

#ifndef SOAP_TYPE___ns1__CarPlateRecog_
#define SOAP_TYPE___ns1__CarPlateRecog_ (178)
/* Operation wrapper: */
struct __ns1__CarPlateRecog_
{
public:
	_ns1__CarPlateRecog *ns1__CarPlateRecog;	/* optional element of type ns1:CarPlateRecog */
public:
	int soap_type() const { return 178; } /* = unique type id SOAP_TYPE___ns1__CarPlateRecog_ */
};
#endif

#ifndef SOAP_TYPE___ns1__InPassCarInfo_
#define SOAP_TYPE___ns1__InPassCarInfo_ (180)
/* Operation wrapper: */
struct __ns1__InPassCarInfo_
{
public:
	_ns1__InPassCarInfo *ns1__InPassCarInfo;	/* optional element of type ns1:InPassCarInfo */
public:
	int soap_type() const { return 180; } /* = unique type id SOAP_TYPE___ns1__InPassCarInfo_ */
};
#endif

#ifndef SOAP_TYPE___ns1__InPeccancyInfo_
#define SOAP_TYPE___ns1__InPeccancyInfo_ (182)
/* Operation wrapper: */
struct __ns1__InPeccancyInfo_
{
public:
	_ns1__InPeccancyInfo *ns1__InPeccancyInfo;	/* optional element of type ns1:InPeccancyInfo */
public:
	int soap_type() const { return 182; } /* = unique type id SOAP_TYPE___ns1__InPeccancyInfo_ */
};
#endif

#ifndef SOAP_TYPE___ns1__InCheckedPeccancyInfo_
#define SOAP_TYPE___ns1__InCheckedPeccancyInfo_ (184)
/* Operation wrapper: */
struct __ns1__InCheckedPeccancyInfo_
{
public:
	_ns1__InCheckedPeccancyInfo *ns1__InCheckedPeccancyInfo;	/* optional element of type ns1:InCheckedPeccancyInfo */
public:
	int soap_type() const { return 184; } /* = unique type id SOAP_TYPE___ns1__InCheckedPeccancyInfo_ */
};
#endif

#ifndef SOAP_TYPE___ns1__InBlacklistInfo_
#define SOAP_TYPE___ns1__InBlacklistInfo_ (186)
/* Operation wrapper: */
struct __ns1__InBlacklistInfo_
{
public:
	_ns1__InBlacklistInfo *ns1__InBlacklistInfo;	/* optional element of type ns1:InBlacklistInfo */
public:
	int soap_type() const { return 186; } /* = unique type id SOAP_TYPE___ns1__InBlacklistInfo_ */
};
#endif

#ifndef SOAP_TYPE___ns1__InChecklessInfo_
#define SOAP_TYPE___ns1__InChecklessInfo_ (188)
/* Operation wrapper: */
struct __ns1__InChecklessInfo_
{
public:
	_ns1__InChecklessInfo *ns1__InChecklessInfo;	/* optional element of type ns1:InChecklessInfo */
public:
	int soap_type() const { return 188; } /* = unique type id SOAP_TYPE___ns1__InChecklessInfo_ */
};
#endif

#ifndef SOAP_TYPE___ns1__IntExtralistInfo_
#define SOAP_TYPE___ns1__IntExtralistInfo_ (190)
/* Operation wrapper: */
struct __ns1__IntExtralistInfo_
{
public:
	_ns1__IntExtralistInfo *ns1__IntExtralistInfo;	/* optional element of type ns1:IntExtralistInfo */
public:
	int soap_type() const { return 190; } /* = unique type id SOAP_TYPE___ns1__IntExtralistInfo_ */
};
#endif

#ifndef SOAP_TYPE___ns1__InSuspicionInfo_
#define SOAP_TYPE___ns1__InSuspicionInfo_ (192)
/* Operation wrapper: */
struct __ns1__InSuspicionInfo_
{
public:
	_ns1__InSuspicionInfo *ns1__InSuspicionInfo;	/* optional element of type ns1:InSuspicionInfo */
public:
	int soap_type() const { return 192; } /* = unique type id SOAP_TYPE___ns1__InSuspicionInfo_ */
};
#endif

#ifndef SOAP_TYPE___ns1__RevokeSuspicionInfo_
#define SOAP_TYPE___ns1__RevokeSuspicionInfo_ (194)
/* Operation wrapper: */
struct __ns1__RevokeSuspicionInfo_
{
public:
	_ns1__RevokeSuspicionInfo *ns1__RevokeSuspicionInfo;	/* optional element of type ns1:RevokeSuspicionInfo */
public:
	int soap_type() const { return 194; } /* = unique type id SOAP_TYPE___ns1__RevokeSuspicionInfo_ */
};
#endif

#ifndef SOAP_TYPE___ns1__GetLocationInfo_
#define SOAP_TYPE___ns1__GetLocationInfo_ (196)
/* Operation wrapper: */
struct __ns1__GetLocationInfo_
{
public:
	_ns1__GetLocationInfo *ns1__GetLocationInfo;	/* optional element of type ns1:GetLocationInfo */
public:
	int soap_type() const { return 196; } /* = unique type id SOAP_TYPE___ns1__GetLocationInfo_ */
};
#endif

#ifndef SOAP_TYPE___ns1__GetPassCarInfo_
#define SOAP_TYPE___ns1__GetPassCarInfo_ (198)
/* Operation wrapper: */
struct __ns1__GetPassCarInfo_
{
public:
	_ns1__GetPassCarInfo *ns1__GetPassCarInfo;	/* optional element of type ns1:GetPassCarInfo */
public:
	int soap_type() const { return 198; } /* = unique type id SOAP_TYPE___ns1__GetPassCarInfo_ */
};
#endif

#ifndef SOAP_TYPE___ns1__GetPeccancyInfo_
#define SOAP_TYPE___ns1__GetPeccancyInfo_ (200)
/* Operation wrapper: */
struct __ns1__GetPeccancyInfo_
{
public:
	_ns1__GetPeccancyInfo *ns1__GetPeccancyInfo;	/* optional element of type ns1:GetPeccancyInfo */
public:
	int soap_type() const { return 200; } /* = unique type id SOAP_TYPE___ns1__GetPeccancyInfo_ */
};
#endif

#ifndef SOAP_TYPE___ns1__GetPeccancyNoCheckInfo_
#define SOAP_TYPE___ns1__GetPeccancyNoCheckInfo_ (202)
/* Operation wrapper: */
struct __ns1__GetPeccancyNoCheckInfo_
{
public:
	_ns1__GetPeccancyNoCheckInfo *ns1__GetPeccancyNoCheckInfo;	/* optional element of type ns1:GetPeccancyNoCheckInfo */
public:
	int soap_type() const { return 202; } /* = unique type id SOAP_TYPE___ns1__GetPeccancyNoCheckInfo_ */
};
#endif

#ifndef SOAP_TYPE___ns1__UpdatePeccancyInfo_
#define SOAP_TYPE___ns1__UpdatePeccancyInfo_ (204)
/* Operation wrapper: */
struct __ns1__UpdatePeccancyInfo_
{
public:
	_ns1__UpdatePeccancyInfo *ns1__UpdatePeccancyInfo;	/* optional element of type ns1:UpdatePeccancyInfo */
public:
	int soap_type() const { return 204; } /* = unique type id SOAP_TYPE___ns1__UpdatePeccancyInfo_ */
};
#endif

#ifndef SOAP_TYPE___ns1__GetVioPeccancyNoCheckInfo_
#define SOAP_TYPE___ns1__GetVioPeccancyNoCheckInfo_ (206)
/* Operation wrapper: */
struct __ns1__GetVioPeccancyNoCheckInfo_
{
public:
	_ns1__GetVioPeccancyNoCheckInfo *ns1__GetVioPeccancyNoCheckInfo;	/* optional element of type ns1:GetVioPeccancyNoCheckInfo */
public:
	int soap_type() const { return 206; } /* = unique type id SOAP_TYPE___ns1__GetVioPeccancyNoCheckInfo_ */
};
#endif

#ifndef SOAP_TYPE___ns1__UpdateVioPeccancyInfo_
#define SOAP_TYPE___ns1__UpdateVioPeccancyInfo_ (208)
/* Operation wrapper: */
struct __ns1__UpdateVioPeccancyInfo_
{
public:
	_ns1__UpdateVioPeccancyInfo *ns1__UpdateVioPeccancyInfo;	/* optional element of type ns1:UpdateVioPeccancyInfo */
public:
	int soap_type() const { return 208; } /* = unique type id SOAP_TYPE___ns1__UpdateVioPeccancyInfo_ */
};
#endif

#ifndef SOAP_TYPE___ns1__GetAlarmInfo_
#define SOAP_TYPE___ns1__GetAlarmInfo_ (210)
/* Operation wrapper: */
struct __ns1__GetAlarmInfo_
{
public:
	_ns1__GetAlarmInfo *ns1__GetAlarmInfo;	/* optional element of type ns1:GetAlarmInfo */
public:
	int soap_type() const { return 210; } /* = unique type id SOAP_TYPE___ns1__GetAlarmInfo_ */
};
#endif

#ifndef SOAP_TYPE___ns1__UpdataDeviceState_
#define SOAP_TYPE___ns1__UpdataDeviceState_ (212)
/* Operation wrapper: */
struct __ns1__UpdataDeviceState_
{
public:
	_ns1__UpdataDeviceState *ns1__UpdataDeviceState;	/* optional element of type ns1:UpdataDeviceState */
public:
	int soap_type() const { return 212; } /* = unique type id SOAP_TYPE___ns1__UpdataDeviceState_ */
};
#endif

#ifndef SOAP_TYPE___ns1__InViolationInfo_
#define SOAP_TYPE___ns1__InViolationInfo_ (214)
/* Operation wrapper: */
struct __ns1__InViolationInfo_
{
public:
	_ns1__InViolationInfo *ns1__InViolationInfo;	/* optional element of type ns1:InViolationInfo */
public:
	int soap_type() const { return 214; } /* = unique type id SOAP_TYPE___ns1__InViolationInfo_ */
};
#endif

#ifndef SOAP_TYPE___ns1__GetViolationInfo_
#define SOAP_TYPE___ns1__GetViolationInfo_ (216)
/* Operation wrapper: */
struct __ns1__GetViolationInfo_
{
public:
	_ns1__GetViolationInfo *ns1__GetViolationInfo;	/* optional element of type ns1:GetViolationInfo */
public:
	int soap_type() const { return 216; } /* = unique type id SOAP_TYPE___ns1__GetViolationInfo_ */
};
#endif

#ifndef SOAP_TYPE___ns1__GetJdsbhRecovery_
#define SOAP_TYPE___ns1__GetJdsbhRecovery_ (218)
/* Operation wrapper: */
struct __ns1__GetJdsbhRecovery_
{
public:
	_ns1__GetJdsbhRecovery *ns1__GetJdsbhRecovery;	/* optional element of type ns1:GetJdsbhRecovery */
public:
	int soap_type() const { return 218; } /* = unique type id SOAP_TYPE___ns1__GetJdsbhRecovery_ */
};
#endif

#ifndef SOAP_TYPE___ns1__GetJdsbhRecoveryInfo_
#define SOAP_TYPE___ns1__GetJdsbhRecoveryInfo_ (220)
/* Operation wrapper: */
struct __ns1__GetJdsbhRecoveryInfo_
{
public:
	_ns1__GetJdsbhRecoveryInfo *ns1__GetJdsbhRecoveryInfo;	/* optional element of type ns1:GetJdsbhRecoveryInfo */
public:
	int soap_type() const { return 220; } /* = unique type id SOAP_TYPE___ns1__GetJdsbhRecoveryInfo_ */
};
#endif

#ifndef SOAP_TYPE___ns1__addTransRecInfo_
#define SOAP_TYPE___ns1__addTransRecInfo_ (222)
/* Operation wrapper: */
struct __ns1__addTransRecInfo_
{
public:
	_ns1__addTransRecInfo *ns1__addTransRecInfo;	/* optional element of type ns1:addTransRecInfo */
public:
	int soap_type() const { return 222; } /* = unique type id SOAP_TYPE___ns1__addTransRecInfo_ */
};
#endif

#ifndef SOAP_TYPE___ns1__CheckUserInfo_
#define SOAP_TYPE___ns1__CheckUserInfo_ (224)
/* Operation wrapper: */
struct __ns1__CheckUserInfo_
{
public:
	_ns1__CheckUserInfo *ns1__CheckUserInfo;	/* optional element of type ns1:CheckUserInfo */
public:
	int soap_type() const { return 224; } /* = unique type id SOAP_TYPE___ns1__CheckUserInfo_ */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (225)
/* SOAP Header: */
struct SOAP_ENV__Header
{
public:
	int soap_type() const { return 225; } /* = unique type id SOAP_TYPE_SOAP_ENV__Header */
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (226)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
public:
	int soap_type() const { return 226; } /* = unique type id SOAP_TYPE_SOAP_ENV__Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (228)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
public:
	int soap_type() const { return 228; } /* = unique type id SOAP_TYPE_SOAP_ENV__Detail */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (231)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 231; } /* = unique type id SOAP_TYPE_SOAP_ENV__Reason */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (232)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
public:
	int soap_type() const { return 232; } /* = unique type id SOAP_TYPE_SOAP_ENV__Fault */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Client-Side Call Stubs                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__WebserviceTest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__WebserviceTest *ns1__WebserviceTest, _ns1__WebserviceTestResponse *ns1__WebserviceTestResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetCurrentVersion(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetCurrentVersion *ns1__GetCurrentVersion, _ns1__GetCurrentVersionResponse *ns1__GetCurrentVersionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetXMlFormat(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetXMlFormat *ns1__GetXMlFormat, _ns1__GetXMlFormatResponse *ns1__GetXMlFormatResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__CarPlateRecog(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__CarPlateRecog *ns1__CarPlateRecog, _ns1__CarPlateRecogResponse *ns1__CarPlateRecogResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__InPassCarInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__InPassCarInfo *ns1__InPassCarInfo, _ns1__InPassCarInfoResponse *ns1__InPassCarInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__InPeccancyInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__InPeccancyInfo *ns1__InPeccancyInfo, _ns1__InPeccancyInfoResponse *ns1__InPeccancyInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__InCheckedPeccancyInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__InCheckedPeccancyInfo *ns1__InCheckedPeccancyInfo, _ns1__InCheckedPeccancyInfoResponse *ns1__InCheckedPeccancyInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__InBlacklistInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__InBlacklistInfo *ns1__InBlacklistInfo, _ns1__InBlacklistInfoResponse *ns1__InBlacklistInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__InChecklessInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__InChecklessInfo *ns1__InChecklessInfo, _ns1__InChecklessInfoResponse *ns1__InChecklessInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__IntExtralistInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__IntExtralistInfo *ns1__IntExtralistInfo, _ns1__IntExtralistInfoResponse *ns1__IntExtralistInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__InSuspicionInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__InSuspicionInfo *ns1__InSuspicionInfo, _ns1__InSuspicionInfoResponse *ns1__InSuspicionInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__RevokeSuspicionInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__RevokeSuspicionInfo *ns1__RevokeSuspicionInfo, _ns1__RevokeSuspicionInfoResponse *ns1__RevokeSuspicionInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetLocationInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetLocationInfo *ns1__GetLocationInfo, _ns1__GetLocationInfoResponse *ns1__GetLocationInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetPassCarInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPassCarInfo *ns1__GetPassCarInfo, _ns1__GetPassCarInfoResponse *ns1__GetPassCarInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetPeccancyInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPeccancyInfo *ns1__GetPeccancyInfo, _ns1__GetPeccancyInfoResponse *ns1__GetPeccancyInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetPeccancyNoCheckInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPeccancyNoCheckInfo *ns1__GetPeccancyNoCheckInfo, _ns1__GetPeccancyNoCheckInfoResponse *ns1__GetPeccancyNoCheckInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__UpdatePeccancyInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__UpdatePeccancyInfo *ns1__UpdatePeccancyInfo, _ns1__UpdatePeccancyInfoResponse *ns1__UpdatePeccancyInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetVioPeccancyNoCheckInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetVioPeccancyNoCheckInfo *ns1__GetVioPeccancyNoCheckInfo, _ns1__GetVioPeccancyNoCheckInfoResponse *ns1__GetVioPeccancyNoCheckInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__UpdateVioPeccancyInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__UpdateVioPeccancyInfo *ns1__UpdateVioPeccancyInfo, _ns1__UpdateVioPeccancyInfoResponse *ns1__UpdateVioPeccancyInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetAlarmInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetAlarmInfo *ns1__GetAlarmInfo, _ns1__GetAlarmInfoResponse *ns1__GetAlarmInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__UpdataDeviceState(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__UpdataDeviceState *ns1__UpdataDeviceState, _ns1__UpdataDeviceStateResponse *ns1__UpdataDeviceStateResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__InViolationInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__InViolationInfo *ns1__InViolationInfo, _ns1__InViolationInfoResponse *ns1__InViolationInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetViolationInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetViolationInfo *ns1__GetViolationInfo, _ns1__GetViolationInfoResponse *ns1__GetViolationInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetJdsbhRecovery(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetJdsbhRecovery *ns1__GetJdsbhRecovery, _ns1__GetJdsbhRecoveryResponse *ns1__GetJdsbhRecoveryResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetJdsbhRecoveryInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetJdsbhRecoveryInfo *ns1__GetJdsbhRecoveryInfo, _ns1__GetJdsbhRecoveryInfoResponse *ns1__GetJdsbhRecoveryInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__addTransRecInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__addTransRecInfo *ns1__addTransRecInfo, _ns1__addTransRecInfoResponse *ns1__addTransRecInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__CheckUserInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__CheckUserInfo *ns1__CheckUserInfo, _ns1__CheckUserInfoResponse *ns1__CheckUserInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__WebserviceTest_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__WebserviceTest *ns1__WebserviceTest, _ns1__WebserviceTestResponse *ns1__WebserviceTestResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetCurrentVersion_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetCurrentVersion *ns1__GetCurrentVersion, _ns1__GetCurrentVersionResponse *ns1__GetCurrentVersionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetXMlFormat_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetXMlFormat *ns1__GetXMlFormat, _ns1__GetXMlFormatResponse *ns1__GetXMlFormatResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__CarPlateRecog_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__CarPlateRecog *ns1__CarPlateRecog, _ns1__CarPlateRecogResponse *ns1__CarPlateRecogResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__InPassCarInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__InPassCarInfo *ns1__InPassCarInfo, _ns1__InPassCarInfoResponse *ns1__InPassCarInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__InPeccancyInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__InPeccancyInfo *ns1__InPeccancyInfo, _ns1__InPeccancyInfoResponse *ns1__InPeccancyInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__InCheckedPeccancyInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__InCheckedPeccancyInfo *ns1__InCheckedPeccancyInfo, _ns1__InCheckedPeccancyInfoResponse *ns1__InCheckedPeccancyInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__InBlacklistInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__InBlacklistInfo *ns1__InBlacklistInfo, _ns1__InBlacklistInfoResponse *ns1__InBlacklistInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__InChecklessInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__InChecklessInfo *ns1__InChecklessInfo, _ns1__InChecklessInfoResponse *ns1__InChecklessInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__IntExtralistInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__IntExtralistInfo *ns1__IntExtralistInfo, _ns1__IntExtralistInfoResponse *ns1__IntExtralistInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__InSuspicionInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__InSuspicionInfo *ns1__InSuspicionInfo, _ns1__InSuspicionInfoResponse *ns1__InSuspicionInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__RevokeSuspicionInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__RevokeSuspicionInfo *ns1__RevokeSuspicionInfo, _ns1__RevokeSuspicionInfoResponse *ns1__RevokeSuspicionInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetLocationInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetLocationInfo *ns1__GetLocationInfo, _ns1__GetLocationInfoResponse *ns1__GetLocationInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetPassCarInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPassCarInfo *ns1__GetPassCarInfo, _ns1__GetPassCarInfoResponse *ns1__GetPassCarInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetPeccancyInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPeccancyInfo *ns1__GetPeccancyInfo, _ns1__GetPeccancyInfoResponse *ns1__GetPeccancyInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetPeccancyNoCheckInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPeccancyNoCheckInfo *ns1__GetPeccancyNoCheckInfo, _ns1__GetPeccancyNoCheckInfoResponse *ns1__GetPeccancyNoCheckInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__UpdatePeccancyInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__UpdatePeccancyInfo *ns1__UpdatePeccancyInfo, _ns1__UpdatePeccancyInfoResponse *ns1__UpdatePeccancyInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetVioPeccancyNoCheckInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetVioPeccancyNoCheckInfo *ns1__GetVioPeccancyNoCheckInfo, _ns1__GetVioPeccancyNoCheckInfoResponse *ns1__GetVioPeccancyNoCheckInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__UpdateVioPeccancyInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__UpdateVioPeccancyInfo *ns1__UpdateVioPeccancyInfo, _ns1__UpdateVioPeccancyInfoResponse *ns1__UpdateVioPeccancyInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetAlarmInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetAlarmInfo *ns1__GetAlarmInfo, _ns1__GetAlarmInfoResponse *ns1__GetAlarmInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__UpdataDeviceState_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__UpdataDeviceState *ns1__UpdataDeviceState, _ns1__UpdataDeviceStateResponse *ns1__UpdataDeviceStateResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__InViolationInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__InViolationInfo *ns1__InViolationInfo, _ns1__InViolationInfoResponse *ns1__InViolationInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetViolationInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetViolationInfo *ns1__GetViolationInfo, _ns1__GetViolationInfoResponse *ns1__GetViolationInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetJdsbhRecovery_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetJdsbhRecovery *ns1__GetJdsbhRecovery, _ns1__GetJdsbhRecoveryResponse *ns1__GetJdsbhRecoveryResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetJdsbhRecoveryInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetJdsbhRecoveryInfo *ns1__GetJdsbhRecoveryInfo, _ns1__GetJdsbhRecoveryInfoResponse *ns1__GetJdsbhRecoveryInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__addTransRecInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__addTransRecInfo *ns1__addTransRecInfo, _ns1__addTransRecInfoResponse *ns1__addTransRecInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__CheckUserInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__CheckUserInfo *ns1__CheckUserInfo, _ns1__CheckUserInfoResponse *ns1__CheckUserInfoResponse);

#endif

/* End of soapStub.h */
