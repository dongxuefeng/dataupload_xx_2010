/* soapClient.cpp
   Generated by gSOAP 2.8.17r from OpenInterface.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#if defined(__BORLANDC__)
#pragma option push -w-8060
#pragma option push -w-8004
#endif
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapClient.cpp ver 2.8.17r 2015-04-29 10:06:49 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__WebserviceTest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__WebserviceTest *ns1__WebserviceTest, _ns1__WebserviceTestResponse *ns1__WebserviceTestResponse)
{	struct __ns1__WebserviceTest soap_tmp___ns1__WebserviceTest;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/WebserviceTest";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__WebserviceTest.ns1__WebserviceTest = ns1__WebserviceTest;
	soap_serializeheader(soap);
	soap_serialize___ns1__WebserviceTest(soap, &soap_tmp___ns1__WebserviceTest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__WebserviceTest(soap, &soap_tmp___ns1__WebserviceTest, "-ns1:WebserviceTest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__WebserviceTest(soap, &soap_tmp___ns1__WebserviceTest, "-ns1:WebserviceTest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__WebserviceTestResponse)
		return soap_closesock(soap);
	ns1__WebserviceTestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__WebserviceTestResponse->soap_get(soap, "ns1:WebserviceTestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetCurrentVersion(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetCurrentVersion *ns1__GetCurrentVersion, _ns1__GetCurrentVersionResponse *ns1__GetCurrentVersionResponse)
{	struct __ns1__GetCurrentVersion soap_tmp___ns1__GetCurrentVersion;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetCurrentVersion";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetCurrentVersion.ns1__GetCurrentVersion = ns1__GetCurrentVersion;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetCurrentVersion(soap, &soap_tmp___ns1__GetCurrentVersion);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetCurrentVersion(soap, &soap_tmp___ns1__GetCurrentVersion, "-ns1:GetCurrentVersion", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetCurrentVersion(soap, &soap_tmp___ns1__GetCurrentVersion, "-ns1:GetCurrentVersion", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetCurrentVersionResponse)
		return soap_closesock(soap);
	ns1__GetCurrentVersionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetCurrentVersionResponse->soap_get(soap, "ns1:GetCurrentVersionResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetXMlFormat(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetXMlFormat *ns1__GetXMlFormat, _ns1__GetXMlFormatResponse *ns1__GetXMlFormatResponse)
{	struct __ns1__GetXMlFormat soap_tmp___ns1__GetXMlFormat;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetXMlFormat";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetXMlFormat.ns1__GetXMlFormat = ns1__GetXMlFormat;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetXMlFormat(soap, &soap_tmp___ns1__GetXMlFormat);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetXMlFormat(soap, &soap_tmp___ns1__GetXMlFormat, "-ns1:GetXMlFormat", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetXMlFormat(soap, &soap_tmp___ns1__GetXMlFormat, "-ns1:GetXMlFormat", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetXMlFormatResponse)
		return soap_closesock(soap);
	ns1__GetXMlFormatResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetXMlFormatResponse->soap_get(soap, "ns1:GetXMlFormatResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__CarPlateRecog(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__CarPlateRecog *ns1__CarPlateRecog, _ns1__CarPlateRecogResponse *ns1__CarPlateRecogResponse)
{	struct __ns1__CarPlateRecog soap_tmp___ns1__CarPlateRecog;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/CarPlateRecog";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__CarPlateRecog.ns1__CarPlateRecog = ns1__CarPlateRecog;
	soap_serializeheader(soap);
	soap_serialize___ns1__CarPlateRecog(soap, &soap_tmp___ns1__CarPlateRecog);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CarPlateRecog(soap, &soap_tmp___ns1__CarPlateRecog, "-ns1:CarPlateRecog", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CarPlateRecog(soap, &soap_tmp___ns1__CarPlateRecog, "-ns1:CarPlateRecog", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__CarPlateRecogResponse)
		return soap_closesock(soap);
	ns1__CarPlateRecogResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CarPlateRecogResponse->soap_get(soap, "ns1:CarPlateRecogResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__InPassCarInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__InPassCarInfo *ns1__InPassCarInfo, _ns1__InPassCarInfoResponse *ns1__InPassCarInfoResponse)
{	struct __ns1__InPassCarInfo soap_tmp___ns1__InPassCarInfo;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/InPassCarInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__InPassCarInfo.ns1__InPassCarInfo = ns1__InPassCarInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__InPassCarInfo(soap, &soap_tmp___ns1__InPassCarInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__InPassCarInfo(soap, &soap_tmp___ns1__InPassCarInfo, "-ns1:InPassCarInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__InPassCarInfo(soap, &soap_tmp___ns1__InPassCarInfo, "-ns1:InPassCarInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__InPassCarInfoResponse)
		return soap_closesock(soap);
	ns1__InPassCarInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__InPassCarInfoResponse->soap_get(soap, "ns1:InPassCarInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__InPeccancyInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__InPeccancyInfo *ns1__InPeccancyInfo, _ns1__InPeccancyInfoResponse *ns1__InPeccancyInfoResponse)
{	struct __ns1__InPeccancyInfo soap_tmp___ns1__InPeccancyInfo;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/InPeccancyInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__InPeccancyInfo.ns1__InPeccancyInfo = ns1__InPeccancyInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__InPeccancyInfo(soap, &soap_tmp___ns1__InPeccancyInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__InPeccancyInfo(soap, &soap_tmp___ns1__InPeccancyInfo, "-ns1:InPeccancyInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__InPeccancyInfo(soap, &soap_tmp___ns1__InPeccancyInfo, "-ns1:InPeccancyInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__InPeccancyInfoResponse)
		return soap_closesock(soap);
	ns1__InPeccancyInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__InPeccancyInfoResponse->soap_get(soap, "ns1:InPeccancyInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__InCheckedPeccancyInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__InCheckedPeccancyInfo *ns1__InCheckedPeccancyInfo, _ns1__InCheckedPeccancyInfoResponse *ns1__InCheckedPeccancyInfoResponse)
{	struct __ns1__InCheckedPeccancyInfo soap_tmp___ns1__InCheckedPeccancyInfo;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/InCheckedPeccancyInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__InCheckedPeccancyInfo.ns1__InCheckedPeccancyInfo = ns1__InCheckedPeccancyInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__InCheckedPeccancyInfo(soap, &soap_tmp___ns1__InCheckedPeccancyInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__InCheckedPeccancyInfo(soap, &soap_tmp___ns1__InCheckedPeccancyInfo, "-ns1:InCheckedPeccancyInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__InCheckedPeccancyInfo(soap, &soap_tmp___ns1__InCheckedPeccancyInfo, "-ns1:InCheckedPeccancyInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__InCheckedPeccancyInfoResponse)
		return soap_closesock(soap);
	ns1__InCheckedPeccancyInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__InCheckedPeccancyInfoResponse->soap_get(soap, "ns1:InCheckedPeccancyInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__InBlacklistInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__InBlacklistInfo *ns1__InBlacklistInfo, _ns1__InBlacklistInfoResponse *ns1__InBlacklistInfoResponse)
{	struct __ns1__InBlacklistInfo soap_tmp___ns1__InBlacklistInfo;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/InBlacklistInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__InBlacklistInfo.ns1__InBlacklistInfo = ns1__InBlacklistInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__InBlacklistInfo(soap, &soap_tmp___ns1__InBlacklistInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__InBlacklistInfo(soap, &soap_tmp___ns1__InBlacklistInfo, "-ns1:InBlacklistInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__InBlacklistInfo(soap, &soap_tmp___ns1__InBlacklistInfo, "-ns1:InBlacklistInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__InBlacklistInfoResponse)
		return soap_closesock(soap);
	ns1__InBlacklistInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__InBlacklistInfoResponse->soap_get(soap, "ns1:InBlacklistInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__InChecklessInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__InChecklessInfo *ns1__InChecklessInfo, _ns1__InChecklessInfoResponse *ns1__InChecklessInfoResponse)
{	struct __ns1__InChecklessInfo soap_tmp___ns1__InChecklessInfo;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/InChecklessInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__InChecklessInfo.ns1__InChecklessInfo = ns1__InChecklessInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__InChecklessInfo(soap, &soap_tmp___ns1__InChecklessInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__InChecklessInfo(soap, &soap_tmp___ns1__InChecklessInfo, "-ns1:InChecklessInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__InChecklessInfo(soap, &soap_tmp___ns1__InChecklessInfo, "-ns1:InChecklessInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__InChecklessInfoResponse)
		return soap_closesock(soap);
	ns1__InChecklessInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__InChecklessInfoResponse->soap_get(soap, "ns1:InChecklessInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__IntExtralistInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__IntExtralistInfo *ns1__IntExtralistInfo, _ns1__IntExtralistInfoResponse *ns1__IntExtralistInfoResponse)
{	struct __ns1__IntExtralistInfo soap_tmp___ns1__IntExtralistInfo;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/IntExtralistInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__IntExtralistInfo.ns1__IntExtralistInfo = ns1__IntExtralistInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__IntExtralistInfo(soap, &soap_tmp___ns1__IntExtralistInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__IntExtralistInfo(soap, &soap_tmp___ns1__IntExtralistInfo, "-ns1:IntExtralistInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__IntExtralistInfo(soap, &soap_tmp___ns1__IntExtralistInfo, "-ns1:IntExtralistInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__IntExtralistInfoResponse)
		return soap_closesock(soap);
	ns1__IntExtralistInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__IntExtralistInfoResponse->soap_get(soap, "ns1:IntExtralistInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__InSuspicionInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__InSuspicionInfo *ns1__InSuspicionInfo, _ns1__InSuspicionInfoResponse *ns1__InSuspicionInfoResponse)
{	struct __ns1__InSuspicionInfo soap_tmp___ns1__InSuspicionInfo;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/InSuspicionInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__InSuspicionInfo.ns1__InSuspicionInfo = ns1__InSuspicionInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__InSuspicionInfo(soap, &soap_tmp___ns1__InSuspicionInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__InSuspicionInfo(soap, &soap_tmp___ns1__InSuspicionInfo, "-ns1:InSuspicionInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__InSuspicionInfo(soap, &soap_tmp___ns1__InSuspicionInfo, "-ns1:InSuspicionInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__InSuspicionInfoResponse)
		return soap_closesock(soap);
	ns1__InSuspicionInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__InSuspicionInfoResponse->soap_get(soap, "ns1:InSuspicionInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__RevokeSuspicionInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__RevokeSuspicionInfo *ns1__RevokeSuspicionInfo, _ns1__RevokeSuspicionInfoResponse *ns1__RevokeSuspicionInfoResponse)
{	struct __ns1__RevokeSuspicionInfo soap_tmp___ns1__RevokeSuspicionInfo;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/RevokeSuspicionInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__RevokeSuspicionInfo.ns1__RevokeSuspicionInfo = ns1__RevokeSuspicionInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__RevokeSuspicionInfo(soap, &soap_tmp___ns1__RevokeSuspicionInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__RevokeSuspicionInfo(soap, &soap_tmp___ns1__RevokeSuspicionInfo, "-ns1:RevokeSuspicionInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__RevokeSuspicionInfo(soap, &soap_tmp___ns1__RevokeSuspicionInfo, "-ns1:RevokeSuspicionInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__RevokeSuspicionInfoResponse)
		return soap_closesock(soap);
	ns1__RevokeSuspicionInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RevokeSuspicionInfoResponse->soap_get(soap, "ns1:RevokeSuspicionInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetLocationInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetLocationInfo *ns1__GetLocationInfo, _ns1__GetLocationInfoResponse *ns1__GetLocationInfoResponse)
{	struct __ns1__GetLocationInfo soap_tmp___ns1__GetLocationInfo;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetLocationInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetLocationInfo.ns1__GetLocationInfo = ns1__GetLocationInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetLocationInfo(soap, &soap_tmp___ns1__GetLocationInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetLocationInfo(soap, &soap_tmp___ns1__GetLocationInfo, "-ns1:GetLocationInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetLocationInfo(soap, &soap_tmp___ns1__GetLocationInfo, "-ns1:GetLocationInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetLocationInfoResponse)
		return soap_closesock(soap);
	ns1__GetLocationInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetLocationInfoResponse->soap_get(soap, "ns1:GetLocationInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetPassCarInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPassCarInfo *ns1__GetPassCarInfo, _ns1__GetPassCarInfoResponse *ns1__GetPassCarInfoResponse)
{	struct __ns1__GetPassCarInfo soap_tmp___ns1__GetPassCarInfo;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetPassCarInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetPassCarInfo.ns1__GetPassCarInfo = ns1__GetPassCarInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetPassCarInfo(soap, &soap_tmp___ns1__GetPassCarInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetPassCarInfo(soap, &soap_tmp___ns1__GetPassCarInfo, "-ns1:GetPassCarInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetPassCarInfo(soap, &soap_tmp___ns1__GetPassCarInfo, "-ns1:GetPassCarInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetPassCarInfoResponse)
		return soap_closesock(soap);
	ns1__GetPassCarInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetPassCarInfoResponse->soap_get(soap, "ns1:GetPassCarInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetPeccancyInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPeccancyInfo *ns1__GetPeccancyInfo, _ns1__GetPeccancyInfoResponse *ns1__GetPeccancyInfoResponse)
{	struct __ns1__GetPeccancyInfo soap_tmp___ns1__GetPeccancyInfo;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetPeccancyInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetPeccancyInfo.ns1__GetPeccancyInfo = ns1__GetPeccancyInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetPeccancyInfo(soap, &soap_tmp___ns1__GetPeccancyInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetPeccancyInfo(soap, &soap_tmp___ns1__GetPeccancyInfo, "-ns1:GetPeccancyInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetPeccancyInfo(soap, &soap_tmp___ns1__GetPeccancyInfo, "-ns1:GetPeccancyInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetPeccancyInfoResponse)
		return soap_closesock(soap);
	ns1__GetPeccancyInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetPeccancyInfoResponse->soap_get(soap, "ns1:GetPeccancyInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetPeccancyNoCheckInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPeccancyNoCheckInfo *ns1__GetPeccancyNoCheckInfo, _ns1__GetPeccancyNoCheckInfoResponse *ns1__GetPeccancyNoCheckInfoResponse)
{	struct __ns1__GetPeccancyNoCheckInfo soap_tmp___ns1__GetPeccancyNoCheckInfo;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetPeccancyNoCheckInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetPeccancyNoCheckInfo.ns1__GetPeccancyNoCheckInfo = ns1__GetPeccancyNoCheckInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetPeccancyNoCheckInfo(soap, &soap_tmp___ns1__GetPeccancyNoCheckInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetPeccancyNoCheckInfo(soap, &soap_tmp___ns1__GetPeccancyNoCheckInfo, "-ns1:GetPeccancyNoCheckInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetPeccancyNoCheckInfo(soap, &soap_tmp___ns1__GetPeccancyNoCheckInfo, "-ns1:GetPeccancyNoCheckInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetPeccancyNoCheckInfoResponse)
		return soap_closesock(soap);
	ns1__GetPeccancyNoCheckInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetPeccancyNoCheckInfoResponse->soap_get(soap, "ns1:GetPeccancyNoCheckInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__UpdatePeccancyInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__UpdatePeccancyInfo *ns1__UpdatePeccancyInfo, _ns1__UpdatePeccancyInfoResponse *ns1__UpdatePeccancyInfoResponse)
{	struct __ns1__UpdatePeccancyInfo soap_tmp___ns1__UpdatePeccancyInfo;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/UpdatePeccancyInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__UpdatePeccancyInfo.ns1__UpdatePeccancyInfo = ns1__UpdatePeccancyInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__UpdatePeccancyInfo(soap, &soap_tmp___ns1__UpdatePeccancyInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__UpdatePeccancyInfo(soap, &soap_tmp___ns1__UpdatePeccancyInfo, "-ns1:UpdatePeccancyInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__UpdatePeccancyInfo(soap, &soap_tmp___ns1__UpdatePeccancyInfo, "-ns1:UpdatePeccancyInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__UpdatePeccancyInfoResponse)
		return soap_closesock(soap);
	ns1__UpdatePeccancyInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__UpdatePeccancyInfoResponse->soap_get(soap, "ns1:UpdatePeccancyInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetVioPeccancyNoCheckInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetVioPeccancyNoCheckInfo *ns1__GetVioPeccancyNoCheckInfo, _ns1__GetVioPeccancyNoCheckInfoResponse *ns1__GetVioPeccancyNoCheckInfoResponse)
{	struct __ns1__GetVioPeccancyNoCheckInfo soap_tmp___ns1__GetVioPeccancyNoCheckInfo;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetVioPeccancyNoCheckInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetVioPeccancyNoCheckInfo.ns1__GetVioPeccancyNoCheckInfo = ns1__GetVioPeccancyNoCheckInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetVioPeccancyNoCheckInfo(soap, &soap_tmp___ns1__GetVioPeccancyNoCheckInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetVioPeccancyNoCheckInfo(soap, &soap_tmp___ns1__GetVioPeccancyNoCheckInfo, "-ns1:GetVioPeccancyNoCheckInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetVioPeccancyNoCheckInfo(soap, &soap_tmp___ns1__GetVioPeccancyNoCheckInfo, "-ns1:GetVioPeccancyNoCheckInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetVioPeccancyNoCheckInfoResponse)
		return soap_closesock(soap);
	ns1__GetVioPeccancyNoCheckInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetVioPeccancyNoCheckInfoResponse->soap_get(soap, "ns1:GetVioPeccancyNoCheckInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__UpdateVioPeccancyInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__UpdateVioPeccancyInfo *ns1__UpdateVioPeccancyInfo, _ns1__UpdateVioPeccancyInfoResponse *ns1__UpdateVioPeccancyInfoResponse)
{	struct __ns1__UpdateVioPeccancyInfo soap_tmp___ns1__UpdateVioPeccancyInfo;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/UpdateVioPeccancyInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__UpdateVioPeccancyInfo.ns1__UpdateVioPeccancyInfo = ns1__UpdateVioPeccancyInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__UpdateVioPeccancyInfo(soap, &soap_tmp___ns1__UpdateVioPeccancyInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__UpdateVioPeccancyInfo(soap, &soap_tmp___ns1__UpdateVioPeccancyInfo, "-ns1:UpdateVioPeccancyInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__UpdateVioPeccancyInfo(soap, &soap_tmp___ns1__UpdateVioPeccancyInfo, "-ns1:UpdateVioPeccancyInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__UpdateVioPeccancyInfoResponse)
		return soap_closesock(soap);
	ns1__UpdateVioPeccancyInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__UpdateVioPeccancyInfoResponse->soap_get(soap, "ns1:UpdateVioPeccancyInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetAlarmInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetAlarmInfo *ns1__GetAlarmInfo, _ns1__GetAlarmInfoResponse *ns1__GetAlarmInfoResponse)
{	struct __ns1__GetAlarmInfo soap_tmp___ns1__GetAlarmInfo;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetAlarmInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetAlarmInfo.ns1__GetAlarmInfo = ns1__GetAlarmInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAlarmInfo(soap, &soap_tmp___ns1__GetAlarmInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAlarmInfo(soap, &soap_tmp___ns1__GetAlarmInfo, "-ns1:GetAlarmInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAlarmInfo(soap, &soap_tmp___ns1__GetAlarmInfo, "-ns1:GetAlarmInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetAlarmInfoResponse)
		return soap_closesock(soap);
	ns1__GetAlarmInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAlarmInfoResponse->soap_get(soap, "ns1:GetAlarmInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__UpdataDeviceState(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__UpdataDeviceState *ns1__UpdataDeviceState, _ns1__UpdataDeviceStateResponse *ns1__UpdataDeviceStateResponse)
{	struct __ns1__UpdataDeviceState soap_tmp___ns1__UpdataDeviceState;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/UpdataDeviceState";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__UpdataDeviceState.ns1__UpdataDeviceState = ns1__UpdataDeviceState;
	soap_serializeheader(soap);
	soap_serialize___ns1__UpdataDeviceState(soap, &soap_tmp___ns1__UpdataDeviceState);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__UpdataDeviceState(soap, &soap_tmp___ns1__UpdataDeviceState, "-ns1:UpdataDeviceState", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__UpdataDeviceState(soap, &soap_tmp___ns1__UpdataDeviceState, "-ns1:UpdataDeviceState", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__UpdataDeviceStateResponse)
		return soap_closesock(soap);
	ns1__UpdataDeviceStateResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__UpdataDeviceStateResponse->soap_get(soap, "ns1:UpdataDeviceStateResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__InViolationInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__InViolationInfo *ns1__InViolationInfo, _ns1__InViolationInfoResponse *ns1__InViolationInfoResponse)
{	struct __ns1__InViolationInfo soap_tmp___ns1__InViolationInfo;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/InViolationInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__InViolationInfo.ns1__InViolationInfo = ns1__InViolationInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__InViolationInfo(soap, &soap_tmp___ns1__InViolationInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__InViolationInfo(soap, &soap_tmp___ns1__InViolationInfo, "-ns1:InViolationInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__InViolationInfo(soap, &soap_tmp___ns1__InViolationInfo, "-ns1:InViolationInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__InViolationInfoResponse)
		return soap_closesock(soap);
	ns1__InViolationInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__InViolationInfoResponse->soap_get(soap, "ns1:InViolationInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetViolationInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetViolationInfo *ns1__GetViolationInfo, _ns1__GetViolationInfoResponse *ns1__GetViolationInfoResponse)
{	struct __ns1__GetViolationInfo soap_tmp___ns1__GetViolationInfo;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetViolationInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetViolationInfo.ns1__GetViolationInfo = ns1__GetViolationInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetViolationInfo(soap, &soap_tmp___ns1__GetViolationInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetViolationInfo(soap, &soap_tmp___ns1__GetViolationInfo, "-ns1:GetViolationInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetViolationInfo(soap, &soap_tmp___ns1__GetViolationInfo, "-ns1:GetViolationInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetViolationInfoResponse)
		return soap_closesock(soap);
	ns1__GetViolationInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetViolationInfoResponse->soap_get(soap, "ns1:GetViolationInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetJdsbhRecovery(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetJdsbhRecovery *ns1__GetJdsbhRecovery, _ns1__GetJdsbhRecoveryResponse *ns1__GetJdsbhRecoveryResponse)
{	struct __ns1__GetJdsbhRecovery soap_tmp___ns1__GetJdsbhRecovery;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetJdsbhRecovery";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetJdsbhRecovery.ns1__GetJdsbhRecovery = ns1__GetJdsbhRecovery;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetJdsbhRecovery(soap, &soap_tmp___ns1__GetJdsbhRecovery);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetJdsbhRecovery(soap, &soap_tmp___ns1__GetJdsbhRecovery, "-ns1:GetJdsbhRecovery", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetJdsbhRecovery(soap, &soap_tmp___ns1__GetJdsbhRecovery, "-ns1:GetJdsbhRecovery", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetJdsbhRecoveryResponse)
		return soap_closesock(soap);
	ns1__GetJdsbhRecoveryResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetJdsbhRecoveryResponse->soap_get(soap, "ns1:GetJdsbhRecoveryResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetJdsbhRecoveryInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetJdsbhRecoveryInfo *ns1__GetJdsbhRecoveryInfo, _ns1__GetJdsbhRecoveryInfoResponse *ns1__GetJdsbhRecoveryInfoResponse)
{	struct __ns1__GetJdsbhRecoveryInfo soap_tmp___ns1__GetJdsbhRecoveryInfo;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetJdsbhRecoveryInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetJdsbhRecoveryInfo.ns1__GetJdsbhRecoveryInfo = ns1__GetJdsbhRecoveryInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetJdsbhRecoveryInfo(soap, &soap_tmp___ns1__GetJdsbhRecoveryInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetJdsbhRecoveryInfo(soap, &soap_tmp___ns1__GetJdsbhRecoveryInfo, "-ns1:GetJdsbhRecoveryInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetJdsbhRecoveryInfo(soap, &soap_tmp___ns1__GetJdsbhRecoveryInfo, "-ns1:GetJdsbhRecoveryInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetJdsbhRecoveryInfoResponse)
		return soap_closesock(soap);
	ns1__GetJdsbhRecoveryInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetJdsbhRecoveryInfoResponse->soap_get(soap, "ns1:GetJdsbhRecoveryInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__addTransRecInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__addTransRecInfo *ns1__addTransRecInfo, _ns1__addTransRecInfoResponse *ns1__addTransRecInfoResponse)
{	struct __ns1__addTransRecInfo soap_tmp___ns1__addTransRecInfo;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/addTransRecInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__addTransRecInfo.ns1__addTransRecInfo = ns1__addTransRecInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__addTransRecInfo(soap, &soap_tmp___ns1__addTransRecInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__addTransRecInfo(soap, &soap_tmp___ns1__addTransRecInfo, "-ns1:addTransRecInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__addTransRecInfo(soap, &soap_tmp___ns1__addTransRecInfo, "-ns1:addTransRecInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__addTransRecInfoResponse)
		return soap_closesock(soap);
	ns1__addTransRecInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__addTransRecInfoResponse->soap_get(soap, "ns1:addTransRecInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__CheckUserInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__CheckUserInfo *ns1__CheckUserInfo, _ns1__CheckUserInfoResponse *ns1__CheckUserInfoResponse)
{	struct __ns1__CheckUserInfo soap_tmp___ns1__CheckUserInfo;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/CheckUserInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__CheckUserInfo.ns1__CheckUserInfo = ns1__CheckUserInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__CheckUserInfo(soap, &soap_tmp___ns1__CheckUserInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CheckUserInfo(soap, &soap_tmp___ns1__CheckUserInfo, "-ns1:CheckUserInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CheckUserInfo(soap, &soap_tmp___ns1__CheckUserInfo, "-ns1:CheckUserInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__CheckUserInfoResponse)
		return soap_closesock(soap);
	ns1__CheckUserInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CheckUserInfoResponse->soap_get(soap, "ns1:CheckUserInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__WebserviceTest_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__WebserviceTest *ns1__WebserviceTest, _ns1__WebserviceTestResponse *ns1__WebserviceTestResponse)
{	struct __ns1__WebserviceTest_ soap_tmp___ns1__WebserviceTest_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/WebserviceTest";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__WebserviceTest_.ns1__WebserviceTest = ns1__WebserviceTest;
	soap_serializeheader(soap);
	soap_serialize___ns1__WebserviceTest_(soap, &soap_tmp___ns1__WebserviceTest_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__WebserviceTest_(soap, &soap_tmp___ns1__WebserviceTest_, "-ns1:WebserviceTest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__WebserviceTest_(soap, &soap_tmp___ns1__WebserviceTest_, "-ns1:WebserviceTest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__WebserviceTestResponse)
		return soap_closesock(soap);
	ns1__WebserviceTestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__WebserviceTestResponse->soap_get(soap, "ns1:WebserviceTestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetCurrentVersion_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetCurrentVersion *ns1__GetCurrentVersion, _ns1__GetCurrentVersionResponse *ns1__GetCurrentVersionResponse)
{	struct __ns1__GetCurrentVersion_ soap_tmp___ns1__GetCurrentVersion_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetCurrentVersion";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetCurrentVersion_.ns1__GetCurrentVersion = ns1__GetCurrentVersion;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetCurrentVersion_(soap, &soap_tmp___ns1__GetCurrentVersion_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetCurrentVersion_(soap, &soap_tmp___ns1__GetCurrentVersion_, "-ns1:GetCurrentVersion", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetCurrentVersion_(soap, &soap_tmp___ns1__GetCurrentVersion_, "-ns1:GetCurrentVersion", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetCurrentVersionResponse)
		return soap_closesock(soap);
	ns1__GetCurrentVersionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetCurrentVersionResponse->soap_get(soap, "ns1:GetCurrentVersionResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetXMlFormat_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetXMlFormat *ns1__GetXMlFormat, _ns1__GetXMlFormatResponse *ns1__GetXMlFormatResponse)
{	struct __ns1__GetXMlFormat_ soap_tmp___ns1__GetXMlFormat_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetXMlFormat";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetXMlFormat_.ns1__GetXMlFormat = ns1__GetXMlFormat;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetXMlFormat_(soap, &soap_tmp___ns1__GetXMlFormat_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetXMlFormat_(soap, &soap_tmp___ns1__GetXMlFormat_, "-ns1:GetXMlFormat", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetXMlFormat_(soap, &soap_tmp___ns1__GetXMlFormat_, "-ns1:GetXMlFormat", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetXMlFormatResponse)
		return soap_closesock(soap);
	ns1__GetXMlFormatResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetXMlFormatResponse->soap_get(soap, "ns1:GetXMlFormatResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__CarPlateRecog_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__CarPlateRecog *ns1__CarPlateRecog, _ns1__CarPlateRecogResponse *ns1__CarPlateRecogResponse)
{	struct __ns1__CarPlateRecog_ soap_tmp___ns1__CarPlateRecog_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/CarPlateRecog";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__CarPlateRecog_.ns1__CarPlateRecog = ns1__CarPlateRecog;
	soap_serializeheader(soap);
	soap_serialize___ns1__CarPlateRecog_(soap, &soap_tmp___ns1__CarPlateRecog_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CarPlateRecog_(soap, &soap_tmp___ns1__CarPlateRecog_, "-ns1:CarPlateRecog", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CarPlateRecog_(soap, &soap_tmp___ns1__CarPlateRecog_, "-ns1:CarPlateRecog", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__CarPlateRecogResponse)
		return soap_closesock(soap);
	ns1__CarPlateRecogResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CarPlateRecogResponse->soap_get(soap, "ns1:CarPlateRecogResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__InPassCarInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__InPassCarInfo *ns1__InPassCarInfo, _ns1__InPassCarInfoResponse *ns1__InPassCarInfoResponse)
{	struct __ns1__InPassCarInfo_ soap_tmp___ns1__InPassCarInfo_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/InPassCarInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__InPassCarInfo_.ns1__InPassCarInfo = ns1__InPassCarInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__InPassCarInfo_(soap, &soap_tmp___ns1__InPassCarInfo_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__InPassCarInfo_(soap, &soap_tmp___ns1__InPassCarInfo_, "-ns1:InPassCarInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__InPassCarInfo_(soap, &soap_tmp___ns1__InPassCarInfo_, "-ns1:InPassCarInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__InPassCarInfoResponse)
		return soap_closesock(soap);
	ns1__InPassCarInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__InPassCarInfoResponse->soap_get(soap, "ns1:InPassCarInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__InPeccancyInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__InPeccancyInfo *ns1__InPeccancyInfo, _ns1__InPeccancyInfoResponse *ns1__InPeccancyInfoResponse)
{	struct __ns1__InPeccancyInfo_ soap_tmp___ns1__InPeccancyInfo_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/InPeccancyInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__InPeccancyInfo_.ns1__InPeccancyInfo = ns1__InPeccancyInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__InPeccancyInfo_(soap, &soap_tmp___ns1__InPeccancyInfo_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__InPeccancyInfo_(soap, &soap_tmp___ns1__InPeccancyInfo_, "-ns1:InPeccancyInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__InPeccancyInfo_(soap, &soap_tmp___ns1__InPeccancyInfo_, "-ns1:InPeccancyInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__InPeccancyInfoResponse)
		return soap_closesock(soap);
	ns1__InPeccancyInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__InPeccancyInfoResponse->soap_get(soap, "ns1:InPeccancyInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__InCheckedPeccancyInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__InCheckedPeccancyInfo *ns1__InCheckedPeccancyInfo, _ns1__InCheckedPeccancyInfoResponse *ns1__InCheckedPeccancyInfoResponse)
{	struct __ns1__InCheckedPeccancyInfo_ soap_tmp___ns1__InCheckedPeccancyInfo_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/InCheckedPeccancyInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__InCheckedPeccancyInfo_.ns1__InCheckedPeccancyInfo = ns1__InCheckedPeccancyInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__InCheckedPeccancyInfo_(soap, &soap_tmp___ns1__InCheckedPeccancyInfo_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__InCheckedPeccancyInfo_(soap, &soap_tmp___ns1__InCheckedPeccancyInfo_, "-ns1:InCheckedPeccancyInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__InCheckedPeccancyInfo_(soap, &soap_tmp___ns1__InCheckedPeccancyInfo_, "-ns1:InCheckedPeccancyInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__InCheckedPeccancyInfoResponse)
		return soap_closesock(soap);
	ns1__InCheckedPeccancyInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__InCheckedPeccancyInfoResponse->soap_get(soap, "ns1:InCheckedPeccancyInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__InBlacklistInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__InBlacklistInfo *ns1__InBlacklistInfo, _ns1__InBlacklistInfoResponse *ns1__InBlacklistInfoResponse)
{	struct __ns1__InBlacklistInfo_ soap_tmp___ns1__InBlacklistInfo_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/InBlacklistInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__InBlacklistInfo_.ns1__InBlacklistInfo = ns1__InBlacklistInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__InBlacklistInfo_(soap, &soap_tmp___ns1__InBlacklistInfo_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__InBlacklistInfo_(soap, &soap_tmp___ns1__InBlacklistInfo_, "-ns1:InBlacklistInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__InBlacklistInfo_(soap, &soap_tmp___ns1__InBlacklistInfo_, "-ns1:InBlacklistInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__InBlacklistInfoResponse)
		return soap_closesock(soap);
	ns1__InBlacklistInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__InBlacklistInfoResponse->soap_get(soap, "ns1:InBlacklistInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__InChecklessInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__InChecklessInfo *ns1__InChecklessInfo, _ns1__InChecklessInfoResponse *ns1__InChecklessInfoResponse)
{	struct __ns1__InChecklessInfo_ soap_tmp___ns1__InChecklessInfo_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/InChecklessInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__InChecklessInfo_.ns1__InChecklessInfo = ns1__InChecklessInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__InChecklessInfo_(soap, &soap_tmp___ns1__InChecklessInfo_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__InChecklessInfo_(soap, &soap_tmp___ns1__InChecklessInfo_, "-ns1:InChecklessInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__InChecklessInfo_(soap, &soap_tmp___ns1__InChecklessInfo_, "-ns1:InChecklessInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__InChecklessInfoResponse)
		return soap_closesock(soap);
	ns1__InChecklessInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__InChecklessInfoResponse->soap_get(soap, "ns1:InChecklessInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__IntExtralistInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__IntExtralistInfo *ns1__IntExtralistInfo, _ns1__IntExtralistInfoResponse *ns1__IntExtralistInfoResponse)
{	struct __ns1__IntExtralistInfo_ soap_tmp___ns1__IntExtralistInfo_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/IntExtralistInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__IntExtralistInfo_.ns1__IntExtralistInfo = ns1__IntExtralistInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__IntExtralistInfo_(soap, &soap_tmp___ns1__IntExtralistInfo_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__IntExtralistInfo_(soap, &soap_tmp___ns1__IntExtralistInfo_, "-ns1:IntExtralistInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__IntExtralistInfo_(soap, &soap_tmp___ns1__IntExtralistInfo_, "-ns1:IntExtralistInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__IntExtralistInfoResponse)
		return soap_closesock(soap);
	ns1__IntExtralistInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__IntExtralistInfoResponse->soap_get(soap, "ns1:IntExtralistInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__InSuspicionInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__InSuspicionInfo *ns1__InSuspicionInfo, _ns1__InSuspicionInfoResponse *ns1__InSuspicionInfoResponse)
{	struct __ns1__InSuspicionInfo_ soap_tmp___ns1__InSuspicionInfo_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/InSuspicionInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__InSuspicionInfo_.ns1__InSuspicionInfo = ns1__InSuspicionInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__InSuspicionInfo_(soap, &soap_tmp___ns1__InSuspicionInfo_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__InSuspicionInfo_(soap, &soap_tmp___ns1__InSuspicionInfo_, "-ns1:InSuspicionInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__InSuspicionInfo_(soap, &soap_tmp___ns1__InSuspicionInfo_, "-ns1:InSuspicionInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__InSuspicionInfoResponse)
		return soap_closesock(soap);
	ns1__InSuspicionInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__InSuspicionInfoResponse->soap_get(soap, "ns1:InSuspicionInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__RevokeSuspicionInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__RevokeSuspicionInfo *ns1__RevokeSuspicionInfo, _ns1__RevokeSuspicionInfoResponse *ns1__RevokeSuspicionInfoResponse)
{	struct __ns1__RevokeSuspicionInfo_ soap_tmp___ns1__RevokeSuspicionInfo_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/RevokeSuspicionInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__RevokeSuspicionInfo_.ns1__RevokeSuspicionInfo = ns1__RevokeSuspicionInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__RevokeSuspicionInfo_(soap, &soap_tmp___ns1__RevokeSuspicionInfo_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__RevokeSuspicionInfo_(soap, &soap_tmp___ns1__RevokeSuspicionInfo_, "-ns1:RevokeSuspicionInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__RevokeSuspicionInfo_(soap, &soap_tmp___ns1__RevokeSuspicionInfo_, "-ns1:RevokeSuspicionInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__RevokeSuspicionInfoResponse)
		return soap_closesock(soap);
	ns1__RevokeSuspicionInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RevokeSuspicionInfoResponse->soap_get(soap, "ns1:RevokeSuspicionInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetLocationInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetLocationInfo *ns1__GetLocationInfo, _ns1__GetLocationInfoResponse *ns1__GetLocationInfoResponse)
{	struct __ns1__GetLocationInfo_ soap_tmp___ns1__GetLocationInfo_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetLocationInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetLocationInfo_.ns1__GetLocationInfo = ns1__GetLocationInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetLocationInfo_(soap, &soap_tmp___ns1__GetLocationInfo_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetLocationInfo_(soap, &soap_tmp___ns1__GetLocationInfo_, "-ns1:GetLocationInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetLocationInfo_(soap, &soap_tmp___ns1__GetLocationInfo_, "-ns1:GetLocationInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetLocationInfoResponse)
		return soap_closesock(soap);
	ns1__GetLocationInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetLocationInfoResponse->soap_get(soap, "ns1:GetLocationInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetPassCarInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPassCarInfo *ns1__GetPassCarInfo, _ns1__GetPassCarInfoResponse *ns1__GetPassCarInfoResponse)
{	struct __ns1__GetPassCarInfo_ soap_tmp___ns1__GetPassCarInfo_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetPassCarInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetPassCarInfo_.ns1__GetPassCarInfo = ns1__GetPassCarInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetPassCarInfo_(soap, &soap_tmp___ns1__GetPassCarInfo_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetPassCarInfo_(soap, &soap_tmp___ns1__GetPassCarInfo_, "-ns1:GetPassCarInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetPassCarInfo_(soap, &soap_tmp___ns1__GetPassCarInfo_, "-ns1:GetPassCarInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetPassCarInfoResponse)
		return soap_closesock(soap);
	ns1__GetPassCarInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetPassCarInfoResponse->soap_get(soap, "ns1:GetPassCarInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetPeccancyInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPeccancyInfo *ns1__GetPeccancyInfo, _ns1__GetPeccancyInfoResponse *ns1__GetPeccancyInfoResponse)
{	struct __ns1__GetPeccancyInfo_ soap_tmp___ns1__GetPeccancyInfo_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetPeccancyInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetPeccancyInfo_.ns1__GetPeccancyInfo = ns1__GetPeccancyInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetPeccancyInfo_(soap, &soap_tmp___ns1__GetPeccancyInfo_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetPeccancyInfo_(soap, &soap_tmp___ns1__GetPeccancyInfo_, "-ns1:GetPeccancyInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetPeccancyInfo_(soap, &soap_tmp___ns1__GetPeccancyInfo_, "-ns1:GetPeccancyInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetPeccancyInfoResponse)
		return soap_closesock(soap);
	ns1__GetPeccancyInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetPeccancyInfoResponse->soap_get(soap, "ns1:GetPeccancyInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetPeccancyNoCheckInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPeccancyNoCheckInfo *ns1__GetPeccancyNoCheckInfo, _ns1__GetPeccancyNoCheckInfoResponse *ns1__GetPeccancyNoCheckInfoResponse)
{	struct __ns1__GetPeccancyNoCheckInfo_ soap_tmp___ns1__GetPeccancyNoCheckInfo_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetPeccancyNoCheckInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetPeccancyNoCheckInfo_.ns1__GetPeccancyNoCheckInfo = ns1__GetPeccancyNoCheckInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetPeccancyNoCheckInfo_(soap, &soap_tmp___ns1__GetPeccancyNoCheckInfo_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetPeccancyNoCheckInfo_(soap, &soap_tmp___ns1__GetPeccancyNoCheckInfo_, "-ns1:GetPeccancyNoCheckInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetPeccancyNoCheckInfo_(soap, &soap_tmp___ns1__GetPeccancyNoCheckInfo_, "-ns1:GetPeccancyNoCheckInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetPeccancyNoCheckInfoResponse)
		return soap_closesock(soap);
	ns1__GetPeccancyNoCheckInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetPeccancyNoCheckInfoResponse->soap_get(soap, "ns1:GetPeccancyNoCheckInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__UpdatePeccancyInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__UpdatePeccancyInfo *ns1__UpdatePeccancyInfo, _ns1__UpdatePeccancyInfoResponse *ns1__UpdatePeccancyInfoResponse)
{	struct __ns1__UpdatePeccancyInfo_ soap_tmp___ns1__UpdatePeccancyInfo_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/UpdatePeccancyInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__UpdatePeccancyInfo_.ns1__UpdatePeccancyInfo = ns1__UpdatePeccancyInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__UpdatePeccancyInfo_(soap, &soap_tmp___ns1__UpdatePeccancyInfo_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__UpdatePeccancyInfo_(soap, &soap_tmp___ns1__UpdatePeccancyInfo_, "-ns1:UpdatePeccancyInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__UpdatePeccancyInfo_(soap, &soap_tmp___ns1__UpdatePeccancyInfo_, "-ns1:UpdatePeccancyInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__UpdatePeccancyInfoResponse)
		return soap_closesock(soap);
	ns1__UpdatePeccancyInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__UpdatePeccancyInfoResponse->soap_get(soap, "ns1:UpdatePeccancyInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetVioPeccancyNoCheckInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetVioPeccancyNoCheckInfo *ns1__GetVioPeccancyNoCheckInfo, _ns1__GetVioPeccancyNoCheckInfoResponse *ns1__GetVioPeccancyNoCheckInfoResponse)
{	struct __ns1__GetVioPeccancyNoCheckInfo_ soap_tmp___ns1__GetVioPeccancyNoCheckInfo_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetVioPeccancyNoCheckInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetVioPeccancyNoCheckInfo_.ns1__GetVioPeccancyNoCheckInfo = ns1__GetVioPeccancyNoCheckInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetVioPeccancyNoCheckInfo_(soap, &soap_tmp___ns1__GetVioPeccancyNoCheckInfo_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetVioPeccancyNoCheckInfo_(soap, &soap_tmp___ns1__GetVioPeccancyNoCheckInfo_, "-ns1:GetVioPeccancyNoCheckInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetVioPeccancyNoCheckInfo_(soap, &soap_tmp___ns1__GetVioPeccancyNoCheckInfo_, "-ns1:GetVioPeccancyNoCheckInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetVioPeccancyNoCheckInfoResponse)
		return soap_closesock(soap);
	ns1__GetVioPeccancyNoCheckInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetVioPeccancyNoCheckInfoResponse->soap_get(soap, "ns1:GetVioPeccancyNoCheckInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__UpdateVioPeccancyInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__UpdateVioPeccancyInfo *ns1__UpdateVioPeccancyInfo, _ns1__UpdateVioPeccancyInfoResponse *ns1__UpdateVioPeccancyInfoResponse)
{	struct __ns1__UpdateVioPeccancyInfo_ soap_tmp___ns1__UpdateVioPeccancyInfo_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/UpdateVioPeccancyInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__UpdateVioPeccancyInfo_.ns1__UpdateVioPeccancyInfo = ns1__UpdateVioPeccancyInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__UpdateVioPeccancyInfo_(soap, &soap_tmp___ns1__UpdateVioPeccancyInfo_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__UpdateVioPeccancyInfo_(soap, &soap_tmp___ns1__UpdateVioPeccancyInfo_, "-ns1:UpdateVioPeccancyInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__UpdateVioPeccancyInfo_(soap, &soap_tmp___ns1__UpdateVioPeccancyInfo_, "-ns1:UpdateVioPeccancyInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__UpdateVioPeccancyInfoResponse)
		return soap_closesock(soap);
	ns1__UpdateVioPeccancyInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__UpdateVioPeccancyInfoResponse->soap_get(soap, "ns1:UpdateVioPeccancyInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetAlarmInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetAlarmInfo *ns1__GetAlarmInfo, _ns1__GetAlarmInfoResponse *ns1__GetAlarmInfoResponse)
{	struct __ns1__GetAlarmInfo_ soap_tmp___ns1__GetAlarmInfo_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetAlarmInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetAlarmInfo_.ns1__GetAlarmInfo = ns1__GetAlarmInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAlarmInfo_(soap, &soap_tmp___ns1__GetAlarmInfo_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAlarmInfo_(soap, &soap_tmp___ns1__GetAlarmInfo_, "-ns1:GetAlarmInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAlarmInfo_(soap, &soap_tmp___ns1__GetAlarmInfo_, "-ns1:GetAlarmInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetAlarmInfoResponse)
		return soap_closesock(soap);
	ns1__GetAlarmInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAlarmInfoResponse->soap_get(soap, "ns1:GetAlarmInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__UpdataDeviceState_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__UpdataDeviceState *ns1__UpdataDeviceState, _ns1__UpdataDeviceStateResponse *ns1__UpdataDeviceStateResponse)
{	struct __ns1__UpdataDeviceState_ soap_tmp___ns1__UpdataDeviceState_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/UpdataDeviceState";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__UpdataDeviceState_.ns1__UpdataDeviceState = ns1__UpdataDeviceState;
	soap_serializeheader(soap);
	soap_serialize___ns1__UpdataDeviceState_(soap, &soap_tmp___ns1__UpdataDeviceState_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__UpdataDeviceState_(soap, &soap_tmp___ns1__UpdataDeviceState_, "-ns1:UpdataDeviceState", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__UpdataDeviceState_(soap, &soap_tmp___ns1__UpdataDeviceState_, "-ns1:UpdataDeviceState", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__UpdataDeviceStateResponse)
		return soap_closesock(soap);
	ns1__UpdataDeviceStateResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__UpdataDeviceStateResponse->soap_get(soap, "ns1:UpdataDeviceStateResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__InViolationInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__InViolationInfo *ns1__InViolationInfo, _ns1__InViolationInfoResponse *ns1__InViolationInfoResponse)
{	struct __ns1__InViolationInfo_ soap_tmp___ns1__InViolationInfo_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/InViolationInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__InViolationInfo_.ns1__InViolationInfo = ns1__InViolationInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__InViolationInfo_(soap, &soap_tmp___ns1__InViolationInfo_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__InViolationInfo_(soap, &soap_tmp___ns1__InViolationInfo_, "-ns1:InViolationInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__InViolationInfo_(soap, &soap_tmp___ns1__InViolationInfo_, "-ns1:InViolationInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__InViolationInfoResponse)
		return soap_closesock(soap);
	ns1__InViolationInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__InViolationInfoResponse->soap_get(soap, "ns1:InViolationInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetViolationInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetViolationInfo *ns1__GetViolationInfo, _ns1__GetViolationInfoResponse *ns1__GetViolationInfoResponse)
{	struct __ns1__GetViolationInfo_ soap_tmp___ns1__GetViolationInfo_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetViolationInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetViolationInfo_.ns1__GetViolationInfo = ns1__GetViolationInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetViolationInfo_(soap, &soap_tmp___ns1__GetViolationInfo_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetViolationInfo_(soap, &soap_tmp___ns1__GetViolationInfo_, "-ns1:GetViolationInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetViolationInfo_(soap, &soap_tmp___ns1__GetViolationInfo_, "-ns1:GetViolationInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetViolationInfoResponse)
		return soap_closesock(soap);
	ns1__GetViolationInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetViolationInfoResponse->soap_get(soap, "ns1:GetViolationInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetJdsbhRecovery_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetJdsbhRecovery *ns1__GetJdsbhRecovery, _ns1__GetJdsbhRecoveryResponse *ns1__GetJdsbhRecoveryResponse)
{	struct __ns1__GetJdsbhRecovery_ soap_tmp___ns1__GetJdsbhRecovery_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetJdsbhRecovery";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetJdsbhRecovery_.ns1__GetJdsbhRecovery = ns1__GetJdsbhRecovery;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetJdsbhRecovery_(soap, &soap_tmp___ns1__GetJdsbhRecovery_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetJdsbhRecovery_(soap, &soap_tmp___ns1__GetJdsbhRecovery_, "-ns1:GetJdsbhRecovery", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetJdsbhRecovery_(soap, &soap_tmp___ns1__GetJdsbhRecovery_, "-ns1:GetJdsbhRecovery", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetJdsbhRecoveryResponse)
		return soap_closesock(soap);
	ns1__GetJdsbhRecoveryResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetJdsbhRecoveryResponse->soap_get(soap, "ns1:GetJdsbhRecoveryResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetJdsbhRecoveryInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetJdsbhRecoveryInfo *ns1__GetJdsbhRecoveryInfo, _ns1__GetJdsbhRecoveryInfoResponse *ns1__GetJdsbhRecoveryInfoResponse)
{	struct __ns1__GetJdsbhRecoveryInfo_ soap_tmp___ns1__GetJdsbhRecoveryInfo_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetJdsbhRecoveryInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetJdsbhRecoveryInfo_.ns1__GetJdsbhRecoveryInfo = ns1__GetJdsbhRecoveryInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetJdsbhRecoveryInfo_(soap, &soap_tmp___ns1__GetJdsbhRecoveryInfo_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetJdsbhRecoveryInfo_(soap, &soap_tmp___ns1__GetJdsbhRecoveryInfo_, "-ns1:GetJdsbhRecoveryInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetJdsbhRecoveryInfo_(soap, &soap_tmp___ns1__GetJdsbhRecoveryInfo_, "-ns1:GetJdsbhRecoveryInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetJdsbhRecoveryInfoResponse)
		return soap_closesock(soap);
	ns1__GetJdsbhRecoveryInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetJdsbhRecoveryInfoResponse->soap_get(soap, "ns1:GetJdsbhRecoveryInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__addTransRecInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__addTransRecInfo *ns1__addTransRecInfo, _ns1__addTransRecInfoResponse *ns1__addTransRecInfoResponse)
{	struct __ns1__addTransRecInfo_ soap_tmp___ns1__addTransRecInfo_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/addTransRecInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__addTransRecInfo_.ns1__addTransRecInfo = ns1__addTransRecInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__addTransRecInfo_(soap, &soap_tmp___ns1__addTransRecInfo_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__addTransRecInfo_(soap, &soap_tmp___ns1__addTransRecInfo_, "-ns1:addTransRecInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__addTransRecInfo_(soap, &soap_tmp___ns1__addTransRecInfo_, "-ns1:addTransRecInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__addTransRecInfoResponse)
		return soap_closesock(soap);
	ns1__addTransRecInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__addTransRecInfoResponse->soap_get(soap, "ns1:addTransRecInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__CheckUserInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__CheckUserInfo *ns1__CheckUserInfo, _ns1__CheckUserInfoResponse *ns1__CheckUserInfoResponse)
{	struct __ns1__CheckUserInfo_ soap_tmp___ns1__CheckUserInfo_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.10.4/Ehl.Atms.Tgs.WebService/OpenInterface.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/CheckUserInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__CheckUserInfo_.ns1__CheckUserInfo = ns1__CheckUserInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__CheckUserInfo_(soap, &soap_tmp___ns1__CheckUserInfo_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CheckUserInfo_(soap, &soap_tmp___ns1__CheckUserInfo_, "-ns1:CheckUserInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CheckUserInfo_(soap, &soap_tmp___ns1__CheckUserInfo_, "-ns1:CheckUserInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__CheckUserInfoResponse)
		return soap_closesock(soap);
	ns1__CheckUserInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CheckUserInfoResponse->soap_get(soap, "ns1:CheckUserInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

#if defined(__BORLANDC__)
#pragma option pop
#pragma option pop
#endif

/* End of soapClient.cpp */
